From 0d0eea8970b22827673c8e0ce7e4a146616c63f8 Mon Sep 17 00:00:00 2001
From: Luo Junhuan <luojunhuan@openthos.org>
Date: Fri, 24 Aug 2018 09:25:05 +0000
Subject: [PATCH 055/110] Oreo: frameworks: base: SystemUI: Optimize the
 logical between StartupMenu to taskbar

Support to open menu dialog with long click

Support hover event in taskbar's icon

Signed-off-by: Luo Junhuan <luojunhuan@openthos.org>
---
 .../res/drawable-hdpi/startmenu_arrow_white.png    | Bin 0 -> 300 bytes
 .../res/drawable-hdpi/startmenu_computer.png       | Bin 0 -> 169 bytes
 .../res/drawable-hdpi/startmenu_down_arrow.png     | Bin 0 -> 719 bytes
 .../SystemUI/res/drawable-hdpi/startmenu_icon.png  | Bin 0 -> 3016 bytes
 .../SystemUI/res/drawable-hdpi/startmenu_power.png | Bin 0 -> 399 bytes
 .../res/drawable-hdpi/startmenu_search.png         | Bin 0 -> 1023 bytes
 .../res/drawable-hdpi/startmenu_setting.png        | Bin 0 -> 467 bytes
 .../res/drawable-hdpi/startmenu_up_arrow.png       | Bin 0 -> 312 bytes
 .../SystemUI/res/drawable/checkbox_checked.png     | Bin 0 -> 4486 bytes
 .../SystemUI/res/drawable/checkbox_selector.xml    |   5 +
 .../SystemUI/res/drawable/checkbox_unchecked.png   | Bin 0 -> 4557 bytes
 packages/SystemUI/res/drawable/input_bg.xml        |   2 +-
 packages/SystemUI/res/drawable/startmenu_icon.png  | Bin 0 -> 3016 bytes
 .../res/drawable/startmenu_left_background.png     | Bin 0 -> 175 bytes
 .../res/drawable/startmenu_left_item_selector.xml  |   5 +
 .../res/drawable/startmenu_right_item_selector.xml |   5 +
 .../res/drawable/statusbar_img_hover_select.xml    |   2 +-
 .../res/drawable/statusbar_switch_input_method.png | Bin 0 -> 16973 bytes
 .../res/drawable/trusted_state_to_error.xml        |   0
 .../drawable/trusted_state_to_error_animation.xml  |   0
 packages/SystemUI/res/layout/menu_dialog_item.xml  |   9 +-
 .../SystemUI/res/layout/openthos_status_bar.xml    | 104 ++--
 .../SystemUI/res/layout/popupwindows_calendar.xml  |  57 ++-
 packages/SystemUI/res/layout/ringer_volume.xml     |   2 +-
 packages/SystemUI/res/layout/row.xml               |  50 --
 packages/SystemUI/res/layout/row_alt.xml           |  48 --
 packages/SystemUI/res/layout/sort_pop_layout.xml   |  28 --
 packages/SystemUI/res/layout/start_menu_left.xml   | 223 ---------
 .../SystemUI/res/layout/startmenu_dialog_menu.xml  |  12 +
 .../SystemUI/res/layout/startmenu_item_column.xml  |  34 ++
 .../SystemUI/res/layout/startmenu_item_dialog.xml  |  11 +
 .../SystemUI/res/layout/startmenu_item_row.xml     |  36 ++
 packages/SystemUI/res/layout/startup_menu.xml      | 200 ++++++++
 .../SystemUI/res/layout/status_bar_battery.xml     |  14 +-
 .../res/layout/status_bar_input_method.xml         |   5 +-
 .../res/layout/status_bar_inputmethod_item.xml     |   8 +-
 .../res/layout/statusbar_activity_button.xml       |  35 --
 .../SystemUI/res/layout/taskbar_button_layout.xml  |  36 ++
 packages/SystemUI/res/layout/wifi_content.xml      |  12 +-
 packages/SystemUI/res/layout/wifi_list.xml         |  29 +-
 .../res/mipmap-hdpi/ic_start_menu_down_arrow.png   | Bin 719 -> 0 bytes
 .../res/mipmap-hdpi/ic_start_menu_up_arrow.png     | Bin 312 -> 0 bytes
 .../SystemUI/res/mipmap-hdpi/ic_starter_search.png | Bin 438 -> 0 bytes
 .../res/mipmap-hdpi/ic_starter_top_arrow_white.png | Bin 300 -> 0 bytes
 .../res/mipmap-hdpi/startup_menuicon_computer.png  | Bin 169 -> 0 bytes
 .../res/mipmap-hdpi/startup_menuicon_power.png     | Bin 399 -> 0 bytes
 .../res/mipmap-hdpi/startup_menuicon_setting.png   | Bin 467 -> 0 bytes
 packages/SystemUI/res/values-zh-rCN/strings.xml    |  13 +-
 packages/SystemUI/res/values/arrays.xml            |  33 +-
 packages/SystemUI/res/values/attrs.xml             |   4 +
 packages/SystemUI/res/values/colors.xml            |  10 +-
 packages/SystemUI/res/values/dimens.xml            |  39 +-
 packages/SystemUI/res/values/strings.xml           |  19 +-
 packages/SystemUI/res/values/styles.xml            |  38 +-
 .../com/android/systemui/dialog/BaseDialog.java    |   7 +-
 .../com/android/systemui/dialog/CalendarView.java  |   2 +-
 .../com/android/systemui/dialog/DialogType.java    |   9 +
 .../com/android/systemui/dialog/MenuDialog.java    | 191 ++++----
 .../android/systemui/dialog/StartupMenuDialog.java | 534 +--------------------
 .../com/android/systemui/dialog/TaskbarIcon.java   | 100 ----
 .../com/android/systemui/dialog/WifiDialog.java    |   8 +-
 .../com/android/systemui/sql/SqliteOpenHelper.java |  49 --
 .../com/android/systemui/sql/SqliteOperate.java    |  76 ---
 .../systemui/sql/StartMenuDatabaseField.java       |  15 -
 .../com/android/systemui/sql/TaskbarIconField.java |  12 -
 .../android/systemui/startupmenu/AppAdapter.java   | 159 ++++++
 .../com/android/systemui/startupmenu/AppEntry.java | 137 ------
 .../android/systemui/startupmenu/DialogType.java   |   9 -
 .../systemui/startupmenu/LaunchAppUtil.java        |   2 -
 .../com/android/systemui/startupmenu/ShowType.java |   9 -
 .../startupmenu/SortSelectPopupWindow.java         | 104 ----
 .../systemui/startupmenu/SqliteOpenHelper.java     | 229 +++++++++
 .../systemui/startupmenu/StartMenuAdapter.java     | 207 --------
 .../systemui/startupmenu/StartupMenuView.java      | 501 +++++++++++++++++++
 .../android/systemui/startupmenu/bean/AppInfo.java | 153 ++++++
 .../android/systemui/startupmenu/bean/Type.java    |   5 +
 .../startupmenu/listener/DataCallback.java         |   9 +
 .../startupmenu/listener/OnClickCallback.java      |   9 +
 .../systemui/startupmenu/listener/OnMenuClick.java |  12 +
 .../startupmenu/utils/AppOperateManager.java       | 130 +++++
 .../statusbar/phone/OpenthosStatusBarView.java     |  85 ++--
 .../systemui/statusbar/phone/StatusBar.java        | 469 ++++++++----------
 .../systemui/statusbar/view/ScapeImageView.java    |  38 ++
 .../systemui/statusbar/view/SquareFrameLayout.java |  24 +
 .../systemui/statusbar/view/TaskBarIcon.java       | 231 +++++++++
 85 files changed, 2449 insertions(+), 2204 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_arrow_white.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_computer.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_down_arrow.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_icon.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_power.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_search.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_setting.png
 create mode 100644 packages/SystemUI/res/drawable-hdpi/startmenu_up_arrow.png
 create mode 100644 packages/SystemUI/res/drawable/checkbox_checked.png
 create mode 100644 packages/SystemUI/res/drawable/checkbox_selector.xml
 create mode 100644 packages/SystemUI/res/drawable/checkbox_unchecked.png
 create mode 100644 packages/SystemUI/res/drawable/startmenu_icon.png
 create mode 100644 packages/SystemUI/res/drawable/startmenu_left_background.png
 create mode 100644 packages/SystemUI/res/drawable/startmenu_left_item_selector.xml
 create mode 100644 packages/SystemUI/res/drawable/startmenu_right_item_selector.xml
 create mode 100644 packages/SystemUI/res/drawable/statusbar_switch_input_method.png
 mode change 100755 => 100644 packages/SystemUI/res/drawable/trusted_state_to_error.xml
 mode change 100755 => 100644 packages/SystemUI/res/drawable/trusted_state_to_error_animation.xml
 delete mode 100644 packages/SystemUI/res/layout/row.xml
 delete mode 100644 packages/SystemUI/res/layout/row_alt.xml
 delete mode 100644 packages/SystemUI/res/layout/sort_pop_layout.xml
 delete mode 100644 packages/SystemUI/res/layout/start_menu_left.xml
 create mode 100644 packages/SystemUI/res/layout/startmenu_dialog_menu.xml
 create mode 100644 packages/SystemUI/res/layout/startmenu_item_column.xml
 create mode 100644 packages/SystemUI/res/layout/startmenu_item_dialog.xml
 create mode 100644 packages/SystemUI/res/layout/startmenu_item_row.xml
 create mode 100644 packages/SystemUI/res/layout/startup_menu.xml
 delete mode 100644 packages/SystemUI/res/layout/statusbar_activity_button.xml
 create mode 100644 packages/SystemUI/res/layout/taskbar_button_layout.xml
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/ic_start_menu_down_arrow.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/ic_start_menu_up_arrow.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/ic_starter_search.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/ic_starter_top_arrow_white.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/startup_menuicon_computer.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/startup_menuicon_power.png
 delete mode 100644 packages/SystemUI/res/mipmap-hdpi/startup_menuicon_setting.png
 create mode 100644 packages/SystemUI/src/com/android/systemui/dialog/DialogType.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/dialog/TaskbarIcon.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/sql/SqliteOpenHelper.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/sql/SqliteOperate.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/sql/StartMenuDatabaseField.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/sql/TaskbarIconField.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/AppAdapter.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/AppEntry.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/DialogType.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/ShowType.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/SortSelectPopupWindow.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/SqliteOpenHelper.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/StartMenuAdapter.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/StartupMenuView.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/bean/AppInfo.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/bean/Type.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/listener/DataCallback.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnClickCallback.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnMenuClick.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/startupmenu/utils/AppOperateManager.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/view/ScapeImageView.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/view/SquareFrameLayout.java
 create mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/view/TaskBarIcon.java

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_arrow_white.png b/packages/SystemUI/res/drawable-hdpi/startmenu_arrow_white.png
new file mode 100644
index 0000000000000000000000000000000000000000..a8f01f3414be965092aba92c6567da223592083d
GIT binary patch
literal 300
zcmV+{0n`48P)<h;3K|Lk000e1NJLTq000~S000~a1^@s6at+^<00001b5ch_0Itp)
z=>Px#=1D|BR7ef&ltBxEKoEuBhE!D2C5TGMBFc;Z{|9vI+|@%}Of9X><>m-_FpyDV
z>9FtOy0h~>=CQ2UAC3|V)ltaGQ5yL3#C4=P(#8q=@1^PYx)_^-uZhOy5LDxeJ>hP>
zfa|Pa%_gNctzE~)Hmh-Ea1UOh1m<V}+nSaww3bpL$ZA}%fx-0-(Gl1z=OvV2-q{D$
zxMD|2hL<pbck*-Z0!DjH#GbG)^}`si_Y05$QT!;j+26)Ma*l3KHlTX2QKZ%8Hvbyf
yCbilg9cgVmZHmexHRy>_DI-l&B|ITS&iMdthC7!|V>0ys0000<MNUMnLSTYrxrSN*

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_computer.png b/packages/SystemUI/res/drawable-hdpi/startmenu_computer.png
new file mode 100644
index 0000000000000000000000000000000000000000..468cbdb2265ef0dd3b6041848aee8995ba5d7f50
GIT binary patch
literal 169
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!61|;P_|4#%`jKx9jP7LeL$-D$|l097<Lo5W7
z6Bda4InFP|F^m6Fzpr3Ggh<DF2E#h%2CfZK3`Qavs%%FToC}yHD9vF@D3;tL;h`_Q
ziNP{QY=YVX$NCc&c`h-VF?ejAoOxh=BR_K&bD@O90S+(U6gS1vEsPAkjJfsQ!YgM0
Ptz+<X^>bP0l+XkKM)xn*

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_down_arrow.png b/packages/SystemUI/res/drawable-hdpi/startmenu_down_arrow.png
new file mode 100644
index 0000000000000000000000000000000000000000..9c25f5d6cd6f922423884bf2ba16237cdc3a1978
GIT binary patch
literal 719
zcmeAS@N?(olHy`uVBq!ia0vp^JRr=$1|-8uW1a&kmUKs7M+SzC{oH>NS%G|oWRD<U
z28Jp%28M<f28Lfip@tU>45bDP46hOx7_4S6Fo+k-*%fHRz`z)p84^(v;p=0SoS&<g
zn3A8As#lR)0Mx<2U{hfQWag%pBq~(o=HwMyRoE(lRagPpAYpwa1+bEmY+I!W-v9;Y
z{GwC^Q#}(s10_2y1qB70qLehNAQv~Nb|BAIDWjyMz)D}gyu4hm+*mKaC|%#s($Z4j
zz)0W7NEfI=x41H|B(Xv_uUHvk2+SOp)Z*l#%z~24{5%Daxrs^nr6smXN+65i0OHP)
z%rt~edBsp~0X?V>lF>KRGth^d4b*A_61DO#%1i~?3^L!&&<3m$MGR_>jXub7B*#E}
z3Kj)=)sD+XA0BLWTt0`?BY`3L)zif>L_>7zgoS?0jv}t_Z%c}-<K$~^Za7>n+t!l6
z!Ln6?XWkd{2#!Qf4zs_k1}Q(8WIC>yFI={aY18iF%FUT4m-!U*%rq}QH*-&=L&DOV
zhm&VL^>5U^5#W);p74Sz(BQA~pZbGwcfWm?d3{96(%!f4zVqEB=6`uRUUwQ!pIDq1
zZ@)7-RA=4$PhVXhKC-*N<O=Ia<!fIXQzG~M^4zDfL+!wgsLs<}`Mo<-qF4M_!yL_+
z!jZh|6hkhjlDy!J!l)M+>T=hz4xBiauHL@bjl(0j)%D?1vo|~CA5MSL94Y<p>9ZG;
pD-G}0R>w~WzckgLY&UQ9GwI@jZ0#Te=R=^h<mu|?vd$@?2>|Cd{M-Nl

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_icon.png b/packages/SystemUI/res/drawable-hdpi/startmenu_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..1148aa45f89c0e612a1f679aef2cd360eb5aded9
GIT binary patch
literal 3016
zcmV;(3pezMP)<h;3K|Lk000e1NJLTq002k;002k`1^@s6RqeA!00004XF*Lt006O%
z3;baP0000WV@Og>004R>004l5008;`004mK004C`008P>0026e000+ooVrmw00006
zVoOIv0RI600RN!9r;`8x00(qQO+^Rb2L=Wl1>Z~OjsO4(%t=H+RCwCmoL!7vRTam7
z`^=qwFfG!SmeN9@&<<jOQVTUofHn~XiHY#Q0~it?RA^$X2q7x?fKd~PfH6wYL=yuj
z5`oaP2pXjjBo^8Rg$k`LWoSoAEiEn6`MCG&zYlBQxo7U&uQT`Dd#9{qWlrXvz0W@X
zz4qQ~|JT~b(IJrrfvJF|g8L-!1>ka^7dR>0b_jR_couj9^l!jB*VU<Jw+oyYDb7j$
zQprCg`Tdgjl2;XtCBIwpcT0Yu<dNb|zeX#7DPS+>7fAjd$seo%N+tD@e@XI}Nk>0g
zAeq$&$*+?9^K~qyp7u%pT505?0a5~-t0cd(31E`CPx9ATy~i;~Hl&2TjPJ_`oT9!d
z`4z|QoMe{cu{p!<&KR7cZj|ELlJE5ErUhrX2+lc@-_jy*iYwe5$K6m1;CxK-kF^k-
zqP{Kp3tC}CQER}7fdc?v0lwJEjtH^{xEXv`)>h=Q2d6;5eHHLHu&}~yaY7x?1>~A+
z&wk7sf7!Y0`aPF5Kn9L_z}*qRIRf+nJAnU$>-T`8z(@dPIxr7d44fBq5iljigHHi&
zfcz^`tgN;pnOcxE40Hor0el^J0eI1X(fbe;AjY{|g|Y?AkbF0|`M|}PMO+CiXs`*p
zfX@NDvb3U10h0cP6wj678Md;FOt7xe{o47G|8Z~(8`+B7Vhco}({Qv$0#K3US4#f(
zk{_xA(grD>eq1g2_M%6^%NCpzPm%mg$)7CwQzbuNiswj$8PZTrI)HSzth`5xdnA9e
z<oDJ9Xusr_XSL*KK1qk3i+~<*bFlg2w4e*a{L%w_2<!pg#O98Epa3|?k87H95mGz=
z@q^H{9k?G@QK1R*fJ=Z^r6HV~*3|nnHAzc(Y+_Xo+$k8@wLECA0mAG6NQ5oL&jA~N
z&7gOHL7?GPC*ekX0{8_+vX#ppKsN$~wv%fmPA8royw|moe>7|y2dZoZwoCp_$)6i0
z-i+Gdmr8z9l}+rzw(idoljT`q9@rrH_v-LEZ%h6z$)6F*x1gi^d6M5&_S^x<uW1WF
ziRJbp$=@gWUBN19tt3N||D8>i1=p$-B>~c!3U0tU`|Y`KUrDnB#)V<@Kv*3bC9>9r
z6$j~18#+*gp`LUBel3l-qUD-z=C6=^Pg8zUiNlF!8;y{P<l1Jv**dGK(V0Dxe<abC
z7o~V+0-za^e@gO?Oa5Z({FH4>^u`J!qI@9*IGZHD%*yB629CA+SaGOb80I}mevjlA
z+yC>$-)~P?`E7xYsadxxJtPLagRaj5_hQR*qp}I3Hg-Y*=cXj;#DQB%<NK*br607D
z;3C+wB0zTmcVnC3tAM|o59I+q13V3!i1}Pk0^bF8fT-#cBrNCJ2KPKk-C~wAeq4uM
z>y`Y!BtIBdmn?KJ)Y+S~fbhICgIgiVUtjz^{5CI?OSXTj<S(nrNG4W-%M<3=sJ;`*
zRUB5K-qlt7qh@s=)Lp5g?+o|cS^{WvHU49Tx^}Bdgd_@H=|bQ~7zfj+3<Ey|x5>=2
zJL3_QUTla6jHr9p-peIAFDhW1RJkk$9spf!_m@D5%+u#<z^7BT=Lyhn!85sH<pQ(=
z+tSR3yn`qSUSE}hrvpC)RvAczB0$rZ0XL>>ML+Npa08u&qcT9QfKA3d&{b~Q2QaF)
zk}L)80TvYL`UoS{&rI2hhoP{g=FHzANwAgw06qjawd|H7H2?y*4EQFfONxmwiZTs9
z*$+Gfxy*Rq>_vd~VsuJ5KqGYk0{AkxOTZBUA5Z!8XF;!r@jOXIKs<nPP2FXzj-x)!
zGY9x8Xlew^O7Y|oU_H1PhB}Qx4f%jTxb0$mPo990SoP$y;8x~HX9|75D|VS5LyJ0h
zQm0W#v}I0lsqV+<$)wCBgkI{%Jm8ufa5xldL|y~^*Dj|)DcINE%~wMruoS)+NcuKs
zHCTZIR!6|j6i<B}TmT~n<fcLHgqFk~o0bAlI0l6wy9Q7<uq;I-OC!voYIK<GhN8#n
zuqD*ZYC!}$0~rJc^DtPjYX`Vfv8ZjMa#Dm5=<hXfbDofqVB!GR4Q_#Xp6_=Wkul=j
ztWixwurDIrcFIMdEx=zIxH$%nl~(|qZ6<tTr!lD^(*Sj0q3ksA{zDPCVc?g*!8$jK
zF+)*cR&@?^^-RuTRul)gWmud)jl2<s_kI!hO`V&&7?1uia3;9ZCM!U;dKDb-CDM_0
z9(X1S6K)LL2RvT~pt5nKVPFREDQnE+N*FM39FSW{`VILW;K`^27X85ORA2VH80Rm=
zd0+szIz(4HjY%b#dVp_{p7MPd249b$xC0izX5bsZJ5>rTDiKN^=oUsytp?XSnE)zr
z)b1wW+LXm#0v?3vrCof9P;yTLw*YTdD7XZC&hGCng1Qfw4_sHy#&r&yJl0vd9QY37
zcl5QS5BRpdmmli_C!zxzKt~y$LD36tHe>y!z2WZ-pohTiDSKc)=3p)%jO7d@3U&66
z2WK?7VHp;kIW0xK{lGe-kv-1kDvycM<VG*>1B_J5VPw<Qj1Q&!3783d58U^QG;BM=
zKGyD$&`g#BzoK&HM>W|2+zRnVh#KR%RLXU}EfEg7y(}2FI0Wg6$qE<R|BuywK!#%N
z5g`P%DMfUo5Q3yDCX|exh|ymh!nRLY7<V+JJJZ6vqYr$<!ockgJr`U^V%U}foIVS$
z+fjxIw>c3z>#+oYcy0-x5od`4V=_C|w&Q4kbSRmcw>Cx4bH6Mh<AMpr=xYO&)V~&i
zTUQ~&V@*?86m{D&YBkGcsW$bJJ7Zbu&i#_V$byJ%uyU31bIPNq+hoa2nSxZZTz`fv
zIjdGQ*vpc<Hpr5`&ax!1Ho77KpoOxuw@MiwOS1qe45ggp&kdpF?W&x}H4xhJXc%_O
zL%QIE+R(J?8+s!L?qT5i3b$+m)&kp$zD0_9!!ZSSI(GKs8elbc?7(B&oI{u|wgY%I
z=nl|+3n0c#g~c-fXo#@MUkm)a%5B?#br8Q$$;YrPv>{+tw^6ummJxBB4V;4oHfIDt
z-o?E4y+Qjy2g7fZ^T>D@X3JGOO>eKw1D2XMw)|nF|6xhwg&CGq?oSPRvgBu4@_8Yo
z)E(*cE2jl0E~W)<sI!s`$&M4OZ2M%{S%60Uq?^^)aqoSy11je?v)tOTaE1KCc&@ZD
zoH)u(GUF%0usIueCj4zg`mxVWtOs5Oy$eykfg@A7uxVa`9Xq%b_!;nL$m3j^&3oGb
zDpH%>_X6uu79YWAhS!3=g)s($7^gA?+YHacq7qB6jr1an<$N4;6S#q_&xvJxpw5FG
zgj<g-#S^Xy3zfv-x+|gOvJbcp*qp|VXjC#jmM6e(#Zus!5r@Ukr(wr6r&Ix_0Nf7;
zHe0UJWQ_2ZLu8Zn1rtaJorpfB26CO7kro{66yW}e9aU=OX_BqLoxlf^GIyeusC1NJ
zV~Z?jx9oEllY#@E06?SP>{wA{6WfgTX*8$#IQw45c#uZF`jR$#znbop{8jBB<Jt()
zNb!h6GoQxsvX3&Y`pAGY7Nn!aPvpGR;8rB52W6l0TF^>{auR?vO03--CfT@-#q5`T
z0PfPZ(W4clt+C?Lk#Tn}77o4=OG7SZ+8)Mo1D*rcgSJ|F&M?kR?+8Hu2Pxw;X9y=l
z=l}o!C3HntbYx+4WjbSWWnpw>05UK!HZ3qWEig7zF)%tbI65;kD=;`ZFfdj10C4~S
z03~!qSaf7zbY(hiZ)9m^c>ppnF*YqQHZ3wVR53F;F)}(bH7hVUIxsNQ6X?(Y0000<
KMNUMnLSTabaC-&-

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_power.png b/packages/SystemUI/res/drawable-hdpi/startmenu_power.png
new file mode 100644
index 0000000000000000000000000000000000000000..91603c8004216890448c9ed5974765b90ea7879a
GIT binary patch
literal 399
zcmV;A0dW3_P)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00001b5ch_0Itp)
z=>Px$Nl8ROR5%fp)4xl@Kor37T&yTc{{TnZ!O;!{AxIZ-P&Y*=PTdNQI=L477bM{9
z;3#!*2#SkCMO@TLkqDMbi$c3q8ow``vH4*&2cO*Cd+%P;gc!z%;d!2o!x1HhIh>?8
zj}t8G_$+fy);f2|T+}&#3L20o5ow@>D?b~)xNOgHL2Wsd(%n1E8^a0qXK*611!5mq
z4B~7~aS#Obf>^A9q=@g}4yJ78@P=%P1}62lSd(Y4g1S<w8*T90p4tJqW2|Pl<Z+Lr
zQ6;F762#<8Ng9Yx#0J0g91H#g<jlDIg%`+Oq#Zd9xbhH-c*0nk4%9m+O9O=l_Ws*|
z+D*J-%0I)xLJx(%nou)?Hnu{w1S)vPHWHsa@pUv&`#u~hB(X%o#w2cVjXvgKVFJ6n
tog?PtL6Z#j@c{Wg<gOkepZ0Y0)E641`bwceG&TSL002ovPDHLkV1m63s}=wN

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_search.png b/packages/SystemUI/res/drawable-hdpi/startmenu_search.png
new file mode 100644
index 0000000000000000000000000000000000000000..204eccc248ab55ab2db83961d185a038211a82f6
GIT binary patch
literal 1023
zcmV<b0|5MqP)<h;3K|Lk000e1NJLTq0015U0015c1^@s6J20-I00006VoOIv0RI60
z0RN!9r;`8x010qNS#tmY3ljhU3ljkVnw%H_000McNliru;szE73JKs!>|6i<1B^*T
zK~zY`wbosTRaF!R@ZY_oR*K~)M1&QH6n&`lLH1BY9}pH%BxO{-wW;jmm@jRRoT!LP
zQF#k1x&#pv^dLz^VMX-Rhc8oDRAgXc1*KtTI6C9pUe=A{nKR=|+J?*Bd!KXmfBo0m
z>%Ue*&1khda*_U>qZyA*#sZvxE_Px&4q-GGsaySiywRuvLM~Eo-iNbs2X4g~HD?^e
z`*;-}U?>-9w0zctz%`%?@E}%|81KV@U<=cO{ft<Dg^Z7KkwzwB-z+Zzw1F$}7Vg6+
zc3@*1x*W@JJrZ8PR{V)2cpK|l?au5fsWFUuRt4xacp0Z*cK|+<i}d|?@oKd@)53^V
zI4`!J!^62qd+S&?E1OHOK0trMnp~v2dZ1OyOW_&GMS2l8;oW%r0PbnEJJU<y8|&(D
zO~zUH6%XYiy;hBXH8hpyKj7{X_-b5M_iZz*Y2s3>zz|-^MS63xsZnN>i}W)d!#6ku
zx3}7zc~y_~7|+1HG2a^TnH1<a;9Kx|Ji0Bsc-UFZczG_a3$~kck$#^FXdO5{#Fsc8
z7q{A-8Pym!a8ayxVY8zcC1VHiZOkvhNp--BWBqrCz?9k67;q>u1I`Sg8583<@jsl4
z^p~R?C3o)$0qV!JI^d>bI7;5?Ry;cfcy~{GTkXz?$B=P<VC=$h6}THY2eYtfJbj%k
zXx#2ToF3cTu)hxYvsljytv>3@h4Z7N!WY;(M!911y|{VHTJ6r9|H8VG`&S3}L42Bv
zbf7NA2co>exmZ&p2$KeFwL43raez1QW0gpw6q8vYb2mgwvpN@P<3vSb9MJiA8n?uy
zT9J$N@sV1eMc5SG$2P3Rrd*_h<G8bGz&TOjR>sy^Jei9$QvI%3alzM7M|WT$HbggZ
zVKfP~psjXieyiPCiI+;C`y+)$kJxjSx{zz}C@v`VQlCWH?Tlj57g?|nOK}xumV~2$
zKjNGXRo0COVzn4|Mu*wolT`dt0-hT`B?IS&K|Sz2cm&V)y3bss!+~qSXGi6_0+&ZI
znNxbbi|_Dxl)<f$Mo*M_??$BSKrYhy9!6s#$txK!GrEcXP`7Du=umW*zvUwBig%C0
z{o&#=_&%)5MS6COtB)WEQ<2N*p#=k#a@fU<c&9nZDl=8^VLXM$D;hnBE$B8J<53f)
tfnYv}<+(`P{a>S||Gv4^?wnfQ`v>?9m14>pRk#2E002ovPDHLkV1kHw-w^-+

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_setting.png b/packages/SystemUI/res/drawable-hdpi/startmenu_setting.png
new file mode 100644
index 0000000000000000000000000000000000000000..bb10c31d1e0ed80c67e1dd6933be69d028136852
GIT binary patch
literal 467
zcmV;^0WAKBP)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00001b5ch_0Itp)
z=>Px$jY&j7R5%fJlCeqyK@f&-Rbn6*OeNw21VdiH7m%b7g!l+PgLw-fy;W=#EK*3C
zSb3mb8k5d4ov4UtbAJEat+#hv7QW2R%)gu2n~9<|D@l?*%rkmxWW_Mz4(uwL9c*C5
zJd3s1cf(U#-XU?v{uA2lW9-T~_oY1k3Px;?V99=m+^KT52y|gA2fGae*)&^-)iTXB
z`Hs))kV<<36Ziyv6YNPrOn)G4OEG%_<-8G4*(Y$zzK*?z1m5vqu|sq}SZQLN!CHAe
z1p3-ju(Gk2aAks2bB;fQO;82W>P-LtYX@SLJ@LM`#BN|O@U1%=K2Wlak}p@!`Yy+H
z!4P6@w<qwn4}6CoK0*7Xa>VTkIs+GwE)pXc$ivn_-(dnXcmP$P+!<&l@<l*xe1@tv
zHglz2pbDh5Hu`U{k7z-Ozq$l$kW_L|wqiAWwQ>Omy4dMQi=;+b?>~e`S;WU!<))Yy
zuu;YqN11>vgc@lp4XZw@Rn{&El!JVP(__`Y2>pPi15+)F{s6hfcU=n&JV^im002ov
JPDHLkV1mR~$7=up

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable-hdpi/startmenu_up_arrow.png b/packages/SystemUI/res/drawable-hdpi/startmenu_up_arrow.png
new file mode 100644
index 0000000000000000000000000000000000000000..5f50a8df5f15f98b920c9a58aa228b352dba8541
GIT binary patch
literal 312
zcmV-80muG{P)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#@<~KNR45g-kUee!F%*PnyhfV~K!MVsq@l|RKwM)RkdV?)=LWd|T@V!rL_<SG
z1w9=|baXTcEl8m3?u)(rnbo#=l4Z^K8~gbYscLtJMMU9(R5>5=)@%k_7g4S_!_nM$
zMUgmv6q$EA{b!fC1uV=soB{Fz;sA1Qz*0Jt1g@|MUJbkh=qreCLf`2S?`<SE@1R-3
zuPkjFIn8ny%1nTQk((#7q8LXXmo^f(RS#Acw)Nf!)>^Yl;K#_)N${!Yc_WeoidS{v
zB;kgLiBf8O^&j^3S5NGEFfZaZrL4m&@Bafj>sd2|shM2nAN~MJhhNz%VferR0000<
KMNUMnLSTZ_Xn<G%

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/checkbox_checked.png b/packages/SystemUI/res/drawable/checkbox_checked.png
new file mode 100644
index 0000000000000000000000000000000000000000..01ddd18b7503960b50760fe388fa9b78c8e20122
GIT binary patch
literal 4486
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

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/checkbox_selector.xml b/packages/SystemUI/res/drawable/checkbox_selector.xml
new file mode 100644
index 0000000..563417a
--- /dev/null
+++ b/packages/SystemUI/res/drawable/checkbox_selector.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@drawable/checkbox_checked" android:state_checked="true"/>
+    <item android:drawable="@drawable/checkbox_unchecked" android:state_checked="false"/>
+</selector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/checkbox_unchecked.png b/packages/SystemUI/res/drawable/checkbox_unchecked.png
new file mode 100644
index 0000000000000000000000000000000000000000..7b541db92d9405b8e3c4e23cf95a718b2d3fb70d
GIT binary patch
literal 4557
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

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/input_bg.xml b/packages/SystemUI/res/drawable/input_bg.xml
index 9534ef2..0b1e790 100644
--- a/packages/SystemUI/res/drawable/input_bg.xml
+++ b/packages/SystemUI/res/drawable/input_bg.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
     <size android:width="@dimen/match_parent"
-        android:height="@dimen/startupmenu_layout_height"
+        android:height="@dimen/common_layout_height"
         />
 
     <stroke android:width="1dp" android:color="@color/input_bg"/>
diff --git a/packages/SystemUI/res/drawable/startmenu_icon.png b/packages/SystemUI/res/drawable/startmenu_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..1148aa45f89c0e612a1f679aef2cd360eb5aded9
GIT binary patch
literal 3016
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
KMNUMnLSTabaC-&-

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/startmenu_left_background.png b/packages/SystemUI/res/drawable/startmenu_left_background.png
new file mode 100644
index 0000000000000000000000000000000000000000..c89a2904b1529dccefadf6d438f189968436efe7
GIT binary patch
literal 175
zcmeAS@N?(olHy`uVBq!ia0vp^_CTz`!3HEfdzAhFDaPU;cPEB*=VV?2Ihmd=jv*PW
zZ?8D=GAIfhy^zZLkiq$fy>nCVzCwfC&&Ox|uDSSoasB@7w((of+kAFp+QjcwuWx+5
zW<tZ8=1aWu-lWQ_DEwYflC58Tlb!Q~oyOf;r{lhXm2LmFX?iVK+1gsG-`spBnAH7F
SO78+%%HZkh=d#Wzp$P!wEkfV`

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/startmenu_left_item_selector.xml b/packages/SystemUI/res/drawable/startmenu_left_item_selector.xml
new file mode 100644
index 0000000..64e91dc
--- /dev/null
+++ b/packages/SystemUI/res/drawable/startmenu_left_item_selector.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@color/dark_blue" android:state_selected="true" />
+    <item android:drawable="@color/common_hover_bg" android:state_selected="false" />
+</selector>
diff --git a/packages/SystemUI/res/drawable/startmenu_right_item_selector.xml b/packages/SystemUI/res/drawable/startmenu_right_item_selector.xml
new file mode 100644
index 0000000..69b43bc
--- /dev/null
+++ b/packages/SystemUI/res/drawable/startmenu_right_item_selector.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:drawable="@color/grid_hover_bg" android:state_selected="true" />
+    <item android:drawable="@android:color/transparent" android:state_selected="false" />
+</selector>
diff --git a/packages/SystemUI/res/drawable/statusbar_img_hover_select.xml b/packages/SystemUI/res/drawable/statusbar_img_hover_select.xml
index 5c4fa94..767181e 100644
--- a/packages/SystemUI/res/drawable/statusbar_img_hover_select.xml
+++ b/packages/SystemUI/res/drawable/statusbar_img_hover_select.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@color/gray_text" android:state_hovered="true"/>
+    <item android:drawable="@color/common_hover_bg" android:state_hovered="true"/>
     <item android:drawable="@drawable/system_bar_background" android:state_hovered="false"/>
 </selector>
\ No newline at end of file
diff --git a/packages/SystemUI/res/drawable/statusbar_switch_input_method.png b/packages/SystemUI/res/drawable/statusbar_switch_input_method.png
new file mode 100644
index 0000000000000000000000000000000000000000..478b3adb678dbe4ae2681ec318227f01615388d7
GIT binary patch
literal 16973
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
CwQ-mL

literal 0
HcmV?d00001

diff --git a/packages/SystemUI/res/drawable/trusted_state_to_error.xml b/packages/SystemUI/res/drawable/trusted_state_to_error.xml
old mode 100755
new mode 100644
diff --git a/packages/SystemUI/res/drawable/trusted_state_to_error_animation.xml b/packages/SystemUI/res/drawable/trusted_state_to_error_animation.xml
old mode 100755
new mode 100644
diff --git a/packages/SystemUI/res/layout/menu_dialog_item.xml b/packages/SystemUI/res/layout/menu_dialog_item.xml
index 2a2c7ce..4abd01d 100644
--- a/packages/SystemUI/res/layout/menu_dialog_item.xml
+++ b/packages/SystemUI/res/layout/menu_dialog_item.xml
@@ -1,16 +1,15 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
               android:layout_width="match_parent"
+              android:layout_height="match_parent"
               android:background="@color/white"
-              android:layout_height="match_parent">
+              android:orientation="vertical">
 
     <TextView
         android:id="@+id/text"
+        style="@style/CommonTextStyle"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:textColor="@color/black"
-        android:padding="@dimen/startupmenu_small_padding"
-        android:textSize="@dimen/startupmenu_text_size"/>
+        android:textColor="@color/black" />
 
 </LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/openthos_status_bar.xml b/packages/SystemUI/res/layout/openthos_status_bar.xml
index 9d27051..103d775 100644
--- a/packages/SystemUI/res/layout/openthos_status_bar.xml
+++ b/packages/SystemUI/res/layout/openthos_status_bar.xml
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <com.android.systemui.statusbar.phone.OpenthosStatusBarView
     xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:id="@+id/openthos_status_bar"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
@@ -11,38 +12,38 @@
         android:layout_height="match_parent"
         android:orientation="horizontal">
 
-        <ImageView
+        <com.android.systemui.statusbar.view.ScapeImageView
             android:id="@+id/iv_startupmenu_status_bar"
-            android:layout_width="64dp"
-            android:layout_height="match_parent"
-            android:layout_gravity="center_vertical"
-            android:layout_margin="5dp"
-            android:src="@mipmap/statusbar_sysbar_menu"/>
-
-        <!--  icon scroll layout-->
-        <HorizontalScrollView
-            android:id="@+id/sroll_status_bar"
             android:layout_width="wrap_content"
             android:layout_height="match_parent"
             android:layout_gravity="center_vertical"
-            android:layout_margin="5dp">
+            android:layout_margin="@dimen/padding_five"
+            android:background="@mipmap/statusbar_sysbar_menu"
+            app:scapeSize="1" />
 
-            <LinearLayout
-                android:id="@+id/ll_scroll_icon_contents"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:orientation="horizontal">
+        <View
+            android:layout_width="@dimen/padding_one"
+            android:layout_height="match_parent"
+            android:layout_marginBottom="@dimen/padding_ten"
+            android:layout_marginLeft="@dimen/padding_three"
+            android:layout_marginRight="@dimen/padding_three"
+            android:layout_marginTop="@dimen/padding_ten"
+            android:background="@color/white" />
 
-            </LinearLayout>
+        <LinearLayout
+            android:id="@+id/ll_scroll_icon_contents"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:orientation="horizontal">
 
-        </HorizontalScrollView>
+        </LinearLayout>
 
         <View
             android:id="@+id/empty_statusbar"
             android:layout_width="0dp"
             android:layout_height="match_parent"
-            android:layout_marginRight="@dimen/startupmenu_small_padding"
-            android:layout_weight="1"/>
+            android:layout_marginRight="@dimen/padding_five"
+            android:layout_weight="1" />
 
         <!-- input/battery/wifi/volume/notification/date/home -->
         <LinearLayout
@@ -51,50 +52,60 @@
             android:layout_gravity="end"
             android:orientation="horizontal">
 
-            <ImageView
+            <com.android.systemui.statusbar.view.ScapeImageView
                 android:id="@+id/iv_input_status_bar"
-                android:layout_width="32dp"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
                 android:background="@drawable/statusbar_img_hover_select"
-                android:src="@mipmap/statusbar_switch_input_method"/>
+                android:padding="@dimen/padding_five"
+                android:scaleType="fitCenter"
+                android:src="@mipmap/statusbar_switch_input_method"
+                app:scapeSize="0.8" />
 
-            <ImageView
+            <com.android.systemui.statusbar.view.ScapeImageView
                 android:id="@+id/iv_battery_status_bar"
-                android:layout_width="32dp"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
                 android:background="@drawable/statusbar_img_hover_select"
-                android:src="@mipmap/statusbar_battery"/>
+                android:padding="@dimen/padding_five"
+                android:scaleType="fitCenter"
+                android:src="@mipmap/statusbar_battery"
+                app:scapeSize="0.8" />
 
-            <ImageView
+            <com.android.systemui.statusbar.view.ScapeImageView
                 android:id="@+id/iv_wifi_status_bar"
-                android:layout_width="32dp"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
                 android:background="@drawable/statusbar_img_hover_select"
-                android:src="@mipmap/statusbar_wifi"/>
+                android:padding="@dimen/padding_five"
+                android:scaleType="fitCenter"
+                android:src="@mipmap/statusbar_wifi"
+                app:scapeSize="0.8" />
 
-            <ImageView
+            <com.android.systemui.statusbar.view.ScapeImageView
                 android:id="@+id/iv_volume_status_bar"
-                android:layout_width="32dp"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
                 android:background="@drawable/statusbar_img_hover_select"
-                android:src="@mipmap/statusbar_sound"/>
+                android:padding="@dimen/padding_five"
+                android:scaleType="fitCenter"
+                android:src="@mipmap/statusbar_sound"
+                app:scapeSize="0.8" />
 
-            <ImageView
+            <com.android.systemui.statusbar.view.ScapeImageView
                 android:id="@+id/iv_notification_status_bar"
-                android:layout_width="32dp"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
                 android:background="@drawable/statusbar_img_hover_select"
-                android:src="@mipmap/statusbar_action_center"/>
+                android:padding="@dimen/padding_five"
+                android:scaleType="fitCenter"
+                android:src="@mipmap/statusbar_action_center"
+                app:scapeSize="0.8" />
 
             <com.android.systemui.dialog.CalendarDisplayView
                 android:id="@+id/iv_date_status_bar"
@@ -102,23 +113,22 @@
                 android:layout_height="wrap_content"
                 android:layout_gravity="center_vertical"
                 android:gravity="center"
-                android:paddingLeft="@dimen/startupmenu_small_padding"
-                android:paddingRight="@dimen/startupmenu_small_padding"
+                android:paddingLeft="@dimen/padding_five"
+                android:paddingRight="@dimen/padding_five"
                 android:textAppearance="@style/TextAppearance.StatusBar.Clock"
-                android:textSize="@dimen/systemui_date_text_size"/>
+                android:textSize="@dimen/systemui_date_text_size" />
 
             <View
-                android:layout_width="1dp"
+                android:layout_width="@dimen/padding_one"
                 android:layout_height="match_parent"
-                android:background="@color/input_bg"/>
+                android:background="@color/input_bg" />
 
             <ImageView
                 android:id="@+id/iv_home_status_bar"
                 android:layout_width="10dp"
                 android:layout_height="match_parent"
                 android:layout_gravity="center_vertical"
-                android:layout_margin="5dp"
-                />
+                android:layout_margin="5dp" />
         </LinearLayout>
     </LinearLayout>
 
diff --git a/packages/SystemUI/res/layout/popupwindows_calendar.xml b/packages/SystemUI/res/layout/popupwindows_calendar.xml
index b38a9ab..afa6872 100644
--- a/packages/SystemUI/res/layout/popupwindows_calendar.xml
+++ b/packages/SystemUI/res/layout/popupwindows_calendar.xml
@@ -3,15 +3,15 @@
     xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="@dimen/systemui_size_calendar"
     android:layout_height="wrap_content"
-    android:background="#342464"
+    android:background="@color/common_hover_bg"
     android:orientation="vertical" >
 
     <LinearLayout
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_marginLeft="@dimen/startupmenu_big_padding"
-        android:layout_marginRight="@dimen/startupmenu_big_padding"
-        android:layout_marginTop="@dimen/startupmenu_small_padding"
+        android:layout_marginLeft="@dimen/big_padding"
+        android:layout_marginRight="@dimen/big_padding"
+        android:layout_marginTop="@dimen/small_padding"
         android:orientation="vertical" >
 
         <TextView
@@ -21,44 +21,44 @@
             android:layout_marginBottom="3dp"
             android:layout_centerVertical="true"
             android:textSize="@dimen/systemui_pop_date_text_size"
-            android:textColor="#ffffff"/>
+            android:textColor="@color/white"/>
 
         <TextView
             android:id="@+id/calendar_date"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_centerVertical="true"
-            android:textSize="@dimen/startupmenu_text_size"
-            android:textColor="#ffffff"/>
+            android:textSize="@dimen/common_text_size"
+            android:textColor="@color/white"/>
     </LinearLayout>
 
     <View
         android:layout_width="match_parent"
-        android:layout_height="@dimen/startupmenu_big_padding"/>
+        android:layout_height="@dimen/big_padding"/>
 
     <LinearLayout
         android:id="@+id/ll_popup"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_marginLeft="@dimen/startupmenu_big_padding"
-        android:layout_marginRight="@dimen/startupmenu_big_padding"
+        android:layout_marginLeft="@dimen/big_padding"
+        android:layout_marginRight="@dimen/big_padding"
         android:orientation="vertical" >
 
         <RelativeLayout
             android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_layout_small_height"
-            android:background="#3f2d76" >
+            android:layout_height="@dimen/calendar_date_height"
+            android:background="@color/calendar_bg" >
 
             <RelativeLayout
                 android:id="@+id/calendar_last_month"
-                android:layout_width="@dimen/startupmenu_layout_small_height"
-                android:layout_height="@dimen/startupmenu_layout_small_height"
+                android:layout_width="@dimen/calendar_date_height"
+                android:layout_height="@dimen/calendar_date_height"
                 android:layout_alignParentLeft="true"
-                android:layout_marginLeft="@dimen/startupmenu_small_padding"
+                android:layout_marginLeft="@dimen/small_padding"
                 android:layout_centerVertical="true">
                 <TextView
-                    android:layout_width="@dimen/startupmenu_search_icon_size"
-                    android:layout_height="@dimen/startupmenu_search_icon_size"
+                    android:layout_width="@dimen/calendar_icon_size"
+                    android:layout_height="@dimen/calendar_icon_size"
                     android:layout_centerInParent="true"
                     android:background="@mipmap/calendar_left" />
             </RelativeLayout>
@@ -69,20 +69,19 @@
                 android:layout_height="match_parent"
                 android:layout_centerInParent="true"
                 android:gravity="center"
-                android:background="#3f2d76"
-                android:textSize="@dimen/startupmenu_text_size"
-                android:textColor="#ffffff"/>
+                android:textSize="@dimen/common_text_size"
+                android:textColor="@color/white"/>
 
             <RelativeLayout
                 android:id="@+id/calendar_next_month"
-                android:layout_width="@dimen/startupmenu_layout_small_height"
-                android:layout_height="@dimen/startupmenu_layout_small_height"
+                android:layout_width="@dimen/calendar_date_height"
+                android:layout_height="@dimen/calendar_date_height"
                 android:layout_alignParentRight="true"
                 android:layout_marginRight="8dp"
                 android:layout_centerVertical="true">
                 <TextView
-                    android:layout_width="@dimen/startupmenu_search_icon_size"
-                    android:layout_height="@dimen/startupmenu_search_icon_size"
+                    android:layout_width="@dimen/calendar_icon_size"
+                    android:layout_height="@dimen/calendar_icon_size"
                     android:layout_centerInParent="true"
                     android:background="@mipmap/calendar_right" />
             </RelativeLayout>
@@ -93,19 +92,19 @@
             android:id="@+id/calendar_view"
             android:layout_width="@dimen/systemui_width_calendarview"
             android:layout_height="@dimen/systemui_height_calendarview"
-            android:background="#3f2d76" >
+            android:background="@color/calendar_bg" >
         </com.android.systemui.dialog.CalendarView>
 
         <View
             android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_big_padding"/>
+            android:layout_height="@dimen/big_padding"/>
         <TextView
             android:id="@+id/calendar_enter"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:textColor="#ffffff"
-            android:layout_marginBottom="@dimen/startupmenu_big_padding"
-            android:textSize="@dimen/startupmenu_text_size" />
+            android:textColor="@color/white"
+            android:layout_marginBottom="@dimen/big_padding"
+            android:textSize="@dimen/common_text_size" />
     </LinearLayout>
 
 </LinearLayout>
diff --git a/packages/SystemUI/res/layout/ringer_volume.xml b/packages/SystemUI/res/layout/ringer_volume.xml
index 6383def..29cf1ff 100644
--- a/packages/SystemUI/res/layout/ringer_volume.xml
+++ b/packages/SystemUI/res/layout/ringer_volume.xml
@@ -2,7 +2,7 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:layout_width="wrap_content"
     android:layout_height="350dp"
-    android:background="#342464"
+    android:background="@color/common_hover_bg"
     android:paddingTop="10dp"
     android:paddingBottom="10dp"
     android:paddingLeft="20dp"
diff --git a/packages/SystemUI/res/layout/row.xml b/packages/SystemUI/res/layout/row.xml
deleted file mode 100644
index d44d34f..0000000
--- a/packages/SystemUI/res/layout/row.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright 2016 Braden Farmer
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout
-
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="horizontal">
-
-    <LinearLayout
-        android:id="@+id/entry"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/startupmenu_layout_height"
-        android:paddingLeft="@dimen/startupmenu_big_padding">
-
-        <ImageView
-            android:id="@+id/icon"
-            android:layout_width="@dimen/startupmenu_list_icon_size"
-            android:layout_height="@dimen/startupmenu_list_icon_size"
-            android:layout_gravity="center_vertical"
-            />
-
-        <TextView
-            android:id="@+id/name"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"
-            android:layout_marginLeft="@dimen/startupmenu_small_padding"
-            android:ellipsize="end"
-            android:singleLine="true"
-            android:textColor="@color/white"
-            android:textSize="@dimen/startupmenu_text_size"/>
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/packages/SystemUI/res/layout/row_alt.xml b/packages/SystemUI/res/layout/row_alt.xml
deleted file mode 100644
index 26d9a72..0000000
--- a/packages/SystemUI/res/layout/row_alt.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright 2016 Braden Farmer
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <LinearLayout
-        android:id="@+id/entry"
-        android:layout_width="@dimen/startupmenu_app_grid_width"
-        android:layout_height="match_parent"
-        android:gravity="center_vertical"
-        android:orientation="vertical">
-
-        <ImageView
-            android:id="@+id/icon"
-            android:layout_width="@dimen/startupmenu_grid_icon_size"
-            android:layout_height="@dimen/startupmenu_grid_icon_size"
-            android:layout_gravity="center_horizontal"
-            android:padding="@dimen/startupmenu_small_padding"/>
-
-        <TextView
-            android:id="@+id/name"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:padding="@dimen/startupmenu_small_padding"
-            android:ellipsize="end"
-            android:textColor="@color/black"
-            android:singleLine="true"
-            android:textSize="@dimen/startupmenu_text_size"/>
-    </LinearLayout>
-</LinearLayout>
diff --git a/packages/SystemUI/res/layout/sort_pop_layout.xml b/packages/SystemUI/res/layout/sort_pop_layout.xml
deleted file mode 100644
index b73f0e0..0000000
--- a/packages/SystemUI/res/layout/sort_pop_layout.xml
+++ /dev/null
@@ -1,28 +0,0 @@
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:background="@color/white"
-              android:orientation="vertical" >
-
-     <TextView
-        android:id="@+id/default_sort"
-        style="@style/SortStyle"
-        android:text="@string/default_sort" />
-
-    <TextView
-        android:id="@+id/click_sort"
-        style="@style/SortStyle"
-        android:text="@string/click_sort" />
-
-    <TextView
-        android:id="@+id/time_sort"
-        style="@style/SortStyle"
-        android:text="@string/time_sort" />
-
-    <TextView
-        android:id="@+id/name_sort"
-        style="@style/SortStyle"
-        android:text="@string/name_sort" />
-
-</LinearLayout>
diff --git a/packages/SystemUI/res/layout/start_menu_left.xml b/packages/SystemUI/res/layout/start_menu_left.xml
deleted file mode 100644
index b03a943..0000000
--- a/packages/SystemUI/res/layout/start_menu_left.xml
+++ /dev/null
@@ -1,223 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright 2016 Braden Farmer
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:id="@+id/start_menu_layout"
-    android:layout_width="wrap_content"
-    android:layout_height="match_parent"
-    android:background="@color/white"
-    android:orientation="horizontal"
-    >
-
-
-    <LinearLayout
-        android:layout_width="@dimen/startupmenu_common_app_width"
-        android:layout_height="match_parent"
-        android:background="@color/common_hover_bg"
-        android:orientation="vertical"
-        android:paddingTop="@dimen/startupmenu_big_padding">
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_list_icon_size"
-            android:layout_marginLeft="@dimen/startupmenu_big_padding"
-            android:gravity="center_vertical"
-            android:singleLine="true"
-            android:text="@string/common_application"
-            android:textSize="@dimen/startupmenu_text_size"/>
-
-        <ListView
-            android:id="@+id/common_list"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="@dimen/startupmenu_small_padding"
-            android:divider="@null"
-            />
-
-        <View
-            android:layout_width="wrap_content"
-            android:layout_height="0dp"
-            android:layout_weight="1"/>
-
-        <LinearLayout
-            android:id="@+id/file_manager"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_layout_height"
-            android:orientation="horizontal"
-            android:paddingLeft="@dimen/startupmenu_big_padding">
-
-            <ImageView
-                android:layout_width="@dimen/startupmenu_list_icon_size"
-                android:layout_height="@dimen/startupmenu_list_icon_size"
-                android:layout_gravity="center_vertical"
-                android:padding="@dimen/startupmenu_small_padding"
-                android:src="@mipmap/startup_menuicon_computer"/>
-
-            <TextView
-                android:id="@+id/textView"
-                style="@style/Mstyle"
-                android:text="@string/file_manager"/>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/system_setting"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_layout_height"
-            android:orientation="horizontal"
-            android:paddingLeft="@dimen/startupmenu_big_padding">
-
-            <ImageView
-                android:layout_width="@dimen/startupmenu_list_icon_size"
-                android:layout_height="@dimen/startupmenu_list_icon_size"
-                android:layout_gravity="center_vertical"
-                android:padding="@dimen/startupmenu_small_padding"
-                android:src="@mipmap/startup_menuicon_setting"/>
-
-            <TextView
-                style="@style/Mstyle"
-                android:text="@string/system_setting"/>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/power_off"
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_layout_height"
-            android:orientation="horizontal"
-            android:paddingLeft="@dimen/startupmenu_big_padding">
-
-            <ImageView
-                android:layout_width="@dimen/startupmenu_list_icon_size"
-                android:layout_height="@dimen/startupmenu_list_icon_size"
-                android:layout_gravity="center_vertical"
-                android:padding="@dimen/startupmenu_small_padding"
-                android:src="@mipmap/startup_menuicon_power"/>
-
-            <TextView
-                style="@style/Mstyle"
-                android:text="@string/power_source"/>
-        </LinearLayout>
-
-    </LinearLayout>
-
-    <ImageView
-        android:layout_width="1dp"
-        android:layout_height="match_parent"
-        />
-
-    <LinearLayout
-        android:id="@+id/layout"
-        android:layout_width="@dimen/startupmenu_grid_width"
-        android:layout_height="match_parent"
-        android:background="@color/white"
-        android:orientation="vertical"
-        android:paddingLeft="@dimen/startupmenu_big_padding"
-        android:paddingRight="@dimen/startupmenu_big_padding"
-        android:paddingTop="@dimen/startupmenu_big_padding">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/startupmenu_list_icon_size"
-            android:background="@drawable/input_bg"
-            android:orientation="horizontal">
-
-            <FrameLayout
-                android:layout_width="0dp"
-                android:layout_height="match_parent"
-                android:layout_weight="1">
-
-                <EditText
-                    android:id="@+id/search"
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:background="@drawable/input_bg"
-                    android:gravity="left|center_vertical"
-                    android:hint="@string/software_search"
-                    android:maxLength="15"
-                    android:paddingLeft="@dimen/startupmenu_small_padding"
-                    android:singleLine="true"
-                    android:textColor="#939aa3"
-                    android:textSize="@dimen/startupmenu_text_size"/>
-
-                <ImageView
-                    android:layout_width="@dimen/startupmenu_search_icon_size"
-                    android:layout_height="@dimen/startupmenu_search_icon_size"
-                    android:layout_gravity="right|center_vertical"
-                    android:layout_marginRight="@dimen/startupmenu_small_padding"
-                    android:focusable="true"
-                    android:focusableInTouchMode="true"
-                    android:src="@mipmap/ic_starter_search"/>
-
-            </FrameLayout>
-
-            <View
-                android:id="@+id/line_view"
-                android:layout_width="1dp"
-                android:layout_height="match_parent"
-                />
-
-            <LinearLayout
-                android:id="@+id/sort_click_layout"
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:gravity="center"
-                android:orientation="horizontal">
-
-                <ImageView
-                    android:id="@+id/sort_image_direction"
-                    android:layout_width="@dimen/startupmenu_search_icon_size"
-                    android:layout_height="@dimen/startupmenu_search_icon_size"
-                    android:layout_marginLeft="@dimen/startupmenu_small_padding"
-                    android:focusable="true"
-                    android:focusableInTouchMode="true"
-                    android:gravity="center"
-                    android:src="@mipmap/ic_start_menu_down_arrow"/>
-
-                <TextView
-                    android:id="@+id/sort_text"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:gravity="center"
-                    android:paddingLeft="@dimen/startupmenu_small_padding"
-                    android:paddingRight="@dimen/startupmenu_small_padding"
-                    android:textColor="@color/gray_text"
-                    android:textSize="@dimen/startupmenu_text_size"/>
-
-            </LinearLayout>
-
-            <ImageView
-                android:id="@+id/sort_select"
-                android:layout_width="wrap_content"
-                android:layout_height="match_parent"
-                android:background="@mipmap/ic_starter_top_arrow_white">
-            </ImageView>
-        </LinearLayout>
-
-        <GridView
-            android:id="@+id/start_menu"
-            android:layout_width="wrap_content"
-            android:layout_height="match_parent"
-            android:layout_marginTop="@dimen/startupmenu_small_padding"
-            android:clickable="false"
-            android:horizontalSpacing="@dimen/startupmenu_small_padding"
-            android:listSelector="@null"
-            android:numColumns="3"
-            android:scrollbars="none"/>
-
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/packages/SystemUI/res/layout/startmenu_dialog_menu.xml b/packages/SystemUI/res/layout/startmenu_dialog_menu.xml
new file mode 100644
index 0000000..16f172d
--- /dev/null
+++ b/packages/SystemUI/res/layout/startmenu_dialog_menu.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:id="@+id/list_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@android:color/white"
+        android:divider="@null" />
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/startmenu_item_column.xml b/packages/SystemUI/res/layout/startmenu_item_column.xml
new file mode 100644
index 0000000..efef4a3
--- /dev/null
+++ b/packages/SystemUI/res/layout/startmenu_item_column.xml
@@ -0,0 +1,34 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal">
+
+    <LinearLayout
+        android:id="@+id/layout"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/startmenu_left_item_selector"
+        android:orientation="horizontal"
+        android:paddingBottom="@dimen/padding_ten"
+        android:paddingLeft="@dimen/padding_fifteen"
+        android:paddingTop="@dimen/padding_ten">
+
+        <ImageView
+            android:id="@+id/package_image"
+            android:layout_width="@dimen/start_icon_size_small"
+            android:layout_height="@dimen/start_icon_size_small"
+            android:layout_gravity="center_vertical" />
+
+        <TextView
+            android:id="@+id/package_name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical"
+            android:layout_marginLeft="@dimen/padding_ten"
+            android:layout_marginRight="@dimen/padding_ten"
+            android:ellipsize="end"
+            android:singleLine="true"
+            android:textColor="@android:color/white"
+            android:textSize="@dimen/common_text_size" />
+    </LinearLayout>
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout/startmenu_item_dialog.xml b/packages/SystemUI/res/layout/startmenu_item_dialog.xml
new file mode 100644
index 0000000..58f9c52
--- /dev/null
+++ b/packages/SystemUI/res/layout/startmenu_item_dialog.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/name"
+        style="@style/CommonTextStyle"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/startmenu_item_row.xml b/packages/SystemUI/res/layout/startmenu_item_row.xml
new file mode 100644
index 0000000..c5fa8fc
--- /dev/null
+++ b/packages/SystemUI/res/layout/startmenu_item_row.xml
@@ -0,0 +1,36 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:id="@+id/layout"
+        android:layout_width="@dimen/start_row_item_width"
+        android:layout_height="wrap_content"
+        android:background="@drawable/startmenu_right_item_selector"
+        android:orientation="vertical"
+        android:paddingTop="@dimen/padding_fifteen">
+
+        <ImageView
+            android:id="@+id/package_image"
+            android:layout_width="@dimen/start_icon_size_big"
+            android:layout_height="@dimen/start_icon_size_big"
+            android:layout_gravity="center"
+            android:src="@drawable/startmenu_computer" />
+
+        <TextView
+            android:id="@+id/package_name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center"
+            android:layout_marginBottom="@dimen/padding_twenty"
+            android:layout_marginTop="@dimen/padding_ten"
+            android:ellipsize="end"
+            android:gravity="center"
+            android:paddingLeft="@dimen/padding_three"
+            android:paddingRight="@dimen/padding_three"
+            android:singleLine="true"
+            android:textColor="@android:color/black"
+            android:textSize="@dimen/common_text_size" />
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/packages/SystemUI/res/layout/startup_menu.xml b/packages/SystemUI/res/layout/startup_menu.xml
new file mode 100644
index 0000000..456a4ca
--- /dev/null
+++ b/packages/SystemUI/res/layout/startup_menu.xml
@@ -0,0 +1,200 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/ll_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="horizontal">
+
+    <LinearLayout
+        android:layout_width="@dimen/start_menu_left_width"
+        android:layout_height="match_parent"
+        android:background="@color/common_hover_bg"
+        android:orientation="vertical">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="@dimen/padding_fifteen"
+            android:layout_marginTop="@dimen/padding_twenty"
+            android:singleLine="true"
+            android:text="@string/common_application"
+            android:textColor="@android:color/darker_gray"
+            android:textSize="17sp" />
+
+        <ListView
+            android:id="@+id/list_view"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/padding_fifteen"
+            android:divider="@null" />
+
+        <View
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="1" />
+
+        <LinearLayout
+            android:id="@+id/file_manager"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/startmenu_left_item_selector"
+            android:orientation="horizontal"
+            android:paddingLeft="@dimen/padding_fifteen">
+
+            <ImageView
+                android:layout_width="@dimen/padding_fifteen"
+                android:layout_height="@dimen/padding_fifteen"
+                android:layout_gravity="center"
+                android:src="@drawable/startmenu_computer" />
+
+            <TextView
+                style="@style/CommonTextStyle"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/file_manager"
+                android:textColor="@android:color/white" />
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/system_setting"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/startmenu_left_item_selector"
+            android:orientation="horizontal"
+            android:paddingLeft="@dimen/padding_fifteen">
+
+            <ImageView
+                android:layout_width="@dimen/padding_fifteen"
+                android:layout_height="@dimen/padding_fifteen"
+                android:layout_gravity="center"
+                android:src="@drawable/startmenu_setting" />
+
+            <TextView
+                style="@style/CommonTextStyle"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/system_setting"
+                android:textColor="@android:color/white" />
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/power_off"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@drawable/startmenu_left_item_selector"
+            android:orientation="horizontal"
+            android:paddingLeft="@dimen/padding_fifteen">
+
+            <ImageView
+                android:layout_width="@dimen/padding_fifteen"
+                android:layout_height="@dimen/padding_fifteen"
+                android:layout_gravity="center"
+                android:src="@drawable/startmenu_power" />
+
+            <TextView
+                style="@style/CommonTextStyle"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/power"
+                android:textColor="@android:color/white" />
+        </LinearLayout>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:id="@+id/layout"
+        android:layout_width="@dimen/start_menu_right_width"
+        android:layout_height="match_parent"
+        android:background="@color/grid_bg"
+        android:orientation="vertical"
+        android:paddingLeft="@dimen/padding_fifteen"
+        android:paddingRight="@dimen/padding_fifteen">
+
+        <!--
+           android:background="@drawable/search_background"
+        -->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="@dimen/start_icon_size_big"
+            android:layout_marginTop="@dimen/padding_fifteen"
+            android:background="#ffffff"
+            android:orientation="horizontal">
+
+            <FrameLayout
+                android:layout_width="0dp"
+                android:layout_height="match_parent"
+                android:layout_weight="1">
+
+                <EditText
+                    android:id="@+id/search"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:background="@android:color/white"
+                    android:gravity="center_vertical"
+                    android:hint="@string/software_search"
+                    android:maxLength="10"
+                    android:paddingLeft="@dimen/padding_ten"
+                    android:paddingRight="@dimen/padding_twenty"
+                    android:singleLine="true"
+                    android:textColor="@color/gray_text"
+                    android:textSize="@dimen/common_text_size" />
+
+                <ImageView
+                    android:layout_width="@dimen/start_img_size_small"
+                    android:layout_height="@dimen/start_img_size_small"
+                    android:layout_gravity="right|center_vertical"
+                    android:layout_marginRight="@dimen/padding_five"
+                    android:focusable="true"
+                    android:focusableInTouchMode="true"
+                    android:src="@drawable/startmenu_search" />
+
+            </FrameLayout>
+
+            <View
+                android:id="@+id/line_view"
+                android:layout_width="@dimen/padding_three"
+                android:layout_height="match_parent"
+                android:background="#f2e9edf0" />
+
+            <LinearLayout
+                android:id="@+id/sort_click_view"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:gravity="center"
+                android:orientation="horizontal">
+
+                <ImageView
+                    android:id="@+id/arrow_direct"
+                    android:layout_width="@dimen/padding_fifteen"
+                    android:layout_height="@dimen/padding_fifteen"
+                    android:layout_marginLeft="@dimen/padding_five"
+                    android:gravity="center_vertical" />
+
+                <TextView
+                    android:id="@+id/sort_type"
+                    style="@style/CommonTextStyle"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:minWidth="@dimen/padding_fifty"
+                    android:paddingLeft="@dimen/padding_five"
+                    android:paddingRight="@dimen/padding_five"
+                    android:textColor="@color/gray_text" />
+
+            </LinearLayout>
+
+            <ImageView
+                android:id="@+id/arrow_show"
+                android:layout_width="@dimen/start_icon_size_big"
+                android:layout_height="@dimen/start_icon_size_big"
+                android:background="@drawable/startmenu_arrow_white" />
+        </LinearLayout>
+
+        <GridView
+            android:id="@+id/grid_view"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/padding_fifteen"
+            android:listSelector="@android:color/transparent"
+            android:numColumns="3"
+            android:scrollbars="none" />
+    </LinearLayout>
+</LinearLayout>
diff --git a/packages/SystemUI/res/layout/status_bar_battery.xml b/packages/SystemUI/res/layout/status_bar_battery.xml
index 2982fdd..3cb6253 100644
--- a/packages/SystemUI/res/layout/status_bar_battery.xml
+++ b/packages/SystemUI/res/layout/status_bar_battery.xml
@@ -2,9 +2,9 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
-              android:background="#342464"
+              android:background="@color/common_hover_bg"
               android:orientation="vertical"
-              android:padding="@dimen/startupmenu_small_padding">
+              android:padding="@dimen/small_padding">
 
     <TextView
         android:id="@+id/battery_time_percentage"
@@ -12,7 +12,7 @@
         android:layout_height="wrap_content"
         android:layout_gravity="center"
         android:textAlignment="center"
-        android:textColor="#FFFFFF"
+        android:textColor="@color/white"
         android:textSize="16sp"/>
 
     <TextView
@@ -21,15 +21,15 @@
         android:layout_height="wrap_content"
         android:layout_gravity="center"
         android:textAlignment="center"
-        android:textColor="#FFFFFF"
-        android:textSize="@dimen/startupmenu_text_size"/>
+        android:textColor="@color/white"
+        android:textSize="@dimen/common_text_size"/>
 
     <TextView
         android:id="@+id/battery_time_enter"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_gravity="center"
-        android:textColor="#FFFFFF"
-        android:textSize="@dimen/startupmenu_text_size"/>
+        android:textColor="@color/white"
+        android:textSize="@dimen/common_text_size"/>
 
 </LinearLayout>
diff --git a/packages/SystemUI/res/layout/status_bar_input_method.xml b/packages/SystemUI/res/layout/status_bar_input_method.xml
index 128e3e5..baa1d6d 100644
--- a/packages/SystemUI/res/layout/status_bar_input_method.xml
+++ b/packages/SystemUI/res/layout/status_bar_input_method.xml
@@ -2,9 +2,8 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
-              android:background="#342464"
-              android:orientation="vertical"
-              android:padding="@dimen/startupmenu_small_padding">
+              android:background="@color/common_hover_bg"
+              android:orientation="vertical">
 
     <ListView
         android:id="@+id/input_lv_view"
diff --git a/packages/SystemUI/res/layout/status_bar_inputmethod_item.xml b/packages/SystemUI/res/layout/status_bar_inputmethod_item.xml
index bed79b3..78d67aa 100644
--- a/packages/SystemUI/res/layout/status_bar_inputmethod_item.xml
+++ b/packages/SystemUI/res/layout/status_bar_inputmethod_item.xml
@@ -2,14 +2,14 @@
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
               android:layout_width="match_parent"
               android:layout_height="24dp"
-              android:background="#342464"
+              android:background="@color/common_hover_bg"
               android:orientation="horizontal"
-              android:padding="@dimen/startupmenu_small_padding">
+              android:padding="@dimen/small_padding">
 
     <ImageView
         android:id="@+id/input_method_img"
-        android:layout_width="16dp"
-        android:layout_height="16dp"
+        android:layout_width="@dimen/padding_fifteen"
+        android:layout_height="@dimen/padding_fifteen"
         android:layout_gravity="center"
         />
 
diff --git a/packages/SystemUI/res/layout/statusbar_activity_button.xml b/packages/SystemUI/res/layout/statusbar_activity_button.xml
deleted file mode 100644
index 66941d7..0000000
--- a/packages/SystemUI/res/layout/statusbar_activity_button.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-
-<FrameLayout
-    android:id="@+id/statusbar_activity_button"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="match_parent"
-    >
-    <ImageView
-        android:id="@+id/icon_view"
-        android:layout_width="64dp"
-        android:layout_height="match_parent"
-        android:layout_marginLeft="1dp"
-        android:layout_marginRight="1dp"
-        android:background="@drawable/tasker_app_getfocus"
-        android:scaleType="centerInside" />
-    <View
-        android:id="@+id/activity_focused"
-        android:layout_width="64dp"
-        android:layout_height="match_parent"
-        android:layout_marginLeft="1dp"
-        android:layout_marginRight="1dp"
-        android:background="@drawable/ic_background_mouse_click"
-        android:visibility="gone"
-        />
-    <View
-        android:id="@+id/activity_run"
-        android:layout_width="64dp"
-        android:layout_height="match_parent"
-        android:layout_marginLeft="1dp"
-        android:layout_marginRight="1dp"
-        android:background="@drawable/ic_background_activity_run"
-        android:visibility="gone"
-        />
-
-</FrameLayout>
diff --git a/packages/SystemUI/res/layout/taskbar_button_layout.xml b/packages/SystemUI/res/layout/taskbar_button_layout.xml
new file mode 100644
index 0000000..920f265
--- /dev/null
+++ b/packages/SystemUI/res/layout/taskbar_button_layout.xml
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<com.android.systemui.statusbar.view.SquareFrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/taskbar_button_layout"
+    android:layout_width="wrap_content"
+    android:layout_height="match_parent"
+    android:layout_margin="@dimen/padding_one"
+    android:background="@drawable/system_bar_background">
+
+    <com.android.systemui.statusbar.view.ScapeImageView
+        android:id="@+id/icon_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="center"
+        android:layout_margin="@dimen/padding_five"
+        android:scaleType="fitCenter"
+        app:scapeSize="1" />
+
+    <View
+        android:id="@+id/run_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_margin="@dimen/padding_one"
+        android:background="@drawable/ic_background_activity_run"
+        android:visibility="gone" />
+
+    <View
+        android:id="@+id/focuse_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_margin="@dimen/padding_one"
+        android:background="@drawable/ic_background_mouse_click"
+        android:visibility="gone" />
+
+</com.android.systemui.statusbar.view.SquareFrameLayout>
diff --git a/packages/SystemUI/res/layout/wifi_content.xml b/packages/SystemUI/res/layout/wifi_content.xml
index 3f2de50..f439c60 100644
--- a/packages/SystemUI/res/layout/wifi_content.xml
+++ b/packages/SystemUI/res/layout/wifi_content.xml
@@ -24,26 +24,26 @@
             android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:layout_gravity="center_vertical"
-            android:layout_marginRight="@dimen/startupmenu_small_padding"
+            android:layout_marginRight="@dimen/small_padding"
             android:layout_weight="1"
             android:focusable="false"
             android:singleLine="true"
             android:textColor="@android:color/white"
-            android:textSize="@dimen/startupmenu_text_size"/>
+            android:textSize="@dimen/common_text_size"/>
 
         <ImageView
             android:id="@+id/wifi_has_psw"
-            android:layout_width="@dimen/startupmenu_big_padding"
+            android:layout_width="@dimen/big_padding"
             android:layout_height="wrap_content"
             android:layout_gravity="center"/>
 
         <ImageView
             android:id="@+id/wifi_content_level"
-            android:layout_width="@dimen/startupmenu_big_padding"
+            android:layout_width="@dimen/big_padding"
             android:layout_height="wrap_content"
             android:layout_gravity="center"
-            android:layout_marginLeft="@dimen/startupmenu_small_padding"
-            android:layout_marginRight="@dimen/startupmenu_small_padding"
+            android:layout_marginLeft="@dimen/small_padding"
+            android:layout_marginRight="@dimen/small_padding"
             android:focusable="false"
             />
     </LinearLayout>
diff --git a/packages/SystemUI/res/layout/wifi_list.xml b/packages/SystemUI/res/layout/wifi_list.xml
index f6cd1c8..d3ddf40 100644
--- a/packages/SystemUI/res/layout/wifi_list.xml
+++ b/packages/SystemUI/res/layout/wifi_list.xml
@@ -1,11 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
               android:layout_width="wrap_content"
               android:layout_height="wrap_content"
-              android:background="#342464"
+              android:background="@color/common_hover_bg"
               android:orientation="vertical"
-              android:padding="@dimen/startupmenu_small_padding"
+              android:padding="@dimen/small_padding"
               android:showDividers="middle">
 
     <LinearLayout
@@ -19,15 +18,15 @@
             android:layout_width="wrap_content"
             android:layout_height="1dp"
             android:descendantFocusability="afterDescendants"
-            android:footerDividersEnabled="true"/>
+            android:footerDividersEnabled="true" />
 
         <LinearLayout
             android:id="@+id/wifi_enable_layout"
             android:layout_width="wrap_content"
-            android:layout_height="@dimen/startupmenu_layout_height"
+            android:layout_height="@dimen/common_layout_height"
             android:gravity="center_vertical"
             android:orientation="horizontal"
-            android:paddingLeft="@dimen/startupmenu_big_padding">
+            android:paddingLeft="@dimen/big_padding">
 
             <TextView
                 android:id="@+id/wifi_enable"
@@ -35,23 +34,25 @@
                 android:layout_height="wrap_content"
                 android:text="@string/wifi_enable"
                 android:textColor="@android:color/white"
-                android:textSize="@dimen/startupmenu_text_size"/>
+                android:textSize="@dimen/common_text_size" />
 
-            <Switch
+            <CheckBox
                 android:id="@+id/wifi_enable_btn"
-                android:layout_width="70dp"
-                android:layout_height="wrap_content"
-                android:layout_gravity="right|center_vertical"/>
+                android:layout_width="@dimen/padding_fifty"
+                android:layout_height="@dimen/padding_thirty"
+                android:layout_gravity="right|center_vertical"
+                android:background="@drawable/checkbox_selector"
+                android:button="@null" />
         </LinearLayout>
 
         <TextView
             android:id="@+id/ethernet_configure"
             android:layout_width="wrap_content"
-            android:layout_height="@dimen/startupmenu_layout_height"
-            android:paddingLeft="@dimen/startupmenu_big_padding"
+            android:layout_height="@dimen/common_layout_height"
             android:gravity="center_vertical"
+            android:paddingLeft="@dimen/big_padding"
             android:text="@string/status_bar_ethernet"
             android:textColor="@android:color/white"
-            android:textSize="@dimen/startupmenu_text_size"/>
+            android:textSize="@dimen/common_text_size" />
     </LinearLayout>
 </LinearLayout>
diff --git a/packages/SystemUI/res/mipmap-hdpi/ic_start_menu_down_arrow.png b/packages/SystemUI/res/mipmap-hdpi/ic_start_menu_down_arrow.png
deleted file mode 100644
index 9c25f5d6cd6f922423884bf2ba16237cdc3a1978..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 719
zcmeAS@N?(olHy`uVBq!ia0vp^JRr=$1|-8uW1a&kmUKs7M+SzC{oH>NS%G|oWRD<U
z28Jp%28M<f28Lfip@tU>45bDP46hOx7_4S6Fo+k-*%fHRz`z)p84^(v;p=0SoS&<g
zn3A8As#lR)0Mx<2U{hfQWag%pBq~(o=HwMyRoE(lRagPpAYpwa1+bEmY+I!W-v9;Y
z{GwC^Q#}(s10_2y1qB70qLehNAQv~Nb|BAIDWjyMz)D}gyu4hm+*mKaC|%#s($Z4j
zz)0W7NEfI=x41H|B(Xv_uUHvk2+SOp)Z*l#%z~24{5%Daxrs^nr6smXN+65i0OHP)
z%rt~edBsp~0X?V>lF>KRGth^d4b*A_61DO#%1i~?3^L!&&<3m$MGR_>jXub7B*#E}
z3Kj)=)sD+XA0BLWTt0`?BY`3L)zif>L_>7zgoS?0jv}t_Z%c}-<K$~^Za7>n+t!l6
z!Ln6?XWkd{2#!Qf4zs_k1}Q(8WIC>yFI={aY18iF%FUT4m-!U*%rq}QH*-&=L&DOV
zhm&VL^>5U^5#W);p74Sz(BQA~pZbGwcfWm?d3{96(%!f4zVqEB=6`uRUUwQ!pIDq1
zZ@)7-RA=4$PhVXhKC-*N<O=Ia<!fIXQzG~M^4zDfL+!wgsLs<}`Mo<-qF4M_!yL_+
z!jZh|6hkhjlDy!J!l)M+>T=hz4xBiauHL@bjl(0j)%D?1vo|~CA5MSL94Y<p>9ZG;
pD-G}0R>w~WzckgLY&UQ9GwI@jZ0#Te=R=^h<mu|?vd$@?2>|Cd{M-Nl

diff --git a/packages/SystemUI/res/mipmap-hdpi/ic_start_menu_up_arrow.png b/packages/SystemUI/res/mipmap-hdpi/ic_start_menu_up_arrow.png
deleted file mode 100644
index 5f50a8df5f15f98b920c9a58aa228b352dba8541..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 312
zcmV-80muG{P)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px#@<~KNR45g-kUee!F%*PnyhfV~K!MVsq@l|RKwM)RkdV?)=LWd|T@V!rL_<SG
z1w9=|baXTcEl8m3?u)(rnbo#=l4Z^K8~gbYscLtJMMU9(R5>5=)@%k_7g4S_!_nM$
zMUgmv6q$EA{b!fC1uV=soB{Fz;sA1Qz*0Jt1g@|MUJbkh=qreCLf`2S?`<SE@1R-3
zuPkjFIn8ny%1nTQk((#7q8LXXmo^f(RS#Acw)Nf!)>^Yl;K#_)N${!Yc_WeoidS{v
zB;kgLiBf8O^&j^3S5NGEFfZaZrL4m&@Bafj>sd2|shM2nAN~MJhhNz%VferR0000<
KMNUMnLSTZ_Xn<G%

diff --git a/packages/SystemUI/res/mipmap-hdpi/ic_starter_search.png b/packages/SystemUI/res/mipmap-hdpi/ic_starter_search.png
deleted file mode 100644
index e104232117bf8141c02ff40293c813202cb8aaa7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 438
zcmV;n0ZIOeP)<h;3K|Lk000e1NJLTq000aC000aK1^@s6R&`wG00001b5ch_0Itp)
z=>Px$a7jc#R45g7kxeK>Q546|dGmNPvl-2T2n&-GQDVV{jZkA_XQ!FcOEQ{f!$z~3
zEWNkTe3h7u1+pIt3z?PFh-_Gx1tn!Qp*#0D_o2q*ow}#aJ-`3?xEG<$tn_X#qCSO4
zLlWRo)@r5ra^$QI0sINj&g^XfYB3->CW5jC&<%)lg!BOKVks7jz9?2#&dL@N42Ek|
z9gdskle$xuOeQyj?V%KSn~pe~<U?rNxlS~U%TFOj6D!e*0vn9G7m5V(V9i|2Yh)M`
z44k^aN=pco(Ez7apz*Bzyx^@0+>A)v5a58yYicRpyvGgxzSl$C=-v?^$qN?DY-KV5
zHxVK%Fmvt*R?WyAPkHD^f7Z5bqfum~3lT{$LLYCI$~n*a`YhIi9iBXTTdw#;b^z%b
zC3O+vJXaqh0I$>oeax4CKh7!4)n*Z87yt)($%=-uRP~4xpJ*;J&?*Fs{}DK<f86$V
gu1)iK_qlWG3&~l5j;(5)(*OVf07*qoM6N<$f*>=z?*IS*

diff --git a/packages/SystemUI/res/mipmap-hdpi/ic_starter_top_arrow_white.png b/packages/SystemUI/res/mipmap-hdpi/ic_starter_top_arrow_white.png
deleted file mode 100644
index a8f01f3414be965092aba92c6567da223592083d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 300
zcmV+{0n`48P)<h;3K|Lk000e1NJLTq000~S000~a1^@s6at+^<00001b5ch_0Itp)
z=>Px#=1D|BR7ef&ltBxEKoEuBhE!D2C5TGMBFc;Z{|9vI+|@%}Of9X><>m-_FpyDV
z>9FtOy0h~>=CQ2UAC3|V)ltaGQ5yL3#C4=P(#8q=@1^PYx)_^-uZhOy5LDxeJ>hP>
zfa|Pa%_gNctzE~)Hmh-Ea1UOh1m<V}+nSaww3bpL$ZA}%fx-0-(Gl1z=OvV2-q{D$
zxMD|2hL<pbck*-Z0!DjH#GbG)^}`si_Y05$QT!;j+26)Ma*l3KHlTX2QKZ%8Hvbyf
yCbilg9cgVmZHmexHRy>_DI-l&B|ITS&iMdthC7!|V>0ys0000<MNUMnLSTYrxrSN*

diff --git a/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_computer.png b/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_computer.png
deleted file mode 100644
index 468cbdb2265ef0dd3b6041848aee8995ba5d7f50..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 169
zcmeAS@N?(olHy`uVBq!ia0vp^0wB!61|;P_|4#%`jKx9jP7LeL$-D$|l097<Lo5W7
z6Bda4InFP|F^m6Fzpr3Ggh<DF2E#h%2CfZK3`Qavs%%FToC}yHD9vF@D3;tL;h`_Q
ziNP{QY=YVX$NCc&c`h-VF?ejAoOxh=BR_K&bD@O90S+(U6gS1vEsPAkjJfsQ!YgM0
Ptz+<X^>bP0l+XkKM)xn*

diff --git a/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_power.png b/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_power.png
deleted file mode 100644
index 91603c8004216890448c9ed5974765b90ea7879a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 399
zcmV;A0dW3_P)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00001b5ch_0Itp)
z=>Px$Nl8ROR5%fp)4xl@Kor37T&yTc{{TnZ!O;!{AxIZ-P&Y*=PTdNQI=L477bM{9
z;3#!*2#SkCMO@TLkqDMbi$c3q8ow``vH4*&2cO*Cd+%P;gc!z%;d!2o!x1HhIh>?8
zj}t8G_$+fy);f2|T+}&#3L20o5ow@>D?b~)xNOgHL2Wsd(%n1E8^a0qXK*611!5mq
z4B~7~aS#Obf>^A9q=@g}4yJ78@P=%P1}62lSd(Y4g1S<w8*T90p4tJqW2|Pl<Z+Lr
zQ6;F762#<8Ng9Yx#0J0g91H#g<jlDIg%`+Oq#Zd9xbhH-c*0nk4%9m+O9O=l_Ws*|
z+D*J-%0I)xLJx(%nou)?Hnu{w1S)vPHWHsa@pUv&`#u~hB(X%o#w2cVjXvgKVFJ6n
tog?PtL6Z#j@c{Wg<gOkepZ0Y0)E641`bwceG&TSL002ovPDHLkV1m63s}=wN

diff --git a/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_setting.png b/packages/SystemUI/res/mipmap-hdpi/startup_menuicon_setting.png
deleted file mode 100644
index bb10c31d1e0ed80c67e1dd6933be69d028136852..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 467
zcmV;^0WAKBP)<h;3K|Lk000e1NJLTq000mG000mO1^@s6AM^iV00001b5ch_0Itp)
z=>Px$jY&j7R5%fJlCeqyK@f&-Rbn6*OeNw21VdiH7m%b7g!l+PgLw-fy;W=#EK*3C
zSb3mb8k5d4ov4UtbAJEat+#hv7QW2R%)gu2n~9<|D@l?*%rkmxWW_Mz4(uwL9c*C5
zJd3s1cf(U#-XU?v{uA2lW9-T~_oY1k3Px;?V99=m+^KT52y|gA2fGae*)&^-)iTXB
z`Hs))kV<<36Ziyv6YNPrOn)G4OEG%_<-8G4*(Y$zzK*?z1m5vqu|sq}SZQLN!CHAe
z1p3-ju(Gk2aAks2bB;fQO;82W>P-LtYX@SLJ@LM`#BN|O@U1%=K2Wlak}p@!`Yy+H
z!4P6@w<qwn4}6CoK0*7Xa>VTkIs+GwE)pXc$ivn_-(dnXcmP$P+!<&l@<l*xe1@tv
zHglz2pbDh5Hu`U{k7z-Ozq$l$kW_L|wqiAWwQ>Omy4dMQi=;+b?>~e`S;WU!<))Yy
zuu;YqN11>vgc@lp4XZw@Rn{&El!JVP(__`Y2>pPi15+)F{s6hfcU=n&JV^im002ov
JPDHLkV1mR~$7=up

diff --git a/packages/SystemUI/res/values-zh-rCN/strings.xml b/packages/SystemUI/res/values-zh-rCN/strings.xml
index 9965d1c..78e764b 100644
--- a/packages/SystemUI/res/values-zh-rCN/strings.xml
+++ b/packages/SystemUI/res/values-zh-rCN/strings.xml
@@ -780,7 +780,7 @@
     <!--startupmenu-->
     <string name="common_application">常用软件</string>
     <string name="system_setting">设置</string>
-    <string name="power_source">电源</string>
+    <string name="power">电源</string>
     <string name="file_manager">文件管理器</string>
     <string name="software_search">软件搜索</string>
     <string name="click_sort">使用频率</string>
@@ -789,12 +789,13 @@
     <string name="default_sort">默认</string>
     <string name="open">打开</string>
     <string name="close">关闭</string>
-    <string name="phone_mode">手机模式</string>
-    <string name="desktop_mode">桌面模式</string>
-    <string name="lock_app">固定到任务栏</string>
-    <string name="unlock_app">解除固定</string>
+    <string name="phone_mode">以手机模式运行</string>
+    <string name="desktop_mode">以桌面模式运行</string>
+    <string name="lock_to_task_bar">固定到任务栏</string>
+    <string name="unlock_from_task_bar">解除固定</string>
     <string name="uninstall">卸载</string>
-    <string name="remove_out">移除</string>
+    <string name="remove_from_list">从此列表中删除</string>
+    <string name="remove_application">移除应用: </string>
 
     <!--calendar-->
     <string name="year">年</string>
diff --git a/packages/SystemUI/res/values/arrays.xml b/packages/SystemUI/res/values/arrays.xml
index affe9ea..82b7132 100644
--- a/packages/SystemUI/res/values/arrays.xml
+++ b/packages/SystemUI/res/values/arrays.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
 /* //device/apps/common/assets/res/any/colors.xml
 **
 ** Copyright 2012, The Android Open Source Project
@@ -18,19 +17,25 @@
 */
 -->
 <resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <string-array name="sort_show">
+        <item>@string/default_sort</item>
+        <item>@string/time_sort</item>
+        <item>@string/click_sort</item>
+        <item>@string/name_sort</item>
+    </string-array>
 
     <string-array name="list_menu">
         <item>@string/open</item>
         <item>@string/phone_mode</item>
         <item>@string/desktop_mode</item>
-        <item>@string/remove_out</item>
+        <item>@string/remove_from_list</item>
     </string-array>
 
     <string-array name="grid_menu_lock">
         <item>@string/open</item>
         <item>@string/phone_mode</item>
         <item>@string/desktop_mode</item>
-        <item>@string/lock_app</item>
+        <item>@string/unlock_from_task_bar</item>
         <item>@string/uninstall</item>
     </string-array>
 
@@ -38,23 +43,25 @@
         <item>@string/open</item>
         <item>@string/phone_mode</item>
         <item>@string/desktop_mode</item>
-        <item>@string/unlock_app</item>
+        <item>@string/lock_to_task_bar</item>
         <item>@string/uninstall</item>
     </string-array>
 
-    <string-array name="bar_menu_normal">
-        <item>@string/close</item>
-        <item>@string/lock_app</item>
+    <string-array name="bar_menu_lock_close">
+        <item>@string/open</item>
+        <item>@string/unlock_from_task_bar</item>
+        <item>@string/phone_mode</item>
+        <item>@string/desktop_mode</item>
     </string-array>
 
-    <string-array name="bar_menu_docked_closed">
-        <item>@string/open</item>
-        <item>@string/unlock_app</item>
+    <string-array name="bar_menu_lock_open">
+        <item>@string/close</item>
+        <item>@string/unlock_from_task_bar</item>
     </string-array>
 
-    <string-array name="bar_menu_docked_open">
+    <string-array name="bar_menu_unlock_open">
         <item>@string/close</item>
-        <item>@string/unlock_app</item>
+        <item>@string/lock_to_task_bar</item>
     </string-array>
 
     <string-array name="bar_show_hide">
diff --git a/packages/SystemUI/res/values/attrs.xml b/packages/SystemUI/res/values/attrs.xml
index a923f0b..b1d2a96 100644
--- a/packages/SystemUI/res/values/attrs.xml
+++ b/packages/SystemUI/res/values/attrs.xml
@@ -130,5 +130,9 @@
     <attr name="darkIconTheme" format="reference" />
     <attr name="wallpaperTextColor" format="reference|color" />
     <attr name="wallpaperTextColorSecondary" format="reference|color" />
+
+    <declare-styleable name="ScapeImageView">
+        <attr name="scapeSize" format="float"/>
+    </declare-styleable>
 </resources>
 
diff --git a/packages/SystemUI/res/values/colors.xml b/packages/SystemUI/res/values/colors.xml
index d2ebbfa..4512735 100644
--- a/packages/SystemUI/res/values/colors.xml
+++ b/packages/SystemUI/res/values/colors.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
 /*
  * Copyright 2010, The Android Open Source Project
  *
@@ -156,13 +155,16 @@
     <!--systemui: startupmenu: status bar: colors  -->
     <color name="black">#000000</color>
     <color name="white">#ffffff</color>
+    <color name="grid_bg">#e9edf0</color>
+    <color name="calendar_bg">#3f2d76</color>
+    <color name="dark_blue">#000080</color>
     <color name="common_hover_bg">#5a41a2</color>
-    <color name="grid_hover_bg">#e9edf0</color>
+    <color name="grid_hover_bg">#FFFFE0</color>
     <color name="grid_unhover_bg">#00ffffff</color>
     <color name="input_bg">#cfcaca</color>
     <color name="inputmethodfocus">#5b41a2</color>
+    <color name="gray_text">#939aa3</color>
 
     <color name="zen_introduction">#ffffffff</color>
 
-    <color name="gray_text">#939aa3</color>
 </resources>
diff --git a/packages/SystemUI/res/values/dimens.xml b/packages/SystemUI/res/values/dimens.xml
index 94a753f..80247db 100644
--- a/packages/SystemUI/res/values/dimens.xml
+++ b/packages/SystemUI/res/values/dimens.xml
@@ -863,23 +863,13 @@
     <dimen name="phone_size_width">320dp</dimen>
     <dimen name="phone_size_height">480dp</dimen>
 
-    <dimen name="startupmenu_grid_icon_size">50dp</dimen>
-    <dimen name="startupmenu_list_icon_size">30dp</dimen>
-    <dimen name="startupmenu_big_padding">15dp</dimen>
-    <dimen name="startupmenu_small_padding">5dp</dimen>
-    <dimen name="startupmenu_common_app_width">180dp</dimen>
-    <dimen name="startupmenu_grid_width">310dp</dimen>
-    <dimen name="systemui_size_wifi_height">400dp</dimen>
-    <dimen name="startupmenu_search_icon_size">10dp</dimen>
-    <dimen name="startupmenu_layout_height">40dp</dimen>
-    <dimen name="startupmenu_layout_small_height">24dp</dimen>
-    <dimen name="startupmenu_app_grid_width">80dp</dimen>
-    <dimen name="startupmenu_text_size">13sp</dimen>
     <dimen name="systemui_pop_date_text_size">24sp</dimen>
     <dimen name="systemui_size_calendar">296dp</dimen>
     <dimen name="systemui_width_calendarview">224dp</dimen>
     <dimen name="systemui_height_calendarview">154dp</dimen>
     <dimen name="systemui_date_text_size">10sp</dimen>
+    <dimen name="calendar_date_height">24dp</dimen>
+    <dimen name="calendar_icon_size">10dp</dimen>
 
     <dimen name="notification_panel_height">560dp</dimen>
     <!-- notification dimens -->
@@ -887,4 +877,29 @@
     <dimen name="qs_icon_size_thirty">30dp</dimen>
     <dimen name="qs_font_size_sixteen">16sp</dimen>
     <dimen name="qs_margin_fifty">50dp</dimen>
+
+    <dimen name="common_layout_height">40dp</dimen>
+    <dimen name="max_list_wifi_height">400dp</dimen>
+
+    <!--StartupMenu-->
+    <dimen name="start_menu_left_width">180dp</dimen>
+    <dimen name="start_menu_right_width">310dp</dimen>
+    <dimen name="status_bar_height_real">40dp</dimen>
+    <dimen name="start_row_item_width">80dp</dimen>
+    <dimen name="start_img_size_small">20dp</dimen>
+    <dimen name="start_icon_size_small">32dp</dimen>
+    <dimen name="start_icon_size_big">48dp</dimen>
+    <dimen name="common_text_size">14sp</dimen>
+
+    <dimen name="big_padding">15dp</dimen>
+    <dimen name="small_padding">5dp</dimen>
+    <dimen name="padding_one">1dp</dimen>
+    <dimen name="padding_three">3dp</dimen>
+    <dimen name="padding_five">5dp</dimen>
+    <dimen name="padding_ten">10dp</dimen>
+    <dimen name="padding_fifteen">15dp</dimen>
+    <dimen name="padding_twenty">20dp</dimen>
+    <dimen name="padding_thirty">30dp</dimen>
+    <dimen name="padding_fifty">50dp</dimen>
+
 </resources>
diff --git a/packages/SystemUI/res/values/strings.xml b/packages/SystemUI/res/values/strings.xml
index 195b161..6d04bc5 100644
--- a/packages/SystemUI/res/values/strings.xml
+++ b/packages/SystemUI/res/values/strings.xml
@@ -2059,12 +2059,12 @@
         can’t verify your response.</string>
 
     <!--startupmenu-->
-    <string name="common_application">common app</string>
+    <string name="common_application">Common Application</string>
     <string name="system_setting">Setting</string>
-    <string name="power_source">Power</string>
-    <string name="file_manager">File Manager</string>
+    <string name="power">Power</string>
+    <string name="file_manager">File manager</string>
     <string name="software_search">Software search</string>
-    <string name="click_sort">click sort</string>
+    <string name="click_sort">Click</string>
     <string name="name_sort">A - Z</string>
     <string name="time_sort">Time</string>
     <string name="default_sort">Default</string>
@@ -2072,10 +2072,13 @@
     <string name="close">Close</string>
     <string name="phone_mode">Phone mode</string>
     <string name="desktop_mode">Desktop mode</string>
-    <string name="lock_app">Lock app</string>
-    <string name="unlock_app">Unlock app</string>
-    <string name="uninstall">Unistall</string>
-    <string name="remove_out">Remove out</string>
+    <string name="lock_to_task_bar">Lock to task bar</string>
+    <string name="unlock_from_task_bar">Unlock from task bar</string>
+    <string name="uninstall">Uninstall</string>
+    <string name="remove_from_list">Remove from list</string>
+    <string name="remove_application">Remove application:</string>
+
+
 
     <!--calendar-->
     <string name="year">-</string>
diff --git a/packages/SystemUI/res/values/styles.xml b/packages/SystemUI/res/values/styles.xml
index cd830d0..aa6f79f 100644
--- a/packages/SystemUI/res/values/styles.xml
+++ b/packages/SystemUI/res/values/styles.xml
@@ -489,32 +489,7 @@
         <item name="android:colorBackground">?android:attr/colorSecondary</item>
     </style>
 
-    <style name="Mstyle">
-        <item name="android:gravity">center_vertical</item>
-        <item name="android:textColor">@color/white</item>
-        <item name="android:layout_marginLeft">@dimen/startupmenu_small_padding</item>
-        <item name="android:textSize">@dimen/startupmenu_text_size</item>
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">match_parent</item>
-        <item name="android:singleLine">true</item>
-        <item name="android:ellipsize">end</item>
-    </style>
-
-    <style name="SortStyle">
-        <item name="android:paddingTop">@dimen/startupmenu_small_padding</item>
-        <item name="android:paddingBottom">@dimen/startupmenu_small_padding</item>
-        <item name="android:paddingLeft">@dimen/startupmenu_big_padding</item>
-        <item name="android:paddingRight">@dimen/startupmenu_big_padding</item>
-        <item name="android:gravity">center_vertical</item>
-        <item name="android:textColor">@color/gray_text</item>
-        <item name="android:textSize">@dimen/startupmenu_text_size</item>
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">@dimen/startupmenu_layout_height</item>
-        <item name="android:singleLine">true</item>
-        <item name="android:ellipsize">end</item>
-    </style>
-
-    <style name="StartMenuDialogStyle" parent="@android:style/Theme.Dialog">
+    <style name="DialogStyle" parent="@android:style/Theme.Dialog">
         <item name="android:windowFrame">@null</item>
         <item name="android:windowIsFloating">true</item>
         <item name="android:windowIsTranslucent">true</item>
@@ -540,4 +515,15 @@
         <item name="android:layout_marginTop">8dp</item>
     </style>
 
+    <style name="CommonTextStyle">
+        <item name="android:paddingTop">10dp</item>
+        <item name="android:paddingBottom">10dp</item>
+        <item name="android:paddingLeft">20dp</item>
+        <item name="android:paddingRight">20dp</item>
+        <item name="android:gravity">center_vertical</item>
+        <item name="android:textSize">@dimen/common_text_size</item>
+        <item name="android:singleLine">true</item>
+        <item name="android:ellipsize">end</item>
+    </style>
+
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/BaseDialog.java b/packages/SystemUI/src/com/android/systemui/dialog/BaseDialog.java
index a6f12b5..14176e2 100644
--- a/packages/SystemUI/src/com/android/systemui/dialog/BaseDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/dialog/BaseDialog.java
@@ -14,18 +14,13 @@ import android.view.Window;
 import android.view.WindowManager;
 
 import com.android.systemui.R;
-import com.android.systemui.startupmenu.DialogType;
-
-/**
- * Created by ljh on 17-9-26.
- */
 
 public class BaseDialog extends Dialog {
     protected View mContentView;
     protected static Point mPoint;
 
     public BaseDialog(@NonNull Context context) {
-        this(context, R.style.StartMenuDialogStyle);
+        this(context, R.style.DialogStyle);
     }
 
     public BaseDialog(@NonNull Context context, @StyleRes int themeResId) {
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/CalendarView.java b/packages/SystemUI/src/com/android/systemui/dialog/CalendarView.java
index ddd4da1..0493c24 100644
--- a/packages/SystemUI/src/com/android/systemui/dialog/CalendarView.java
+++ b/packages/SystemUI/src/com/android/systemui/dialog/CalendarView.java
@@ -127,7 +127,7 @@ public class CalendarView extends ViewFlipper implements
         LinearLayout.LayoutParams layout = new LinearLayout.LayoutParams(
                                   LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT, 1);
         Resources res = getResources();
-        mTB = res.getDimension(R.dimen.startupmenu_search_icon_size);
+        mTB = res.getDimension(R.dimen.calendar_icon_size);
         title.setLayoutParams(layout);
         oneCalendar.addView(title);
 
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/DialogType.java b/packages/SystemUI/src/com/android/systemui/dialog/DialogType.java
new file mode 100644
index 0000000..a1938ea
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/dialog/DialogType.java
@@ -0,0 +1,9 @@
+package com.android.systemui.dialog;
+
+/**
+ * dialog type
+ */
+
+public enum DialogType {
+    LIST, GRID, SORT, SHOW_TASKBAR, BAR_LOCK_CLOSE, BAR_LOCK_OPEN, BAR_UNLOCK_OPEN, NOTIFY_NAME
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/MenuDialog.java b/packages/SystemUI/src/com/android/systemui/dialog/MenuDialog.java
index e60010a..ca3cfa3 100644
--- a/packages/SystemUI/src/com/android/systemui/dialog/MenuDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/dialog/MenuDialog.java
@@ -1,11 +1,7 @@
 package com.android.systemui.dialog;
 
-import android.content.ComponentName;
 import android.content.Context;
-import android.content.Intent;
 import android.graphics.PixelFormat;
-import android.net.Uri;
-import android.support.annotation.NonNull;
 import android.view.Gravity;
 import android.view.LayoutInflater;
 import android.view.MotionEvent;
@@ -13,7 +9,6 @@ import android.view.View;
 import android.view.ViewGroup;
 import android.view.Window;
 import android.view.WindowManager;
-import android.widget.AdapterView;
 import android.widget.BaseAdapter;
 import android.widget.LinearLayout;
 import android.widget.ListView;
@@ -21,32 +16,27 @@ import android.widget.TextView;
 
 import com.android.systemui.R;
 import com.android.systemui.SysUiServiceProvider;
-import com.android.systemui.sql.SqliteOperate;
-import com.android.systemui.startupmenu.AppEntry;
-import com.android.systemui.startupmenu.LaunchAppUtil;
-import com.android.systemui.startupmenu.DialogType;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.listener.OnMenuClick;
 import com.android.systemui.statusbar.phone.StatusBar;
 
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
-/**
- * Created by ljh on 17-9-14.
- */
-
-public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickListener {
+public class MenuDialog extends BaseDialog {
     private List<String> mDatas;
     private DialogAdapter mAdapter;
     private ListView mListView;
-    private AppEntry mAppEntry;
-    private ComponentName mComponentName;
+    private AppInfo mAppInfo;
+    private OnMenuClick mOnMenuClick;
     private int mWidth;
     private int mHeight;
-    private int mStatusBarHeight;
     private StatusBar mStatusBar;
+    private int mStatusBarHeight;
+    private DialogType mDialogType;
 
-    public MenuDialog(@NonNull Context context) {
+    public MenuDialog(Context context) {
         super(context);
         mContentView = LayoutInflater.from(getContext()).inflate(R.layout.menu_dialog, null, false);
         setContentView(mContentView);
@@ -56,7 +46,6 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
     }
 
     public void initListener() {
-        mListView.setOnItemClickListener(this);
     }
 
     public void initView() {
@@ -72,20 +61,42 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
                 getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_height);
     }
 
-    public void show(DialogType type, AppEntry appEntry, int x, int y) {
-        mAppEntry = appEntry;
-        mComponentName = appEntry.getComponentName();
+    public void showSort(View view) {
+        mDialogType = DialogType.SORT;
+        mAppInfo = null;
+        int[] location = new int[2];
+        view.getLocationOnScreen(location);
+
+        Window dialogWindow = getWindow();
+        dialogWindow.setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
+        dialogWindow.setGravity(Gravity.LEFT | Gravity.TOP);
+        WindowManager.LayoutParams lp = dialogWindow.getAttributes();
+        lp.format = PixelFormat.TRANSPARENT;
+        lp.dimAmount = 0;
+
+        prepareData();
+        lp.x = location[0] + view.getWidth() - mWidth;
+        lp.y = location[1] + view.getHeight();
+        dialogWindow.setAttributes(lp);
+        show();
+    }
+
+    public void show(DialogType type, AppInfo appInfo, int x, int y) {
+        mDialogType = type;
+        mAppInfo = appInfo;
         show(type, x, y);
     }
 
-    public void show(DialogType type, ComponentName componentName, View view) {
-        mComponentName = componentName;
-        prepareData(type);
+    public void show(DialogType type, AppInfo appInfo, View view) {
+        mDialogType = type;
+        mAppInfo = appInfo;
+        prepareData();
         show(view);
     }
 
     public void show(DialogType type, int x, int y) {
-        prepareData(type);
+        mDialogType = type;
+        prepareData();
         Window dialogWindow = getWindow();
         dialogWindow.setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
         WindowManager.LayoutParams lp = dialogWindow.getAttributes();
@@ -98,7 +109,8 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
                 lp.x = x - mWidth / 2;
                 lp.y = 0;
                 break;
-            default:
+            case GRID:
+            case LIST:
                 dialogWindow.setGravity(Gravity.LEFT | Gravity.TOP);
                 lp.x = x;
                 if (y > mPoint.y - mHeight - mStatusBarHeight) {
@@ -107,6 +119,8 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
                     lp.y = y;
                 }
                 break;
+            default:
+                break;
         }
         dialogWindow.setAttributes(lp);
         show();
@@ -114,41 +128,49 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
 
     @Override
     public void onWindowFocusChanged(boolean hasFocus) {
-        super.onWindowFocusChanged(hasFocus);
-        if (!hasFocus) {
-            dismiss();
+        if (hasFocus && isStartupMenu()) {
+            StartupMenuDialog startupMenuDialog = mStatusBar.getStartupMenuDialog();
+            if (startupMenuDialog != null) {
+                startupMenuDialog.setCanDismiss(false);
+            }
         }
+        super.onWindowFocusChanged(hasFocus);
     }
 
     /**
      * init dialog data by dialog type
-     * @param type
      */
-    private void prepareData(DialogType type) {
+    private void prepareData() {
         mDatas.clear();
         String[] sArr = null;
-        switch (type) {
+        switch (mDialogType) {
             case GRID:
-                if (mStatusBar.isLocked(mComponentName)) {
-                    sArr = getContext().getResources().getStringArray(R.array.grid_menu_unlock);
-                } else {
+                if (mAppInfo.isLocked()) {
                     sArr = getContext().getResources().getStringArray(R.array.grid_menu_lock);
+                } else {
+                    sArr = getContext().getResources().getStringArray(R.array.grid_menu_unlock);
                 }
                 break;
             case LIST:
                 sArr = getContext().getResources().getStringArray(R.array.list_menu);
                 break;
+            case SORT:
+                sArr = getContext().getResources().getStringArray(R.array.sort_show);
+                break;
             case SHOW_TASKBAR:
                 sArr = getContext().getResources().getStringArray(R.array.bar_show_hide);
                 break;
+            case BAR_LOCK_CLOSE:
+                sArr = getContext().getResources().getStringArray(R.array.bar_menu_lock_close);
+                break;
             case BAR_LOCK_OPEN:
-                sArr = getContext().getResources().getStringArray(R.array.bar_menu_docked_open);
+                sArr = getContext().getResources().getStringArray(R.array.bar_menu_lock_open);
                 break;
-            case BAR_LOCK_CLOSE:
-                sArr = getContext().getResources().getStringArray(R.array.bar_menu_docked_closed);
+            case BAR_UNLOCK_OPEN:
+                sArr = getContext().getResources().getStringArray(R.array.bar_menu_unlock_open);
                 break;
-            case BAR_NORMAL:
-                sArr = getContext().getResources().getStringArray(R.array.bar_menu_normal);
+            case NOTIFY_NAME:
+                sArr = new String[]{mAppInfo.getLabel()};
                 break;
         }
         mDatas.addAll(Arrays.asList(sArr));
@@ -166,56 +188,13 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
         mListView.setLayoutParams(new LinearLayout.LayoutParams(mWidth, mHeight));
     }
 
-    /**
-     * init click event
-     * @param parent
-     * @param view
-     * @param position
-     * @param id
-     */
-    @Override
-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        dismiss();
-        String content = mDatas.get(position);
-        if (content.equals(getContext().getString(R.string.open))) {
-            LaunchAppUtil.launchApp(getContext(), mComponentName);
-            SqliteOperate.updateDataStorage(getContext(), mAppEntry);
-        } else if (content.equals(getContext().getString(R.string.phone_mode))) {
-            LaunchAppUtil.launchApp(getContext(), mComponentName, LaunchAppUtil.PHONE_MODE);
-            SqliteOperate.updateDataStorage(getContext(), mAppEntry);
-        } else if (content.equals(getContext().getString(R.string.desktop_mode))) {
-            LaunchAppUtil.launchApp(getContext(), mComponentName, LaunchAppUtil.DESKTOP_MODE);
-            SqliteOperate.updateDataStorage(getContext(), mAppEntry);
-        } else if (content.equals(getContext().getString(R.string.lock_app))) {
-            mStatusBar.locked(mComponentName);
-        } else if (content.equals(getContext().getString(R.string.unlock_app))) {
-            mStatusBar.unlocked(mComponentName);
-        } else if (content.equals(getContext().getString(R.string.remove_out))) {
-            StartupMenuDialog.getInstance(getContext()).mListDatas.remove(mAppEntry);
-            StartupMenuDialog.getInstance(getContext()).mListAdapter.notifyDataSetChanged();
-            SqliteOperate.deleteDataStorage(getContext(), mAppEntry.getPackageName());
-        } else if (content.equals(getContext().getString(R.string.uninstall))) {
-            uninstallApp();
-        } else if (content.equals(getContext().getString(R.string.close))) {
-            mStatusBar.closeApp(mComponentName);
-        } else if (content.equals(getContext().getString(R.string.status_bar_info_show))) {
-
-        } else if (content.equals(getContext().getString(R.string.status_bar_info_hide))) {
-
-        }
+    public boolean isStartupMenu() {
+        return mDialogType != null && (mDialogType == DialogType.GRID
+                || mDialogType == DialogType.LIST || mDialogType == DialogType.SORT);
     }
 
-    private void dismissAndHideStartMenu(boolean hideStartMenu) {
-        dismiss();
-    }
-
-    /**
-     * uninstall app
-     */
-    private void uninstallApp() {
-        Uri uri = Uri.parse("package:" + mAppEntry.getPackageName());
-        Intent intent = new Intent(Intent.ACTION_DELETE, uri);
-        getContext().startActivity(intent);
+    public void setOnMenuClick(OnMenuClick menuClick) {
+        mOnMenuClick = menuClick;
     }
 
     private class DialogAdapter extends BaseAdapter {
@@ -243,6 +222,8 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
                         LayoutInflater.from(getContext()).inflate(R.layout.menu_dialog_item, parent, false);
                 holder = new ViewHolder(convertView);
                 convertView.setTag(holder);
+                holder.text.setOnHoverListener(mHoverListener);
+                holder.text.setOnClickListener(mClickListener);
             } else {
                 holder = (ViewHolder) convertView.getTag();
             }
@@ -250,26 +231,46 @@ public class MenuDialog extends BaseDialog implements AdapterView.OnItemClickLis
             return convertView;
         }
 
-        private class ViewHolder implements View.OnHoverListener {
-            private TextView text;
-
-            public ViewHolder(View view) {
-                text = (TextView) view.findViewById(R.id.text);
-                view.setOnHoverListener(this);
+        private View.OnClickListener mClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (mOnMenuClick != null) {
+                    if (mDialogType == DialogType.SORT) {
+                        mOnMenuClick.sortShow(v, MenuDialog.this,
+                                ((TextView) v).getText().toString());
+                    } else {
+                        mOnMenuClick.menuClick(v, MenuDialog.this,
+                                mAppInfo, ((TextView) v).getText().toString());
+                    }
+                }
             }
+        };
 
+        private View.OnHoverListener mHoverListener = new View.OnHoverListener() {
             @Override
             public boolean onHover(View v, MotionEvent event) {
                 switch (event.getAction()) {
                     case MotionEvent.ACTION_HOVER_ENTER:
                         v.setBackgroundResource(R.color.common_hover_bg);
+                        ((TextView) v).setTextColor(getContext()
+                                .getResources().getColor(android.R.color.white));
                         break;
                     case MotionEvent.ACTION_HOVER_EXIT:
                         v.setBackgroundResource(android.R.color.white);
+                        ((TextView) v).setTextColor(getContext()
+                                .getResources().getColor(android.R.color.black));
                         break;
                 }
                 return false;
             }
+        };
+
+        private class ViewHolder {
+            private TextView text;
+
+            public ViewHolder(View view) {
+                text = (TextView) view.findViewById(R.id.text);
+            }
         }
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/StartupMenuDialog.java b/packages/SystemUI/src/com/android/systemui/dialog/StartupMenuDialog.java
index 27de102..9407e3b 100644
--- a/packages/SystemUI/src/com/android/systemui/dialog/StartupMenuDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/dialog/StartupMenuDialog.java
@@ -1,536 +1,46 @@
 package com.android.systemui.dialog;
 
-import android.content.BroadcastReceiver;
-import android.content.ComponentName;
 import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.os.Handler;
-import android.support.annotation.NonNull;
-import android.text.Editable;
-import android.text.TextUtils;
-import android.text.TextWatcher;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
 import android.view.View;
-import android.widget.EditText;
-import android.widget.GridView;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.ListView;
-import android.widget.TextView;
-import android.widget.Toast;
 
-import com.android.systemui.R;
-import com.android.systemui.power.PowerSourceActivity;
-import com.android.systemui.sql.SqliteOpenHelper;
-import com.android.systemui.sql.StartMenuDatabaseField;
-import com.android.systemui.startupmenu.AppEntry;
-import com.android.systemui.startupmenu.LaunchAppUtil;
-import com.android.systemui.startupmenu.ShowType;
-import com.android.systemui.startupmenu.SortSelectPopupWindow;
-import com.android.systemui.startupmenu.StartMenuAdapter;
+import com.android.systemui.startupmenu.StartupMenuView;
 
-import java.io.File;
-import java.text.Collator;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.List;
+public class StartupMenuDialog extends BaseDialog {
+    private boolean mCanDismiss;
 
-public class StartupMenuDialog extends BaseDialog
-        implements View.OnClickListener, View.OnHoverListener,
-        SortSelectPopupWindow.SortSelectListener, TextWatcher {
-
-    // sotr type
-    public static final int DEFAULT_SORT = 0;
-    public static final int NAME_SORT = 1;
-    public static final int NAME_SORT_REVERSE = -1;
-    public static final int TIME_SORT = 2;
-    public static final int TIME_SORT_REVERSE = -2;
-    public static final int CLICK_SORT = 3;
-    public static final int CLICK_SORT_REVERSE = -3;
-
-    private static StartupMenuDialog mStartupMenuDialog;
-
-    private GridView mGridView;
-    private EditText mSearchView;
-    private ListView mListView;
-    private LinearLayout mFileManager;
-    private LinearLayout mSetting;
-    private LinearLayout mPower;
-    private LinearLayout mSortLayout;
-    private ImageView mSortDirection;
-    private TextView mSortText;
-
-    private ImageView mSortSelect;
-    public List<AppEntry> mListDatas;
-    private List<AppEntry> mGridDatas;
-
-    private List<AppEntry> mAppDatas;
-    public StartMenuAdapter mListAdapter;
-    private StartMenuAdapter mGridAdapter;
-    private SortSelectPopupWindow mSortSelectPopupWindow;
-    private int mType;
-    private Handler mHandler;
-
-    private BroadcastReceiver mAppStateChangeReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            refreshApps(true);
-        }
-    };
-
-    public static StartupMenuDialog getInstance(Context context) {
-        if (mStartupMenuDialog == null) {
-            mStartupMenuDialog = new StartupMenuDialog(context);
-        }
-        return mStartupMenuDialog;
-    }
-
-    public static StartupMenuDialog reCreateStartupMenudialog(Context context) {
-        mStartupMenuDialog = new StartupMenuDialog(context);
-        return mStartupMenuDialog;
-    }
-
-    private StartupMenuDialog(@NonNull Context context) {
+    public StartupMenuDialog(Context context) {
         super(context);
-        mContentView =
-                LayoutInflater.from(getContext()).inflate(R.layout.start_menu_left, null, false);
-        setContentView(R.layout.start_menu_left);
-    }
-
-    public static void dismissDialog() {
-        if (mStartupMenuDialog != null && mStartupMenuDialog.isShowing()) {
-            mStartupMenuDialog.dismiss();
-        }
+        mCanDismiss = true;
+        mContentView = new StartupMenuView(context);
+        setContentView(mContentView);
     }
 
     @Override
     public void show(View view) {
         super.show(view);
-        refreshApps(true);
-    }
-
-    public void initView() {
-        mListView = (ListView) findViewById(R.id.common_list);
-        mFileManager = (LinearLayout) findViewById(R.id.file_manager);
-        mSetting = (LinearLayout) findViewById(R.id.system_setting);
-        mPower = (LinearLayout) findViewById(R.id.power_off);
-        mSearchView = (EditText) findViewById(R.id.search);
-        mSortLayout = (LinearLayout) findViewById(R.id.sort_click_layout);
-        mSortDirection = (ImageView) findViewById(R.id.sort_image_direction);
-        mSortText = (TextView) findViewById(R.id.sort_text);
-        mSortSelect = (ImageView) findViewById(R.id.sort_select);
-        mGridView = (GridView) findViewById(R.id.start_menu);
-    }
-
-    public void initData() {
-        mAppDatas = new ArrayList<>();
-        mListDatas = new ArrayList<>();
-        mGridDatas = new ArrayList<>();
-        mListAdapter = new StartMenuAdapter(getContext(), ShowType.LIST, mListDatas);
-        mGridAdapter = new StartMenuAdapter(getContext(), ShowType.GRID, mGridDatas);
-        mListView.setAdapter(mListAdapter);
-        mGridView.setAdapter(mGridAdapter);
-
-        mSearchView.addTextChangedListener(this);
-        mSortSelectPopupWindow = new SortSelectPopupWindow(getContext());
-        mType = LaunchAppUtil.getSharedPreferences(getContext()).getInt("sortType", DEFAULT_SORT);
-
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(Intent.ACTION_PACKAGE_ADDED);
-        filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
-        filter.addAction(Intent.ACTION_PACKAGE_REPLACED);
-        getContext().registerReceiver(mAppStateChangeReceiver, filter);
-
-        mHandler = new Handler();
-    }
-
-    public void initListener() {
-        mFileManager.setOnClickListener(this);
-        mSetting.setOnClickListener(this);
-        mPower.setOnClickListener(this);
-        mSortLayout.setOnClickListener(this);
-        mSortSelect.setOnClickListener(this);
-
-        mFileManager.setOnHoverListener(this);
-        mSetting.setOnHoverListener(this);
-        mPower.setOnHoverListener(this);
-
-        mSortSelectPopupWindow.setSortSelectListener(this);
+        ((StartupMenuView) mContentView).refresh();
     }
 
     @Override
-    public void onClick(View v) {
-        switch (v.getId()) {
-            case R.id.file_manager:
-                Toast.makeText(getContext(), "打开文件管理器", Toast.LENGTH_SHORT).show();
-                dismiss();
-                break;
-            case R.id.system_setting:
-                LaunchAppUtil.launchApp(getContext(),
-                        new ComponentName("com.android.settings", "com.android.settings.Settings"));
-                dismiss();
-                break;
-            case R.id.power_off:
-                Intent intent = new Intent(getContext(), PowerSourceActivity.class);
-                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK
-                        | Intent.FLAG_ACTIVITY_NO_ANIMATION);
-                getContext().startActivity(intent);
-                dismiss();
-                break;
-            case R.id.sort_click_layout:
-                mType = mType * -1;
-                sortOrder();
-                refreshSortView();
-                mGridAdapter.notifyDataSetChanged();
-                break;
-            case R.id.sort_select:
-                mSortSelectPopupWindow.showAsDropDown(mSortLayout);
-                break;
-        }
-    }
-
-    @Override
-    public boolean onHover(View v, MotionEvent event) {
-        switch (event.getAction()) {
-            case MotionEvent.ACTION_HOVER_ENTER:
-                v.setBackgroundResource(R.mipmap.common_bg);
-                break;
-            case MotionEvent.ACTION_HOVER_EXIT:
-                v.setBackgroundResource(R.color.common_hover_bg);
-                break;
-        }
-        return false;
-    }
-
-    private void refreshApps(boolean firstDraw) {
-        refreshApps(null, firstDraw);
-    }
-
-    /**
-     * refresh App list
-     *
-     * @param query     search content
-     * @param firstDraw
-     */
-    private void refreshApps(final String query, final boolean firstDraw) {
-        new Thread() {
-            @Override
-            public void run() {
-                super.run();
-                if (firstDraw) {
-                    mAppDatas.clear();
-                    PackageManager pm = getContext().getPackageManager();
-                    Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
-                    mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
-                    List<ResolveInfo> resolveInfos = pm.queryIntentActivities(mainIntent, 0);
-                    AppEntry appInfo;
-                    for (ResolveInfo reInfo : resolveInfos) {
-                        appInfo = new AppEntry();
-                        appInfo.setLabel((String) reInfo.loadLabel(pm));
-                        appInfo.setPackageName(reInfo.activityInfo.packageName);
-                        appInfo.setInstallTime(
-                                new File(reInfo.activityInfo.applicationInfo.sourceDir).lastModified());
-                        appInfo.setIcon(reInfo.loadIcon(pm));
-                        appInfo.setActivityName(reInfo.activityInfo.name);
-                        appInfo.setUseCounts(0);
-                        mAppDatas.add(appInfo);
-                    }
-                    queryCommonAppInfo();
-                }
-
-                mGridDatas.clear();
-                if (TextUtils.isEmpty(query)) {
-                    mGridDatas.addAll(mAppDatas);
-                } else {
-                    for (AppEntry appEntry : mAppDatas) {
-                        if (appEntry.getLabel().toLowerCase().contains(query.toLowerCase())) {
-                            mGridDatas.add(appEntry);
-                        }
-                    }
-                }
-
-                sortOrder();
-                mHandler.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        refreshSortView();
-                        mGridAdapter.notifyDataSetChanged();
-                        mListAdapter.notifyDataSetChanged();
-                    }
-                });
-            }
-        }.start();
-    }
-
-    /**
-     * search common apps from sqliteDatabase
-     */
-    private void queryCommonAppInfo() {
-        SqliteOpenHelper sqliteOpenHelper = SqliteOpenHelper.getInstance(getContext());
-        SQLiteDatabase db = sqliteOpenHelper.getWritableDatabase();
-        List<AppEntry> tempAppInfo = new ArrayList<>();
-        mListDatas.clear();
-        Cursor cs = db.rawQuery("select distinct * from " + StartMenuDatabaseField.TABLE_NAME
-                + " order by " + StartMenuDatabaseField.COLUMN_USECOUNT + " desc", new String[]{});
-        int i = 0;
-        while (cs.moveToNext() && i < 8) {
-            String pkgName = cs.getString(cs.getColumnIndex(StartMenuDatabaseField.COLUMN_PACKAGENAME));
-            int number = cs.getInt(cs.getColumnIndex(StartMenuDatabaseField.COLUMN_USECOUNT));
-            if (number > 0) {
-                for (AppEntry info : mAppDatas) {
-                    if (info.getPackageName().equals(pkgName)) {
-                        info.setUseCounts(number);
-                        tempAppInfo.add(info);
-                        break;
-                    }
-                }
-            }
-            i++;
-        }
-        cs.close();
-        db.close();
-
-        Collections.sort(tempAppInfo, new Comparator<AppEntry>() {
-            public int compare(AppEntry lhs, AppEntry rhs) {
-                if (rhs.getUseCounts() == lhs.getUseCounts()) {
-                    return rhs.getPackageName().compareTo(lhs.getPackageName());
-                }
-                return rhs.getUseCounts() > lhs.getUseCounts() ? 1 : -1;
-            }
-        });
-        mListDatas.addAll(
-                tempAppInfo.subList(0, Math.min(tempAppInfo.size(), 8)));
-    }
-
-    /**
-     * sort ways
-     */
-    private void sortOrder() {
-        switch (mType) {
-            case DEFAULT_SORT:
-                defaultSort();
-                break;
-            case NAME_SORT:
-                nameSort();
-                break;
-            case NAME_SORT_REVERSE:
-                nameSort();
-                Collections.reverse(mGridDatas);
-                break;
-            case TIME_SORT:
-                timeSort();
-                break;
-            case TIME_SORT_REVERSE:
-                timeSort();
-                Collections.reverse(mGridDatas);
-                break;
-            case CLICK_SORT:
-                clickSort();
-                break;
-            case CLICK_SORT_REVERSE:
-                clickSort();
-                Collections.reverse(mGridDatas);
-                break;
-            default:
-                break;
-        }
-        saveSortTypeToSP(mType);
-    }
-
-    /**
-     * refresh view when notification layot
-     */
-    private void refreshSortView() {
-        mSortDirection.setVisibility(View.VISIBLE);
-        switch (mType) {
-            case DEFAULT_SORT:
-                mSortDirection.setVisibility(View.INVISIBLE);
-                mSortText.setText(R.string.default_sort);
-                break;
-            case NAME_SORT:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_up_arrow);
-                mSortText.setText(R.string.name_sort);
-                break;
-            case NAME_SORT_REVERSE:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_down_arrow);
-                mSortText.setText(R.string.name_sort);
-                break;
-            case TIME_SORT:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_up_arrow);
-                mSortText.setText(R.string.time_sort);
-                break;
-            case TIME_SORT_REVERSE:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_down_arrow);
-                mSortText.setText(R.string.time_sort);
-                break;
-            case CLICK_SORT:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_up_arrow);
-                mSortText.setText(R.string.click_sort);
-                break;
-            case CLICK_SORT_REVERSE:
-                mSortDirection.setImageResource(R.mipmap.ic_start_menu_down_arrow);
-                mSortText.setText(R.string.click_sort);
-                break;
-            default:
-                break;
-        }
-    }
-
-    private void defaultSort() {
-        nameSort();
-    }
-
-    /**
-     * sort data by name
-     */
-    private void nameSort() {
-        List<AppEntry> listEnglish = new ArrayList<>();
-        List<AppEntry> listChina = new ArrayList<>();
-        List<AppEntry> listNumber = new ArrayList<>();
-        for (AppEntry appInfo : mGridDatas) {
-            String appLabel = appInfo.getLabel();
-            char ch = appLabel.charAt(0);
-            if (ch >= '0' && ch <= '9') {
-                listNumber.add(appInfo);
-            } else {
-                if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')) {
-                    listEnglish.add(appInfo);
-                } else {
-                    listChina.add(appInfo);
-                }
-            }
+    public void dismiss() {
+        MenuDialog menuDialog = ((StartupMenuView) mContentView).getmMenuDialog();
+        if (menuDialog != null && menuDialog.isShowing()) {
+            menuDialog.dismiss();
         }
-        Collections.sort(listEnglish, new Comparator<AppEntry>() {
-            @Override
-            public int compare(AppEntry o1, AppEntry o2) {
-                return o1.getLabel().compareTo(o2.getLabel());
-            }
-        });
-
-        Collections.sort(listNumber, new Comparator<AppEntry>() {
-            @Override
-            public int compare(AppEntry o1, AppEntry o2) {
-                return o1.getLabel().compareTo(o2.getLabel());
-            }
-        });
-        final Collator collator = Collator.getInstance();
-        Collections.sort(listChina, new Comparator<AppEntry>() {
-            @Override
-            public int compare(AppEntry o1, AppEntry o2) {
-                return collator.getCollationKey(o1.getLabel()).
-                        compareTo(collator.getCollationKey(o2.getLabel()));
-            }
-        });
-        mGridDatas.clear();
-        mGridDatas.addAll(listNumber);
-        mGridDatas.addAll(listEnglish);
-        mGridDatas.addAll(listChina);
-    }
-
-    /**
-     * sort data by time
-     */
-    private void timeSort() {
-        Collections.sort(mGridDatas, new Comparator<AppEntry>() {
-            public int compare(AppEntry lhs, AppEntry rhs) {
-                if (rhs.getInstallTime() == lhs.getInstallTime()) {
-                    return rhs.getPackageName().compareTo(lhs.getPackageName());
-                }
-                return rhs.getInstallTime() > lhs.getInstallTime() ? 1 : -1;
-            }
-        });
-    }
-
-    /**
-     * sort data by click count
-     */
-    private void clickSort() {
-        Collections.sort(mGridDatas, new Comparator<AppEntry>() {
-            public int compare(AppEntry lhs, AppEntry rhs) {
-                if (rhs.getUseCounts() == lhs.getUseCounts()) {
-                    return rhs.getPackageName().compareTo(lhs.getPackageName());
-                }
-                return rhs.getUseCounts() > lhs.getUseCounts() ? 1 : -1;
-            }
-        });
+        super.dismiss();
     }
 
-    /**
-     * save sort type to Sharepreference
-     *
-     * @param type
-     */
-    private void saveSortTypeToSP(int type) {
-        LaunchAppUtil.getSharedPreferences(getContext()).edit().putInt("sortType", type).commit();
+    public void setCanDismiss(boolean canDismiss) {
+        mCanDismiss = canDismiss;
     }
 
-    /**
-     * sort operate by default
-     * @param v
-     */
     @Override
-    public void defaultSort(View v) {
-        mType = DEFAULT_SORT;
-        sortOrder();
-        refreshSortView();
-        mGridAdapter.notifyDataSetChanged();
-    }
-
-    /**
-     * sort operate by click count
-     * @param v
-     */
-    @Override
-    public void clickSort(View v) {
-        mType = CLICK_SORT;
-        sortOrder();
-        refreshSortView();
-        mGridAdapter.notifyDataSetChanged();
-    }
-
-    /**
-     * sort operate by time
-     * @param v
-     */
-    @Override
-    public void timeSort(View v) {
-        mType = TIME_SORT;
-        sortOrder();
-        refreshSortView();
-        mGridAdapter.notifyDataSetChanged();
-    }
-
-    /**
-     * sort operate by name
-     * @param v
-     */
-    @Override
-    public void nameSort(View v) {
-        mType = NAME_SORT;
-        sortOrder();
-        refreshSortView();
-        mGridAdapter.notifyDataSetChanged();
-    }
-
-    @Override
-    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
-
-    }
-
-    @Override
-    public void onTextChanged(CharSequence s, int start, int before, int count) {
-
-    }
-
-    @Override
-    public void afterTextChanged(Editable s) {
-        refreshApps(s.toString(), false);
+    public void onWindowFocusChanged(boolean hasFocus) {
+        if (!mCanDismiss) {
+            mCanDismiss = true;
+        } else if (!hasFocus) {
+            dismiss();
+        }
+        super.onWindowFocusChanged(hasFocus);
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/TaskbarIcon.java b/packages/SystemUI/src/com/android/systemui/dialog/TaskbarIcon.java
deleted file mode 100644
index 6f793ad..0000000
--- a/packages/SystemUI/src/com/android/systemui/dialog/TaskbarIcon.java
+++ /dev/null
@@ -1,100 +0,0 @@
-package com.android.systemui.dialog;
-
-import android.content.ComponentName;
-import android.content.Context;
-import android.os.Process;
-import android.os.UserManager;
-import android.view.View;
-import android.widget.FrameLayout;
-
-import com.android.systemui.R;
-
-/**
- * Created by ljh on 17-10-25.
- */
-
-public class TaskbarIcon {
-    private int taskId;
-    private long userId;
-    private ComponentName componentName;
-    private FrameLayout iconLayout;
-    private boolean isRun;
-    private boolean isLocked;
-    private boolean isFocus;
-    private View focuseView;
-    private View runView;
-
-    public TaskbarIcon(ComponentName componentName, FrameLayout iconLayout) {
-        this.componentName = componentName;
-        this.iconLayout = iconLayout;
-        focuseView = iconLayout.findViewById(R.id.activity_focused);
-        runView = iconLayout.findViewById(R.id.activity_run);
-    }
-
-    public int getTaskId() {
-        return taskId;
-    }
-
-    public void setTaskId(int taskId) {
-        this.taskId = taskId;
-    }
-
-    public void setUserId(long userId) {
-        this.userId = userId;
-    }
-
-    public long getUserId(Context context) {
-        if(userId == -1) {
-            UserManager userManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
-            return userManager.getSerialNumberForUser(Process.myUserHandle());
-        } else
-            return userId;
-    }
-
-    public ComponentName getComponentName() {
-        return componentName;
-    }
-
-    public void setComponentName(ComponentName componentName) {
-        this.componentName = componentName;
-    }
-
-    public FrameLayout getIconLayout() {
-        return iconLayout;
-    }
-
-    public void setIconLayout(FrameLayout iconLayout) {
-        this.iconLayout = iconLayout;
-    }
-
-    public boolean isRun() {
-        return isRun;
-    }
-
-    public void setRun(boolean run) {
-        if (run) {
-            runView.setVisibility(View.VISIBLE);
-        } else {
-            runView.setVisibility(View.GONE);
-            setFocus(false);
-        }
-        isRun = run;
-    }
-
-    public boolean isFocus() {
-        return isFocus;
-    }
-
-    public void setFocus(boolean focus) {
-        focuseView.setVisibility(focus ? View.VISIBLE : View.GONE);
-        isFocus = focus;
-    }
-
-    public boolean isLocked() {
-        return isLocked;
-    }
-
-    public void setLocked(boolean locked) {
-        isLocked = locked;
-    }
-}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/dialog/WifiDialog.java b/packages/SystemUI/src/com/android/systemui/dialog/WifiDialog.java
index af284b2..989901f 100644
--- a/packages/SystemUI/src/com/android/systemui/dialog/WifiDialog.java
+++ b/packages/SystemUI/src/com/android/systemui/dialog/WifiDialog.java
@@ -15,11 +15,11 @@ import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.BaseAdapter;
+import android.widget.CheckBox;
 import android.widget.CompoundButton;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.ListView;
-import android.widget.Switch;
 import android.widget.TextView;
 
 import com.android.systemui.R;
@@ -50,7 +50,7 @@ public final class WifiDialog extends BaseDialog {
     private WifiManager mWifiManager;
 
     private ListView mWifiListView;
-    private Switch mWifiEnableBtn;
+    private CheckBox mWifiEnableBtn;
     private TextView mWifiEnable;
     private TextView mEthernetConfigure;
 
@@ -95,7 +95,7 @@ public final class WifiDialog extends BaseDialog {
         mWifiEnableLayout = (LinearLayout) mContentView.findViewById(R.id.wifi_enable_layout);
         mLayout = (LinearLayout) mContentView.findViewById(R.id.wifi_layout);
         mWifiEnable = (TextView) mContentView.findViewById(R.id.wifi_enable);
-        mWifiEnableBtn = (Switch) mContentView.findViewById(R.id.wifi_enable_btn);
+        mWifiEnableBtn = (CheckBox) mContentView.findViewById(R.id.wifi_enable_btn);
         mEthernetConfigure = (TextView) mContentView.findViewById(R.id.ethernet_configure);
     }
 
@@ -105,7 +105,7 @@ public final class WifiDialog extends BaseDialog {
         mLayout.setLayoutParams(new LinearLayout.LayoutParams(
                 mWifiEnableLayout.getMeasuredWidth(), ViewGroup.LayoutParams.WRAP_CONTENT));
         mMaxListViewHeight =
-                getContext().getResources().getDimensionPixelOffset(R.dimen.systemui_size_wifi_height);
+                getContext().getResources().getDimensionPixelOffset(R.dimen.max_list_wifi_height);
         mWifiManager = (WifiManager) getContext().getSystemService(Context.WIFI_SERVICE);
         mScanResults = new ArrayList<>();
         mNetInfoAdapter = new NetInfoAdapter();
diff --git a/packages/SystemUI/src/com/android/systemui/sql/SqliteOpenHelper.java b/packages/SystemUI/src/com/android/systemui/sql/SqliteOpenHelper.java
deleted file mode 100644
index 4e71fa0..0000000
--- a/packages/SystemUI/src/com/android/systemui/sql/SqliteOpenHelper.java
+++ /dev/null
@@ -1,49 +0,0 @@
-package com.android.systemui.sql;
-
-import android.content.Context;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
-
-public class SqliteOpenHelper extends SQLiteOpenHelper {
-    private static final int SQL_VERSION_CODE = 4;
-    private static final String SQL_NAME = "SYSTEMUI_DATABASE";
-
-    private static SqliteOpenHelper sqliteOpenHelper;
-
-    private SqliteOpenHelper(Context context) {
-        super(context, SQL_NAME, null, SQL_VERSION_CODE);
-    }
-
-    public static SqliteOpenHelper getInstance(Context context) {
-        if (sqliteOpenHelper == null) {
-            sqliteOpenHelper = new SqliteOpenHelper(context);
-        }
-        return sqliteOpenHelper;
-    }
-
-    @Override
-    public void onCreate(SQLiteDatabase db) {
-        db.execSQL("create table " + StartMenuDatabaseField.TABLE_NAME + "("
-                + StartMenuDatabaseField.COLUMN_ID + " integer primary key autoincrement,"
-                + StartMenuDatabaseField.COLUMN_LABEL + " char(20),"
-                + StartMenuDatabaseField.COLUMN_PACKAGENAME + " char(100),"
-                + StartMenuDatabaseField.COLUMN_ACTIVITYNAME + " char(100),"
-                + StartMenuDatabaseField.COLUMN_INSTALL_TIME + " integer,"
-                + StartMenuDatabaseField.COLUMN_USECOUNT + " char(10)"
-                + ")");
-
-        db.execSQL("create table " + TaskbarIconField.TABLE_NAME + "("
-                + TaskbarIconField.COLUMN_ID + " integer primary key autoincrement,"
-                + TaskbarIconField.USER_ID + " integer,"
-                + TaskbarIconField.COMPONENT_NAME + " char(100)"
-                + ")");
-    }
-
-    @Override
-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        if (newVersion > oldVersion) {
-            db.execSQL("drop table " + StartMenuDatabaseField.TABLE_NAME);
-            onCreate(db);
-        }
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/sql/SqliteOperate.java b/packages/SystemUI/src/com/android/systemui/sql/SqliteOperate.java
deleted file mode 100644
index f4c5366..0000000
--- a/packages/SystemUI/src/com/android/systemui/sql/SqliteOperate.java
+++ /dev/null
@@ -1,76 +0,0 @@
-package com.android.systemui.sql;
-
-import android.content.ContentValues;
-import android.content.Context;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-
-import com.android.systemui.dialog.TaskbarIcon;
-import com.android.systemui.startupmenu.AppEntry;
-
-/*
-* Created by Cao Yongren on 15-5-2017
-*/
-
-public class SqliteOperate {
-    /*
-    * When run app, need change SqlDataBase and sharedPreference.
-    */
-    public static void updateDataStorage(Context context, AppEntry appInfo) {
-        SqliteOpenHelper sqliteOpenHelper = SqliteOpenHelper.getInstance(context);
-        SQLiteDatabase db = sqliteOpenHelper.getWritableDatabase();
-        Cursor cursor = db.rawQuery("select * from " + StartMenuDatabaseField.TABLE_NAME +
-                " where " + StartMenuDatabaseField.COLUMN_PACKAGENAME +
-                " = ? ", new String[]{appInfo.getPackageName()});
-        ContentValues values = new ContentValues();
-        if (cursor.moveToNext()) {
-            int numbers = cursor.getInt(cursor.getColumnIndex(
-                    StartMenuDatabaseField.COLUMN_USECOUNT));
-            values.put(StartMenuDatabaseField.COLUMN_USECOUNT, ++numbers);
-            db.update(StartMenuDatabaseField.TABLE_NAME, values, StartMenuDatabaseField.
-                    COLUMN_PACKAGENAME + " = ?", new String[]{appInfo.getPackageName()});
-        } else {
-            values.put(StartMenuDatabaseField.COLUMN_LABEL, appInfo.getLabel());
-            values.put(StartMenuDatabaseField.COLUMN_PACKAGENAME, appInfo.getPackageName());
-            values.put(StartMenuDatabaseField.COLUMN_ACTIVITYNAME, appInfo.getActivityName());
-            values.put(StartMenuDatabaseField.COLUMN_INSTALL_TIME, appInfo.getInstallTime());
-            values.put(StartMenuDatabaseField.COLUMN_USECOUNT, 1);
-            db.insert(StartMenuDatabaseField.TABLE_NAME, null, values);
-        }
-        cursor.close();
-        db.close();
-    }
-
-    public static void deleteDataStorage(Context context, String pkgName) {
-        SqliteOpenHelper sqliteOpenHelper = SqliteOpenHelper.getInstance(context);
-        SQLiteDatabase db = sqliteOpenHelper.getWritableDatabase();
-        db.delete(StartMenuDatabaseField.TABLE_NAME, StartMenuDatabaseField.COLUMN_PACKAGENAME
-                + " = ? ", new String[]{pkgName});
-        db.close();
-    }
-
-    public static void saveTaskbarIcon(Context context, TaskbarIcon taskbarIcon){
-        SqliteOpenHelper sqliteOpenHelper = SqliteOpenHelper.getInstance(context);
-        SQLiteDatabase db = sqliteOpenHelper.getWritableDatabase();
-        Cursor cursor = db.rawQuery("select * from " + TaskbarIconField.TABLE_NAME +
-                " where " + TaskbarIconField.COMPONENT_NAME +
-                " = ? ", new String[]{taskbarIcon.getComponentName().flattenToString()});
-        ContentValues values = new ContentValues();
-        if (!cursor.moveToNext()) {
-            values.put(TaskbarIconField.USER_ID, taskbarIcon.getUserId(context));
-            values.put(TaskbarIconField.COMPONENT_NAME,
-                    taskbarIcon.getComponentName().flattenToString());
-            db.insert(TaskbarIconField.TABLE_NAME, null, values);
-        }
-        cursor.close();
-        db.close();
-    }
-
-    public static void deleteTaskbarIcon(Context context, String compontentName) {
-        SqliteOpenHelper sqliteOpenHelper = SqliteOpenHelper.getInstance(context);
-        SQLiteDatabase db = sqliteOpenHelper.getWritableDatabase();
-        db.delete(TaskbarIconField.TABLE_NAME, TaskbarIconField.COMPONENT_NAME
-                + " = ? ", new String[]{compontentName});
-        db.close();
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/sql/StartMenuDatabaseField.java b/packages/SystemUI/src/com/android/systemui/sql/StartMenuDatabaseField.java
deleted file mode 100644
index a6a2394..0000000
--- a/packages/SystemUI/src/com/android/systemui/sql/StartMenuDatabaseField.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package com.android.systemui.sql;
-
-/*
- * Created by Cao Yongren on 10-5-2017.
- */
-
-public class StartMenuDatabaseField {
-    public static final String TABLE_NAME = "table_app_perpo_name";
-    public static final String COLUMN_ID = "_id";
-    public static final String COLUMN_LABEL = "label";
-    public static final String COLUMN_PACKAGENAME = "pkgname";
-    public static final String COLUMN_ACTIVITYNAME = "activityname";
-    public static final String COLUMN_INSTALL_TIME = "install_date";
-    public static final String COLUMN_USECOUNT = "click_numbers";
-}
diff --git a/packages/SystemUI/src/com/android/systemui/sql/TaskbarIconField.java b/packages/SystemUI/src/com/android/systemui/sql/TaskbarIconField.java
deleted file mode 100644
index 4b30066..0000000
--- a/packages/SystemUI/src/com/android/systemui/sql/TaskbarIconField.java
+++ /dev/null
@@ -1,12 +0,0 @@
-package com.android.systemui.sql;
-
-/**
- * Created by ljh on 17-11-8.
- */
-
-public class TaskbarIconField {
-    public static final String TABLE_NAME = "taskbar_icon";
-    public static final String COLUMN_ID = "id";
-    public static final String USER_ID = "user_id";
-    public static final String COMPONENT_NAME = "component_name";
-}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/AppAdapter.java b/packages/SystemUI/src/com/android/systemui/startupmenu/AppAdapter.java
new file mode 100644
index 0000000..0c67431
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/AppAdapter.java
@@ -0,0 +1,159 @@
+package com.android.systemui.startupmenu;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.android.systemui.R;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.bean.Type;
+import com.android.systemui.startupmenu.listener.OnClickCallback;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class AppAdapter extends BaseAdapter {
+    private List<AppInfo> mAppInfos;
+    private Context mContext;
+    private Type mType;
+    private OnClickCallback mOnClickCallback;
+    private int mDownX;
+    private int mDownY;
+    public static View mLastView;
+
+    public AppAdapter(Context context, Type type) {
+        mContext = context;
+        mType = type;
+        mAppInfos = new ArrayList<>();
+    }
+
+    @Override
+    public int getCount() {
+        return mAppInfos.size();
+    }
+
+    @Override
+    public Object getItem(int position) {
+        return mAppInfos.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    @Override
+    public View getView(final int position, View convertView, ViewGroup parent) {
+        if (convertView == null) {
+            convertView = LayoutInflater.from(mContext).inflate(getLayoutId(), null);
+        }
+        ViewHolder holder = (ViewHolder) convertView.getTag();
+        if (holder == null) {
+            holder = new ViewHolder(convertView);
+            convertView.setTag(holder);
+        }
+
+        AppInfo appInfo = mAppInfos.get(position);
+        holder.appIcon.setImageDrawable(appInfo.getIcon());
+        holder.tvAppLabel.setText(appInfo.getLabel());
+        holder.layout.setTag(appInfo);
+        return convertView;
+    }
+
+    public void setOnClickCallback(OnClickCallback onClickCallback) {
+        mOnClickCallback = onClickCallback;
+    }
+
+    public void refresh(List<AppInfo> appInfos) {
+        mAppInfos.clear();
+        if (appInfos != null) {
+            mAppInfos.addAll(appInfos);
+        }
+        notifyDataSetChanged();
+    }
+
+    private class ViewHolder implements View.OnTouchListener,
+            View.OnHoverListener, View.OnClickListener, View.OnLongClickListener {
+        LinearLayout layout;
+        ImageView appIcon;
+        TextView tvAppLabel;
+
+        public ViewHolder(View view) {
+            layout = (LinearLayout) view.findViewById(R.id.layout);
+            appIcon = (ImageView) view.findViewById(R.id.package_image);
+            tvAppLabel = (TextView) view.findViewById(R.id.package_name);
+
+            layout.setOnTouchListener(this);
+            layout.setOnHoverListener(this);
+            layout.setOnClickListener(this);
+            layout.setOnLongClickListener(this);
+        }
+
+        @Override
+        public boolean onTouch(View v, MotionEvent event) {
+            if (mOnClickCallback == null) {
+                return false;
+            }
+            if (MotionEvent.ACTION_DOWN == event.getAction()) {
+                mDownX = (int) event.getRawX();
+                mDownY = (int) event.getRawY();
+                switch (event.getButtonState()) {
+                    case MotionEvent.BUTTON_PRIMARY:
+//                        mOnClickCallback.open((AppInfo) v.getTag());
+                        mLastView = v;
+                        v.setSelected(true);
+                        break;
+                    case MotionEvent.BUTTON_SECONDARY:
+                        mLastView = v;
+                        v.setSelected(true);
+                        mOnClickCallback.showDialog(mDownX, mDownY, (AppInfo) v.getTag());
+                        return true;
+                }
+            }
+            return false;
+        }
+
+        @Override
+        public boolean onHover(View v, MotionEvent event) {
+            switch (event.getAction()) {
+                case MotionEvent.ACTION_HOVER_ENTER:
+                    if (mLastView != null && mLastView != v) {
+                        mLastView.setSelected(false);
+                    }
+                    v.setSelected(true);
+                    break;
+                case MotionEvent.ACTION_HOVER_EXIT:
+                    v.setSelected(false);
+                    break;
+            }
+            return false;
+        }
+
+        @Override
+        public void onClick(View v) {
+            mOnClickCallback.open((AppInfo) v.getTag());
+        }
+
+        @Override
+        public boolean onLongClick(View v) {
+            mLastView = v;
+            v.setSelected(true);
+            mOnClickCallback.showDialog(mDownX, mDownY, (AppInfo) v.getTag());
+            return true;
+        }
+    }
+
+    private int getLayoutId() {
+        if (mType == Type.GRID) {
+            return R.layout.startmenu_item_row;
+        } else {
+            return R.layout.startmenu_item_column;
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/AppEntry.java b/packages/SystemUI/src/com/android/systemui/startupmenu/AppEntry.java
deleted file mode 100644
index 51ea065f..0000000
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/AppEntry.java
+++ /dev/null
@@ -1,137 +0,0 @@
-/* Copyright 2016 Braden Farmer
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.startupmenu;
-
-import android.content.ComponentName;
-import android.content.Context;
-import android.graphics.drawable.Drawable;
-import android.os.Process;
-import android.os.UserManager;
-
-import java.io.Serializable;
-
-public class AppEntry implements Serializable {
-    static final long serialVersionUID = -3982172488299272068L;
-
-    private String label;
-    private String packageName;
-    private String activityName;
-    private Long userId;
-    private Long installTime;
-    private Long lastTimeUsed;
-    private int useCounts;
-    private Drawable icon;
-    private ComponentName componentName;
-
-    public AppEntry() {
-    }
-
-    public AppEntry(String packageName) {
-        this.packageName = packageName;
-    }
-
-    public AppEntry(String packageName, String activityName) {
-        this.packageName = packageName;
-        this.activityName = activityName;
-    }
-
-    public AppEntry(ComponentName componentName) {
-        this.componentName = componentName;
-        this.packageName = componentName.getPackageName();
-        this.activityName = componentName.getClassName();
-    }
-
-    public String getLabel() {
-        return label;
-    }
-
-    public void setLabel(String label) {
-        this.label = label;
-    }
-
-    public String getPackageName() {
-        return packageName;
-    }
-
-    public void setPackageName(String packageName) {
-        this.packageName = packageName;
-    }
-
-    public String getActivityName() {
-        return activityName;
-    }
-
-    public void setActivityName(String activityName) {
-        this.activityName = activityName;
-    }
-
-    public ComponentName getComponentName() {
-        if (componentName == null) {
-            componentName = new ComponentName(packageName, activityName);
-        }
-        return componentName;
-    }
-
-    public void setComponentName(ComponentName componentName) {
-        this.componentName = componentName;
-    }
-
-    public Long getUserId(Context context) {
-        if (userId == null) {
-            UserManager userManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
-            return userManager.getSerialNumberForUser(Process.myUserHandle());
-        } else
-            return userId;
-    }
-
-    public void setUserId(Long userId) {
-        this.userId = userId;
-    }
-
-    public Long getInstallTime() {
-        return installTime;
-    }
-
-    public void setInstallTime(Long installTime) {
-        this.installTime = installTime;
-    }
-
-    public Long getLastTimeUsed() {
-        return lastTimeUsed;
-    }
-
-    public void setLastTimeUsed(Long lastTimeUsed) {
-        this.lastTimeUsed = lastTimeUsed;
-    }
-
-    public int getUseCounts() {
-        return useCounts;
-    }
-
-    public void setUseCounts(int useCounts) {
-        this.useCounts = useCounts;
-    }
-
-    public Drawable getIcon() {
-        return icon;
-    }
-
-    public void setIcon(Drawable icon) {
-        this.icon = icon;
-    }
-
-
-}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/DialogType.java b/packages/SystemUI/src/com/android/systemui/startupmenu/DialogType.java
deleted file mode 100644
index 32a91f9..0000000
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/DialogType.java
+++ /dev/null
@@ -1,9 +0,0 @@
-package com.android.systemui.startupmenu;
-
-/**
- * dialog type
- */
-
-public enum DialogType {
-    LIST, GRID, SHOW_TASKBAR, BAR_LOCK_OPEN, BAR_LOCK_CLOSE, BAR_NORMAL
-}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/LaunchAppUtil.java b/packages/SystemUI/src/com/android/systemui/startupmenu/LaunchAppUtil.java
index 12a33b6..8c39d51 100644
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/LaunchAppUtil.java
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/LaunchAppUtil.java
@@ -12,7 +12,6 @@ import android.view.Display;
 import android.view.WindowManager;
 
 import com.android.systemui.R;
-import com.android.systemui.dialog.StartupMenuDialog;
 
 import java.lang.reflect.Method;
 
@@ -76,7 +75,6 @@ public class LaunchAppUtil {
      * @param startMode
      */
     public static void launchApp(Context context, ComponentName componentName, int startMode) {
-        StartupMenuDialog.dismissDialog();
         Intent intent = new Intent();
         intent.setComponent(componentName);
         launchApp(context, intent, startMode);
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/ShowType.java b/packages/SystemUI/src/com/android/systemui/startupmenu/ShowType.java
deleted file mode 100644
index ade84f6..0000000
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/ShowType.java
+++ /dev/null
@@ -1,9 +0,0 @@
-package com.android.systemui.startupmenu;
-
-/**
- * StartupMenu's list mode(list or grid)
- */
-
-public enum ShowType {
-    GRID,LIST
-}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/SortSelectPopupWindow.java b/packages/SystemUI/src/com/android/systemui/startupmenu/SortSelectPopupWindow.java
deleted file mode 100644
index 320e5ff..0000000
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/SortSelectPopupWindow.java
+++ /dev/null
@@ -1,104 +0,0 @@
-package com.android.systemui.startupmenu;
-
-import android.content.Context;
-import android.graphics.drawable.BitmapDrawable;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
-import android.view.View;
-import android.widget.PopupWindow;
-import android.widget.TextView;
-
-import com.android.systemui.R;
-
-/**
- * pop up sort way
- */
-
-public class SortSelectPopupWindow extends PopupWindow implements View.OnClickListener {
-    private Context mContext;
-    private TextView mDefaultSort;
-    private TextView mNameSort;
-    private TextView mTimeSort;
-    private TextView mClickSort;
-
-    private SortSelectListener mSortSelectListener;
-
-    public SortSelectPopupWindow(Context context) {
-        super(context);
-        mContext = context;
-        setFocusable(true);
-        setOutsideTouchable(true);
-        setBackgroundDrawable(new BitmapDrawable());
-        initView();
-        initListener();
-    }
-
-    private void initView() {
-        View inflate = LayoutInflater.from(mContext).inflate(R.layout.sort_pop_layout, null, false);
-        mDefaultSort = (TextView) inflate.findViewById(R.id.default_sort);
-        mClickSort = (TextView) inflate.findViewById(R.id.click_sort);
-        mTimeSort = (TextView) inflate.findViewById(R.id.time_sort);
-        mNameSort = (TextView) inflate.findViewById(R.id.name_sort);
-        setContentView(inflate);
-    }
-
-    public void setSortSelectListener(SortSelectListener sortSelectListener){
-        mSortSelectListener = sortSelectListener;
-    }
-
-    private void initListener() {
-        mDefaultSort.setOnHoverListener(mHoverListener);
-        mClickSort.setOnHoverListener(mHoverListener);
-        mTimeSort.setOnHoverListener(mHoverListener);
-        mNameSort.setOnHoverListener(mHoverListener);
-
-        mDefaultSort.setOnClickListener(this);
-        mClickSort.setOnClickListener(this);
-        mTimeSort.setOnClickListener(this);
-        mNameSort.setOnClickListener(this);
-    }
-
-    View.OnHoverListener mHoverListener = new View.OnHoverListener() {
-        public boolean onHover(View v, MotionEvent event) {
-            int action = event.getAction();
-            switch (action) {
-                case MotionEvent.ACTION_HOVER_ENTER:
-                    v.setBackgroundResource(R.color.common_hover_bg);
-                    break;
-                case MotionEvent.ACTION_HOVER_EXIT:
-                    v.setBackgroundResource(R.color.grid_unhover_bg);
-                    break;
-            }
-            return false;
-        }
-    };
-
-    @Override
-    public void onClick(View v) {
-        switch (v.getId()){
-            case R.id.default_sort:
-                mSortSelectListener.defaultSort(v);
-                break;
-            case R.id.click_sort:
-                mSortSelectListener.clickSort(v);
-                break;
-            case R.id.time_sort:
-                mSortSelectListener.timeSort(v);
-                break;
-            case R.id.name_sort:
-                mSortSelectListener.nameSort(v);
-                break;
-        }
-        dismiss();
-    }
-
-    /**
-     * custom interface to operate when click item
-     */
-    public interface SortSelectListener{
-        void defaultSort(View v);
-        void clickSort(View v);
-        void timeSort(View v);
-        void nameSort(View v);
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/SqliteOpenHelper.java b/packages/SystemUI/src/com/android/systemui/startupmenu/SqliteOpenHelper.java
new file mode 100644
index 0000000..76e80c6
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/SqliteOpenHelper.java
@@ -0,0 +1,229 @@
+package com.android.systemui.startupmenu;
+
+import android.content.ContentValues;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
+
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.listener.DataCallback;
+
+import java.io.File;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
+public class SqliteOpenHelper extends SQLiteOpenHelper {
+    private static final int SQL_VERSION_CODE = 1;
+    private static final String SQL_NAME = "startupMenu_database.db";
+
+    public static final String TABLE_NAME = "table_name";
+    public static final String APP_ID = "_id";
+    public static final String LABEL = "label";
+    public static final String PKGNAME = "pkgname";
+    public static final String INSTALL_TIME = "install_date";
+    public static final String CLICK_NUMBERS = "click_numbers";
+    public static final String IS_LOCKED = "locked";
+    public static final String USER_ID = "user_id";
+    public static final String ACTIVITY_NAME = "activity_name";
+
+    private static SqliteOpenHelper sqliteOpenHelper;
+    private static SQLiteDatabase mDb;
+    private final ExecutorService mSingleThreadExecutor;
+    private Context mContext;
+
+    private SqliteOpenHelper(Context context) {
+        super(context, SQL_NAME, null, SQL_VERSION_CODE);
+        mSingleThreadExecutor = Executors.newSingleThreadExecutor();
+        mContext = context;
+    }
+
+    public static SqliteOpenHelper getInstance(Context context) {
+        if (sqliteOpenHelper == null) {
+            sqliteOpenHelper = new SqliteOpenHelper(context);
+        }
+        return sqliteOpenHelper;
+    }
+
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        db.execSQL("create table " + TABLE_NAME + "(" +
+                APP_ID + " integer primary key autoincrement," +
+                LABEL + " char(20)," +
+                PKGNAME + " char(100)," +
+                INSTALL_TIME + " integer," +
+                CLICK_NUMBERS + " integer," +
+                IS_LOCKED + " integer," +
+                USER_ID + " integer," +
+                ACTIVITY_NAME + " char(100)" +
+                ")");
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+        if (newVersion > oldVersion) {
+            mDb.execSQL("drop table " + TABLE_NAME);
+            onCreate(db);
+        }
+    }
+
+    public void updateDataClick(final AppInfo appInfo) {
+        mSingleThreadExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                if (appInfo == null) {
+                    return;
+                }
+                mDb = sqliteOpenHelper.getWritableDatabase();
+                Cursor cursor = mDb.rawQuery("select * from " + TABLE_NAME + " where " + PKGNAME
+                        + " = ? ", new String[]{appInfo.getPackageName()});
+                ContentValues values = new ContentValues();
+                values.put(CLICK_NUMBERS, appInfo.getUseCounts());
+                if (cursor.moveToNext()) {
+                    mDb.update(TABLE_NAME, values, PKGNAME + " = ?",
+                            new String[]{appInfo.getPackageName()});
+                } else {
+                    values.put(LABEL, appInfo.getLabel());
+                    values.put(PKGNAME, appInfo.getPackageName());
+                    values.put(INSTALL_TIME, appInfo.getInstallTime());
+                    values.put(INSTALL_TIME, appInfo.getInstallTime());
+                    values.put(ACTIVITY_NAME, appInfo.getActivityName());
+                    values.put(IS_LOCKED, appInfo.isLocked() ? 1 : 0);
+                    mDb.insert(TABLE_NAME, null, values);
+                }
+                cursor.close();
+                mDb.close();
+            }
+        });
+    }
+
+    public void updateDataLocked(final AppInfo appInfo) {
+        mSingleThreadExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                if (appInfo == null) {
+                    return;
+                }
+                mDb = sqliteOpenHelper.getWritableDatabase();
+                Cursor cursor = mDb.rawQuery("select * from " + TABLE_NAME + " where " + PKGNAME
+                        + " = ? ", new String[]{appInfo.getPackageName()});
+                ContentValues values = new ContentValues();
+                values.put(IS_LOCKED, appInfo.isLocked() ? 1 : 0);
+                if (cursor.moveToNext()) {
+                    mDb.update(TABLE_NAME, values, PKGNAME + " = ?",
+                            new String[]{appInfo.getPackageName()});
+                } else {
+                    values.put(LABEL, appInfo.getLabel());
+                    values.put(PKGNAME, appInfo.getPackageName());
+                    values.put(INSTALL_TIME, appInfo.getInstallTime());
+                    values.put(CLICK_NUMBERS, appInfo.getUseCounts());
+                    values.put(ACTIVITY_NAME, appInfo.getActivityName());
+                    mDb.insert(TABLE_NAME, null, values);
+                }
+                cursor.close();
+                mDb.close();
+            }
+        });
+    }
+
+    public void deleteDataStorage(final String pkgName) {
+        mSingleThreadExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                mDb = sqliteOpenHelper.getWritableDatabase();
+                mDb.delete(TABLE_NAME, PKGNAME
+                        + " = ? ", new String[]{pkgName});
+                mDb.close();
+            }
+        });
+    }
+
+    public void queryLockedApp(final DataCallback callback) {
+        mSingleThreadExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                Map<String, AppInfo> map = new HashMap();
+                mDb = sqliteOpenHelper.getReadableDatabase();
+                AppInfo appInfo = null;
+                Cursor cursor = mDb.rawQuery("select * from " + TABLE_NAME, null);
+                while (cursor.moveToNext()) {
+                    appInfo = new AppInfo();
+                    appInfo.setLabel(cursor.getString(cursor.getColumnIndex(LABEL)));
+                    appInfo.setPackageName(
+                            cursor.getString(cursor.getColumnIndex(PKGNAME)));
+                    if (appInfo.isLocked()) {
+                        map.put(appInfo.getPackageName(), appInfo);
+                    }
+                }
+                mDb.close();
+                callback.callback(map);
+            }
+        });
+    }
+
+    public void queryAllDataStorage(final DataCallback callback) {
+        mSingleThreadExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                Map<String, AppInfo> appInfos = new HashMap<>();
+                Map<String, AppInfo> map = new HashMap();
+                mDb = sqliteOpenHelper.getReadableDatabase();
+                AppInfo appInfo = null;
+                Cursor cursor = mDb.rawQuery("select * from " + TABLE_NAME, null);
+                while (cursor.moveToNext()) {
+                    appInfo = new AppInfo();
+                    appInfo.setLabel(cursor.getString(cursor.getColumnIndex(LABEL)));
+                    appInfo.setPackageName(
+                            cursor.getString(cursor.getColumnIndex(PKGNAME)));
+                    appInfo.setUseCounts(
+                            cursor.getInt(cursor.getColumnIndex(CLICK_NUMBERS)));
+                    appInfo.setInstallTime(
+                            cursor.getLong(cursor.getColumnIndex(INSTALL_TIME)));
+                    appInfo.setLocked(
+                            cursor.getInt(cursor.getColumnIndex(IS_LOCKED)) == 0 ? false : true);
+                    map.put(appInfo.getPackageName(), appInfo);
+                }
+                mDb.close();
+
+                PackageManager pm = mContext.getPackageManager();
+                Intent mainIntent = new Intent(Intent.ACTION_MAIN, null);
+                mainIntent.addCategory(Intent.CATEGORY_LAUNCHER);
+                List<ResolveInfo> resolveInfos = pm.queryIntentActivities(mainIntent, 0);
+                for (ResolveInfo reInfo : resolveInfos) {
+                    String packageName = reInfo.activityInfo.packageName;
+                    appInfo = new AppInfo();
+                    appInfo.setLabel((String) reInfo.loadLabel(pm));
+                    appInfo.setPackageName(packageName);
+                    appInfo.setInstallTime(new File(
+                            reInfo.activityInfo.applicationInfo.sourceDir).lastModified());
+                    appInfo.setIcon(reInfo.loadIcon(pm));
+                    appInfo.setActivityName(reInfo.activityInfo.name);
+                    appInfo.setSystemApp(isSystemApp(reInfo));
+                    appInfo.setUseCounts(getClickCounts(map.get(packageName)));
+                    appInfo.setLocked(getLocked(map.get(packageName)));
+                    appInfos.put(packageName, appInfo);
+                }
+                callback.callback(appInfos);
+            }
+        });
+    }
+
+    private int getClickCounts(AppInfo appInfo) {
+        return appInfo == null ? 0 : appInfo.getUseCounts();
+    }
+
+    private boolean getLocked(AppInfo appInfo) {
+        return appInfo == null ? false : appInfo.isLocked();
+    }
+
+    private boolean isSystemApp(ResolveInfo resolveInfo) {
+        return (resolveInfo.activityInfo.applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0;
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/StartMenuAdapter.java b/packages/SystemUI/src/com/android/systemui/startupmenu/StartMenuAdapter.java
deleted file mode 100644
index 8e65ef9..0000000
--- a/packages/SystemUI/src/com/android/systemui/startupmenu/StartMenuAdapter.java
+++ /dev/null
@@ -1,207 +0,0 @@
-/* Copyright 2016 Braden Farmer
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.startupmenu;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.BaseAdapter;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import com.android.systemui.R;
-import com.android.systemui.dialog.MenuDialog;
-import com.android.systemui.sql.SqliteOperate;
-
-import java.util.List;
-
-public class StartMenuAdapter extends BaseAdapter
-        implements View.OnTouchListener, View.OnLongClickListener, View.OnHoverListener {
-
-    private List<AppEntry> mDatas;
-    private MenuDialog mMenuDialog;
-    private Context mContext;
-    private ShowType mType;
-    private View mTempView;
-    private boolean mHaveOperated; //is executed
-    private boolean mIsGrid;
-    private int mDownX;  // down position x
-    private int mDownY;  // down position y
-
-    public StartMenuAdapter(Context context, ShowType type, List<AppEntry> datas) {
-        mContext = context;
-        mType = type;
-        mDatas = datas;
-        mIsGrid = mType == ShowType.GRID;
-        mMenuDialog = new MenuDialog(context);
-    }
-
-    @Override
-    public int getCount() {
-        return mDatas.size();
-    }
-
-    @Override
-    public AppEntry getItem(int position) {
-        return mDatas.get(position);
-    }
-
-    @Override
-    public long getItemId(int position) {
-        return position;
-    }
-
-    @Override
-    public View getView(final int position, View convertView, ViewGroup parent) {
-        // Check if an existing view is being reused, otherwise inflate the view
-        ViewHolder holder;
-        if (convertView == null) {
-            convertView = LayoutInflater.from(mContext).
-                    inflate(mIsGrid ? R.layout.row_alt : R.layout.row, parent, false);
-            holder = new ViewHolder(convertView);
-            convertView.setTag(holder);
-        } else {
-            holder = (ViewHolder) convertView.getTag();
-        }
-
-        if (mDatas != null && mDatas.size() > 0) {
-            AppEntry entry = getItem(position);
-
-            holder.name.setText(entry.getLabel());
-            holder.icon.setImageDrawable(entry.getIcon());
-            holder.layout.setTag(entry);
-        }
-        return convertView;
-    }
-
-    @Override
-    public boolean onTouch(View v, MotionEvent event) {
-        AppEntry appInfo = (AppEntry) v.getTag();
-        switch (event.getAction()) {
-            case MotionEvent.ACTION_DOWN:
-                mHaveOperated = false;
-                mDownX = (int) event.getRawX();
-                mDownY = (int) event.getRawY();
-                switch (event.getButtonState()) {
-                    case MotionEvent.BUTTON_PRIMARY:
-                        mHaveOperated = true;
-                        openApplication(appInfo);
-                        break;
-                    case MotionEvent.BUTTON_SECONDARY:
-                        mHaveOperated = true;
-                        showDialog(mDownX, mDownY, appInfo);
-                        break;
-                    default:
-                        break;
-                }
-                break;
-            case MotionEvent.ACTION_UP:
-                if (!mHaveOperated) {
-                    mHaveOperated = true;
-                    openApplication(appInfo);
-                }
-                break;
-            default:
-                break;
-        }
-        return false;
-    }
-
-    @Override
-    public boolean onHover(View v, MotionEvent event) {
-        int action = event.getAction();
-        switch (action) {
-            case MotionEvent.ACTION_HOVER_ENTER:
-                if (mTempView != null && mTempView != v) {
-                    mTempView.setBackgroundResource(getExitResource());
-                }
-                v.setBackgroundResource(getEnterResource());
-                mTempView = v;
-                break;
-            case MotionEvent.ACTION_HOVER_EXIT:
-                if (mTempView != v) {
-                    v.setBackgroundResource(getExitResource());
-                }
-                break;
-        }
-        return false;
-    }
-
-    @Override
-    public boolean onLongClick(View v) {
-        if (!mHaveOperated) {
-            mHaveOperated = true;
-            showDialog(mDownX, mDownY, (AppEntry) v.getTag());
-        }
-        return false;
-    }
-
-    /**
-     * open app
-     * @param appInfo
-     */
-    private void openApplication(AppEntry appInfo) {
-        LaunchAppUtil.launchApp(mContext, appInfo.getComponentName());
-        SqliteOperate.updateDataStorage(mContext, appInfo);
-        if (mMenuDialog.isShowing()) {
-            mMenuDialog.dismiss();
-        }
-    }
-
-    private class ViewHolder {
-        LinearLayout layout;
-        ImageView icon;
-        TextView name;
-
-        public ViewHolder(View view) {
-            layout = (LinearLayout) view.findViewById(R.id.entry);
-            icon = (ImageView) view.findViewById(R.id.icon);
-            name = (TextView) view.findViewById(R.id.name);
-            layout.setOnTouchListener(StartMenuAdapter.this);
-            layout.setOnLongClickListener(StartMenuAdapter.this);
-            layout.setOnHoverListener(StartMenuAdapter.this);
-        }
-    }
-
-    /**
-     * get unhover resource
-     * @return
-     */
-    private int getExitResource() {
-        return mIsGrid ? R.color.grid_unhover_bg : R.color.common_hover_bg;
-    }
-
-    /**
-     * get hover resource
-     * @return
-     */
-    private int getEnterResource() {
-        return mIsGrid ? R.color.grid_hover_bg : R.mipmap.common_bg;
-    }
-
-    /**
-     * show dialog
-     * @param x
-     * @param y
-     * @param appInfo
-     */
-    private void showDialog(int x, int y, AppEntry appInfo) {
-        mMenuDialog.show(mIsGrid ? DialogType.GRID : DialogType.LIST, appInfo, x, y);
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/StartupMenuView.java b/packages/SystemUI/src/com/android/systemui/startupmenu/StartupMenuView.java
new file mode 100644
index 0000000..e6f1a3d
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/StartupMenuView.java
@@ -0,0 +1,501 @@
+package com.android.systemui.startupmenu;
+
+import android.app.Dialog;
+import android.content.BroadcastReceiver;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.SharedPreferences;
+import android.os.Handler;
+import android.text.Editable;
+import android.text.TextUtils;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.FrameLayout;
+import android.widget.GridView;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.ListView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.android.systemui.R;
+import com.android.systemui.dialog.DialogType;
+import com.android.systemui.dialog.MenuDialog;
+import com.android.systemui.power.PowerSourceActivity;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.bean.Type;
+import com.android.systemui.startupmenu.listener.DataCallback;
+import com.android.systemui.startupmenu.listener.OnClickCallback;
+import com.android.systemui.startupmenu.listener.OnMenuClick;
+import com.android.systemui.startupmenu.utils.AppOperateManager;
+
+import java.text.Collator;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+import java.util.Map;
+
+public class StartupMenuView extends FrameLayout
+        implements View.OnClickListener, View.OnHoverListener {
+
+    public static final int DEFAULT_SORT = 0;
+    public static final int NAME_SORT = 1;
+    public static final int NAME_SORT_REVERSE = -1;
+    public static final int TIME_SORT = 2;
+    public static final int TIME_SORT_REVERSE = -2;
+    public static final int CLICK_SORT = 3;
+    public static final int CLICK_SORT_REVERSE = -3;
+
+    public static final int LIST_APP_NUM = 8;
+
+    private GridView mGridView;
+    private ListView mListView;
+    private LinearLayout mSortClickLayout;
+    private ImageView mArrowDirect;
+    private TextView mSortType;
+    private EditText mSearch;
+    private ImageView mArrowShow;
+    private LinearLayout mFileManager;
+    private LinearLayout mPowerOff;
+    private LinearLayout mSetting;
+
+    private SharedPreferences mSharedPreference;
+    private AppOperateManager mOperateManager;
+    private ArrayList<AppInfo> mGridDatas;
+    private ArrayList<AppInfo> mListDatas;
+    private AppAdapter mGridAdapter;
+    private AppAdapter mListAdapter;
+    private MenuDialog mMenuDialog;
+    private int mType;
+    private Handler mHandler;
+
+    public StartupMenuView(Context context) {
+        this(context, null);
+    }
+
+    public StartupMenuView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public StartupMenuView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        View.inflate(context, R.layout.startup_menu, this);
+        initView();
+        initData();
+        initListener();
+    }
+
+    private void initView() {
+        mGridView = (GridView) findViewById(R.id.grid_view);
+        mListView = (ListView) findViewById(R.id.list_view);
+        mSortClickLayout = (LinearLayout) findViewById(R.id.sort_click_view);
+        mArrowDirect = (ImageView) findViewById(R.id.arrow_direct);
+        mSortType = (TextView) findViewById(R.id.sort_type);
+        mSearch = (EditText) findViewById(R.id.search);
+        mArrowShow = (ImageView) findViewById(R.id.arrow_show);
+        mFileManager = (LinearLayout) findViewById(R.id.file_manager);
+        mPowerOff = (LinearLayout) findViewById(R.id.power_off);
+        mSetting = (LinearLayout) findViewById(R.id.system_setting);
+    }
+
+    private void initData() {
+        mHandler = new Handler();
+        mSharedPreference =
+                getContext().getSharedPreferences("sort_type", Context.MODE_PRIVATE);
+        mOperateManager = AppOperateManager.getInstance(getContext());
+        mOperateManager.reloadData();
+        mGridDatas = new ArrayList<>();
+        mListDatas = new ArrayList<>();
+
+        mGridAdapter = new AppAdapter(getContext(), Type.GRID);
+        mListAdapter = new AppAdapter(getContext(), Type.LIST);
+        mGridView.setAdapter(mGridAdapter);
+        mListView.setAdapter(mListAdapter);
+        mMenuDialog = new MenuDialog(getContext());
+
+        mType = mSharedPreference.getInt("sortType", DEFAULT_SORT);
+
+        IntentFilter installFilter = new IntentFilter();
+        installFilter.addAction(Intent.ACTION_PACKAGE_REMOVED);
+        installFilter.addAction(Intent.ACTION_PACKAGE_ADDED);
+        installFilter.addDataScheme("package");
+        getContext().registerReceiver(mInstallReceiver, installFilter);
+    }
+
+    public void refresh() {
+        //TODO
+//        mSearch.setText("");
+//        reloadGridAppInfos();
+//        reloadListAppInfos();
+        mOperateManager.reloadData(new DataCallback() {
+            @Override
+            public void callback(Map<String, AppInfo> appInfoMaps) {
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        mSearch.setText("");
+                        reloadGridAppInfos();
+                        reloadListAppInfos();
+                    }
+                });
+            }
+        });
+    }
+
+    private void initListener() {
+        mFileManager.setOnClickListener(this);
+        mPowerOff.setOnClickListener(this);
+        mSetting.setOnClickListener(this);
+
+        mFileManager.setOnHoverListener(this);
+        mPowerOff.setOnHoverListener(this);
+        mSetting.setOnHoverListener(this);
+
+        mSearch.addTextChangedListener(mTextWatcher);
+        mSortClickLayout.setOnClickListener(this);
+        mArrowShow.setOnClickListener(this);
+        mMenuDialog.setOnMenuClick(mOnMenuClick);
+
+        mListAdapter.setOnClickCallback(new OnClickCallback() {
+            @Override
+            public void open(AppInfo appInfo) {
+                mOperateManager.openApplication(appInfo.getComponentName());
+                dismiss();
+            }
+
+            @Override
+            public void showDialog(int x, int y, AppInfo appInfo) {
+                mMenuDialog.show(DialogType.LIST, appInfo, x, y);
+            }
+        });
+
+        mGridAdapter.setOnClickCallback(new OnClickCallback() {
+            @Override
+            public void open(AppInfo appInfo) {
+                mOperateManager.openApplication(appInfo.getComponentName());
+                dismiss();
+            }
+
+            @Override
+            public void showDialog(int x, int y, AppInfo appInfo) {
+                mMenuDialog.show(DialogType.GRID, appInfo, x, y);
+            }
+        });
+    }
+
+    @Override
+    public void onClick(View v) {
+        switch (v.getId()) {
+            case R.id.file_manager:
+                mOperateManager.openApplication(new ComponentName(
+                        "org.openthos.filemanager",
+                        "org.openthos.filemanager.MainActivity"));
+                break;
+            case R.id.system_setting:
+                mOperateManager.openApplication(new ComponentName(
+                        "com.android.settings", "com.android.settings.Settings"));
+                break;
+            case R.id.power_off:
+                getContext().startActivity(new Intent(getContext(), PowerSourceActivity.class));
+                dismiss();
+                break;
+            case R.id.sort_click_view:
+                mType = mType * -1;
+                sortOrder();
+                break;
+            case R.id.arrow_show:
+                mMenuDialog.showSort(mArrowShow);
+                break;
+        }
+    }
+
+    public MenuDialog getmMenuDialog() {
+        return mMenuDialog;
+    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        if (MotionEvent.ACTION_OUTSIDE == event.getAction()) {
+            dismiss();
+        }
+        return super.onTouchEvent(event);
+    }
+
+    @Override
+    public boolean onHover(View v, MotionEvent event) {
+        switch (event.getAction()) {
+            case MotionEvent.ACTION_HOVER_ENTER:
+                v.setSelected(true);
+                break;
+            case MotionEvent.ACTION_HOVER_EXIT:
+                v.setSelected(false);
+                break;
+        }
+        return false;
+    }
+
+    public void dismiss() {
+        AppOperateManager.getInstance(getContext()).dismissStartupMenuDialog();
+    }
+
+    private void reloadListAppInfos() {
+        mListDatas.clear();
+        Collections.sort(mOperateManager.getDataList(), new Comparator<AppInfo>() {
+            public int compare(AppInfo lhs, AppInfo rhs) {
+                int rhsNumber = rhs.getUseCounts();
+                int lhsNumber = lhs.getUseCounts();
+                if (rhsNumber > lhsNumber) {
+                    return 1;
+                } else if (lhsNumber == rhsNumber) {
+                    return rhs.getInstallTime() > lhs.getInstallTime() ? 1 : -1;
+                } else {
+                    return -1;
+                }
+            }
+        });
+        int min = Math.min(mOperateManager.getDataList().size(), LIST_APP_NUM);
+        for (int i = 0; i < min; i++) {
+            AppInfo appInfo = mOperateManager.getDataList().get(i);
+            if (appInfo.getUseCounts() != 0) {
+                mListDatas.add(appInfo);
+            } else {
+                break;
+            }
+        }
+        mListAdapter.refresh(mListDatas);
+    }
+
+    private void reloadGridAppInfos() {
+        mGridDatas.clear();
+        String searchText = mSearch.getText().toString().trim();
+        if (TextUtils.isEmpty(searchText)) {
+            mGridDatas.addAll(mOperateManager.getDataList());
+        } else {
+            for (AppInfo appInfo : mOperateManager.getDataList()) {
+                if (appInfo.getLabel().toLowerCase().contains(searchText.toLowerCase())) {
+                    mGridDatas.add(appInfo);
+                }
+            }
+        }
+        sortOrder();
+    }
+
+    private void sortOrder() {
+        switch (mType) {
+            case DEFAULT_SORT:
+                mArrowDirect.setVisibility(View.GONE);
+                mSortType.setText(R.string.default_sort);
+                defaultSort();
+                break;
+            case NAME_SORT:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_up_arrow);
+                mSortType.setText(R.string.name_sort);
+                nameSort();
+                break;
+            case NAME_SORT_REVERSE:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_down_arrow);
+                mSortType.setText(R.string.name_sort);
+                nameSort();
+                Collections.reverse(mGridDatas);
+                break;
+            case TIME_SORT:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_up_arrow);
+                mSortType.setText(R.string.time_sort);
+                timeSort();
+                break;
+            case TIME_SORT_REVERSE:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_down_arrow);
+                mSortType.setText(R.string.time_sort);
+                timeSort();
+                Collections.reverse(mGridDatas);
+                break;
+            case CLICK_SORT:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_up_arrow);
+                mSortType.setText(R.string.click_sort);
+                clickSort();
+                break;
+            case CLICK_SORT_REVERSE:
+                mArrowDirect.setVisibility(View.VISIBLE);
+                mArrowDirect.setImageResource(R.drawable.startmenu_down_arrow);
+                mSortType.setText(R.string.click_sort);
+                clickSort();
+                Collections.reverse(mGridDatas);
+                break;
+            default:
+                break;
+        }
+        mGridAdapter.refresh(mGridDatas);
+        mSharedPreference.edit().putInt("sortType", mType).commit();
+    }
+
+    private void defaultSort() {
+        Collections.sort(mGridDatas, new Comparator<AppInfo>() {
+            public int compare(AppInfo lhs, AppInfo rhs) {
+                if (lhs.isSystemApp() && !rhs.isSystemApp()) {
+                    return -1;
+                } else if (!lhs.isSystemApp() && rhs.isSystemApp()) {
+                    return 1;
+                } else {
+                    return lhs.getLabel().compareTo(rhs.getLabel());
+                }
+            }
+        });
+    }
+
+    private void nameSort() {
+        List<AppInfo> listEnglish = new ArrayList<>();
+        List<AppInfo> listChina = new ArrayList<>();
+        List<AppInfo> listNumber = new ArrayList<>();
+        for (AppInfo appInfo : mGridDatas) {
+            String appLabel = appInfo.getLabel();
+            char ch = appLabel.charAt(0);
+            if (ch >= '0' && ch <= '9') {
+                listNumber.add(appInfo);
+            } else {
+                if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')) {
+                    listEnglish.add(appInfo);
+                } else {
+                    listChina.add(appInfo);
+                }
+            }
+        }
+        Collections.sort(listEnglish, new Comparator<AppInfo>() {
+            @Override
+            public int compare(AppInfo o1, AppInfo o2) {
+                return o1.getLabel().compareTo(o2.getLabel());
+            }
+        });
+
+        Collections.sort(listNumber, new Comparator<AppInfo>() {
+            @Override
+            public int compare(AppInfo o1, AppInfo o2) {
+                return o1.getLabel().compareTo(o2.getLabel());
+            }
+        });
+        final Collator collator = Collator.getInstance();
+        Collections.sort(listChina, new Comparator<AppInfo>() {
+            @Override
+            public int compare(AppInfo o1, AppInfo o2) {
+                return collator.getCollationKey(o1.getLabel()).
+                        compareTo(collator.getCollationKey(o2.getLabel()));
+            }
+        });
+        mGridDatas.clear();
+        mGridDatas.addAll(listNumber);
+        mGridDatas.addAll(listEnglish);
+        mGridDatas.addAll(listChina);
+    }
+
+    private void timeSort() {
+        Collections.sort(mGridDatas, new Comparator<AppInfo>() {
+            public int compare(AppInfo lhs, AppInfo rhs) {
+                if (rhs.getInstallTime() == lhs.getInstallTime()) {
+                    return rhs.getPackageName().compareTo(lhs.getPackageName());
+                }
+                return rhs.getInstallTime() > lhs.getInstallTime() ? 1 : -1;
+            }
+        });
+    }
+
+    private void clickSort() {
+        Collections.sort(mGridDatas, new Comparator<AppInfo>() {
+            public int compare(AppInfo lhs, AppInfo rhs) {
+                if (rhs.getUseCounts() == lhs.getUseCounts()) {
+                    return rhs.getInstallTime() > lhs.getInstallTime() ? 1 : -1;
+                }
+                return rhs.getUseCounts() > lhs.getUseCounts() ? 1 : -1;
+            }
+        });
+    }
+
+    private void removeApplicaton(AppInfo appInfo) {
+        Toast.makeText(getContext(),
+                getContext().getString(R.string.remove_application) + appInfo.getLabel(),
+                Toast.LENGTH_SHORT).show();
+        for (AppInfo info : mOperateManager.getDataList()) {
+            if (info.getPackageName().equals(appInfo.getPackageName())) {
+                info.setUseCounts(0);
+                break;
+            }
+        }
+        reloadListAppInfos();
+        reloadGridAppInfos();
+        SqliteOpenHelper.getInstance(getContext()).deleteDataStorage(appInfo.getPackageName());
+    }
+
+    private TextWatcher mTextWatcher = new TextWatcher() {
+
+        @Override
+        public void onTextChanged(CharSequence s, int start, int before, int count) {
+        }
+
+        @Override
+        public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+        }
+
+        @Override
+        public void afterTextChanged(Editable s) {
+            reloadGridAppInfos();
+        }
+    };
+
+    private OnMenuClick mOnMenuClick = new OnMenuClick() {
+        @Override
+        public void menuClick(View view, Dialog dialog, AppInfo appInfo, String menu) {
+            if (menu.equals(getContext().getString(R.string.open))) {
+                mOperateManager.openApplication(appInfo.getComponentName());
+            } else if (menu.equals(getContext().getString(R.string.phone_mode))) {
+                mOperateManager.runPhoneMode(appInfo.getComponentName());
+            } else if (menu.equals(getContext().getString(R.string.desktop_mode))) {
+                mOperateManager.runDesktopMode(appInfo.getComponentName());
+            } else if (menu.equals(getContext().getString(R.string.lock_to_task_bar))) {
+                mOperateManager.addToTaskbar(appInfo.getPackageName());
+            } else if (menu.equals(getContext().getString(R.string.unlock_from_task_bar))) {
+                mOperateManager.removeFromTaskbar(appInfo.getPackageName());
+            } else if (menu.equals(getContext().getString(R.string.remove_from_list))) {
+                removeApplicaton(appInfo);
+            } else if (menu.equals(getContext().getString(R.string.uninstall))) {
+                mOperateManager.uninstallApp(appInfo.getPackageName());
+            }
+            dialog.dismiss();
+        }
+
+        @Override
+        public void sortShow(View view, Dialog dialog, String menu) {
+            if (menu.equals(getContext().getString(R.string.default_sort))) {
+                mType = DEFAULT_SORT;
+            } else if (menu.equals(getContext().getString(R.string.name_sort))) {
+                mType = NAME_SORT;
+            } else if (menu.equals(getContext().getString(R.string.time_sort))) {
+                mType = TIME_SORT;
+            } else if (menu.equals(getContext().getString(R.string.click_sort))) {
+                mType = CLICK_SORT;
+            }
+            reloadGridAppInfos();
+            dialog.dismiss();
+        }
+    };
+
+    private BroadcastReceiver mInstallReceiver = new BroadcastReceiver() {
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            if (intent.getAction().equals(Intent.ACTION_PACKAGE_REMOVED)) {
+                String pkName = intent.getData().getSchemeSpecificPart();
+                mOperateManager.removeFromTaskbar(pkName);
+                SqliteOpenHelper.getInstance(context).deleteDataStorage(pkName);
+            }
+            mOperateManager.reloadData();
+        }
+    };
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/bean/AppInfo.java b/packages/SystemUI/src/com/android/systemui/startupmenu/bean/AppInfo.java
new file mode 100644
index 0000000..b125ec2
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/bean/AppInfo.java
@@ -0,0 +1,153 @@
+/* Copyright 2016 Braden Farmer
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.startupmenu.bean;
+
+import android.content.ComponentName;
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.os.Process;
+import android.os.UserManager;
+
+import java.io.Serializable;
+
+public class AppInfo implements Serializable {
+    static final long serialVersionUID = -3982172488299272068L;
+
+    private String label;
+    private String packageName;
+    private String activityName;
+    private ComponentName componentName;
+    private Long userId;
+    private Long installTime;
+    private Long lastTimeUsed;
+    private int useCounts;
+    private Drawable icon;
+    private boolean isSystemApp;
+    private boolean isLocked;
+
+    public AppInfo() {
+    }
+
+    public AppInfo(String packageName) {
+        this.packageName = packageName;
+    }
+
+    public AppInfo(String packageName, String activityName) {
+        this.packageName = packageName;
+        this.activityName = activityName;
+    }
+
+    public AppInfo(ComponentName componentName) {
+        this.componentName = componentName;
+        this.packageName = componentName.getPackageName();
+        this.activityName = componentName.getClassName();
+    }
+
+    public String getLabel() {
+        return label;
+    }
+
+    public void setLabel(String label) {
+        this.label = label;
+    }
+
+    public String getPackageName() {
+        return packageName;
+    }
+
+    public void setPackageName(String packageName) {
+        this.packageName = packageName;
+    }
+
+    public String getActivityName() {
+        return activityName;
+    }
+
+    public void setActivityName(String activityName) {
+        this.activityName = activityName;
+    }
+
+    public ComponentName getComponentName() {
+        if (componentName == null) {
+            componentName = new ComponentName(packageName, activityName);
+        }
+        return componentName;
+    }
+
+    public void setComponentName(ComponentName componentName) {
+        this.componentName = componentName;
+    }
+
+    public Long getUserId(Context context) {
+        if (userId == null) {
+            UserManager userManager = (UserManager) context.getSystemService(Context.USER_SERVICE);
+            return userManager.getSerialNumberForUser(Process.myUserHandle());
+        } else
+            return userId;
+    }
+
+    public void setUserId(Long userId) {
+        this.userId = userId;
+    }
+
+    public Long getInstallTime() {
+        return installTime;
+    }
+
+    public void setInstallTime(Long installTime) {
+        this.installTime = installTime;
+    }
+
+    public Long getLastTimeUsed() {
+        return lastTimeUsed;
+    }
+
+    public void setLastTimeUsed(Long lastTimeUsed) {
+        this.lastTimeUsed = lastTimeUsed;
+    }
+
+    public int getUseCounts() {
+        return useCounts;
+    }
+
+    public void setUseCounts(int useCounts) {
+        this.useCounts = useCounts;
+    }
+
+    public Drawable getIcon() {
+        return icon;
+    }
+
+    public void setIcon(Drawable icon) {
+        this.icon = icon;
+    }
+
+    public boolean isSystemApp() {
+        return isSystemApp;
+    }
+
+    public void setSystemApp(boolean systemApp) {
+        isSystemApp = systemApp;
+    }
+
+    public boolean isLocked() {
+        return isLocked;
+    }
+
+    public void setLocked(boolean locked) {
+        isLocked = locked;
+    }
+}
\ No newline at end of file
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/bean/Type.java b/packages/SystemUI/src/com/android/systemui/startupmenu/bean/Type.java
new file mode 100644
index 0000000..b9661de
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/bean/Type.java
@@ -0,0 +1,5 @@
+package com.android.systemui.startupmenu.bean;
+
+public enum Type {
+    GRID, LIST, SORT
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/listener/DataCallback.java b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/DataCallback.java
new file mode 100644
index 0000000..316bb37
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/DataCallback.java
@@ -0,0 +1,9 @@
+package com.android.systemui.startupmenu.listener;
+
+import com.android.systemui.startupmenu.bean.AppInfo;
+
+import java.util.Map;
+
+public interface DataCallback {
+    void callback(Map<String, AppInfo> appInfoMaps);
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnClickCallback.java b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnClickCallback.java
new file mode 100644
index 0000000..5c611bd
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnClickCallback.java
@@ -0,0 +1,9 @@
+package com.android.systemui.startupmenu.listener;
+
+import com.android.systemui.startupmenu.bean.AppInfo;
+
+public interface OnClickCallback {
+    void open(AppInfo appInfo);
+
+    void showDialog(int x, int y, AppInfo appInfo);
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnMenuClick.java b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnMenuClick.java
new file mode 100644
index 0000000..10ccf06
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/listener/OnMenuClick.java
@@ -0,0 +1,12 @@
+package com.android.systemui.startupmenu.listener;
+
+import android.app.Dialog;
+import android.view.View;
+
+import com.android.systemui.startupmenu.bean.AppInfo;
+
+public interface OnMenuClick {
+    void menuClick(View view, Dialog dialog, AppInfo appInfo, String menu);
+
+    void sortShow(View view, Dialog dialog, String menu);
+}
diff --git a/packages/SystemUI/src/com/android/systemui/startupmenu/utils/AppOperateManager.java b/packages/SystemUI/src/com/android/systemui/startupmenu/utils/AppOperateManager.java
new file mode 100644
index 0000000..2843e29
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/startupmenu/utils/AppOperateManager.java
@@ -0,0 +1,130 @@
+package com.android.systemui.startupmenu.utils;
+
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+
+import com.android.systemui.SysUiServiceProvider;
+import com.android.systemui.dialog.StartupMenuDialog;
+import com.android.systemui.startupmenu.LaunchAppUtil;
+import com.android.systemui.startupmenu.SqliteOpenHelper;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.listener.DataCallback;
+import com.android.systemui.statusbar.phone.StatusBar;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+public class AppOperateManager {
+    private static AppOperateManager instance;
+
+    private List<AppInfo> mAppInfos;
+    private Context mContext;
+    private StatusBar mStatusBar;
+
+    public static AppOperateManager getInstance(Context context) {
+        if (instance == null) {
+            instance = new AppOperateManager(context);
+        }
+        return instance;
+    }
+
+    private AppOperateManager(Context context) {
+        mContext = context;
+        mAppInfos = new ArrayList<>();
+        mStatusBar = SysUiServiceProvider.getComponent(mContext, StatusBar.class);
+    }
+
+
+    public void reloadData() {
+        SqliteOpenHelper.getInstance(mContext).queryAllDataStorage(new DataCallback() {
+            @Override
+            public void callback(Map<String, AppInfo> appInfoMap) {
+                mAppInfos.clear();
+                for (AppInfo appInfo : appInfoMap.values()) {
+                    mAppInfos.add(appInfo);
+                }
+            }
+        });
+    }
+
+    public void reloadData(final DataCallback callback) {
+        SqliteOpenHelper.getInstance(mContext).queryAllDataStorage(new DataCallback() {
+            @Override
+            public void callback(Map<String, AppInfo> appInfoMap) {
+                mAppInfos.clear();
+                for (AppInfo appInfo : appInfoMap.values()) {
+                    mAppInfos.add(appInfo);
+                }
+                callback.callback(appInfoMap);
+            }
+        });
+    }
+
+    public List<AppInfo> getDataList() {
+        return mAppInfos;
+    }
+
+    public void openApplication(ComponentName componentName) {
+        LaunchAppUtil.launchApp(mContext, componentName);
+        updateClick(componentName.getPackageName());
+        dismissStartupMenuDialog();
+    }
+
+    public void runPhoneMode(ComponentName componentName) {
+        LaunchAppUtil.launchApp(mContext, componentName, LaunchAppUtil.PHONE_MODE);
+        updateClick(componentName.getPackageName());
+        dismissStartupMenuDialog();
+    }
+
+    public void runDesktopMode(ComponentName componentName) {
+        LaunchAppUtil.launchApp(mContext, componentName, LaunchAppUtil.DESKTOP_MODE);
+        updateClick(componentName.getPackageName());
+        dismissStartupMenuDialog();
+    }
+
+    public void addToTaskbar(String packageName) {
+        mStatusBar.addToTaskbar(packageName);
+    }
+
+    public void removeFromTaskbar(String packageName) {
+        mStatusBar.removeFromTaskbar(packageName);
+    }
+
+    public void closeApp(String packageName) {
+        mStatusBar.closeApp(packageName);
+    }
+
+    public void uninstallApp(String packageName) {
+        dismissStartupMenuDialog();
+        Uri uri = Uri.parse("package:" + packageName);
+        Intent intent = new Intent(Intent.ACTION_DELETE, uri);
+        mContext.startActivity(intent);
+    }
+
+    private void updateClick(String packageName) {
+        AppInfo appInfo = getAppInfo(packageName);
+        if (appInfo != null) {
+            appInfo.setUseCounts(appInfo.getUseCounts() + 1);
+            SqliteOpenHelper.getInstance(mContext).updateDataClick(appInfo);
+        }
+    }
+
+    public AppInfo getAppInfo(String packageName) {
+        for (AppInfo appInfo : mAppInfos) {
+            if (packageName.equals(appInfo.getPackageName())) {
+                return appInfo;
+            }
+        }
+        return null;
+    }
+
+    public void dismissStartupMenuDialog() {
+        StartupMenuDialog startupMenuDialog = mStatusBar.getStartupMenuDialog();
+        if (startupMenuDialog != null && startupMenuDialog.isShowing()) {
+            startupMenuDialog.dismiss();
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/OpenthosStatusBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/OpenthosStatusBarView.java
index a95b1b8..5107445 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/OpenthosStatusBarView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/OpenthosStatusBarView.java
@@ -4,19 +4,18 @@ import android.content.Context;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.graphics.Canvas;
+import android.provider.Settings;
 import android.view.MotionEvent;
 import android.view.ViewGroup;
 import android.view.View;
-import android.util.Log;
 import android.util.AttributeSet;
-import android.widget.Toast;
-import android.widget.ImageView;
+import android.view.inputmethod.InputMethodInfo;
+import android.view.inputmethod.InputMethodManager;
 import android.widget.ImageView;
 import android.widget.HorizontalScrollView;
 import android.widget.LinearLayout;
 
 import com.android.systemui.SysUiServiceProvider;
-import com.android.systemui.DejankUtils;
 import com.android.systemui.dialog.BaseDialog;
 import com.android.systemui.dialog.BatteryDialog;
 import com.android.systemui.dialog.CalendarDialog;
@@ -24,21 +23,18 @@ import com.android.systemui.dialog.CalendarDisplayView;
 import com.android.systemui.dialog.InputMethodDialog;
 import com.android.systemui.dialog.StartupMenuDialog;
 import com.android.systemui.dialog.VolumeDialog;
-import com.android.systemui.dialog.MenuDialog;
 import com.android.systemui.dialog.WifiDialog;
-import com.android.systemui.startupmenu.DialogType;
 
 import com.android.systemui.R;
 
-/**
- * Created by cao on 17-9-26.
- */
+import java.util.List;
 
 public class OpenthosStatusBarView extends PanelBar {
+    private static final String SYSTEM_INPUT_METHOD_ID = "com.android.inputmethod.latin/.LatinIME";
     private static final String TAG = "OpenthosStatusBarView";
 
+    private InputMethodManager mInputMethodManager;
     private StatusBar mStatusBar;
-    private Context mContext;
     private ImageView mStartupMenu;
     private OpenthosStatusBarView mOpenthosStatusBarView;
     private ImageView mInputView;
@@ -48,8 +44,7 @@ public class OpenthosStatusBarView extends PanelBar {
     private ImageView mNotificationView;
     private CalendarDisplayView mCalendarView;
     private ImageView mHomeView;
-    private HorizontalScrollView mScrollStatusBar;
-    private LinearLayout mllScrollContents;
+    private LinearLayout mLlScrollContents;
     private View mEmptyStatusBar;
     private BaseDialog mStartupMenuDialog;
     private BaseDialog mInputManagerDialog;
@@ -64,8 +59,7 @@ public class OpenthosStatusBarView extends PanelBar {
 
     public OpenthosStatusBarView(Context context, AttributeSet attrs) {
         super(context, attrs);
-        mContext = context;
-        mStatusBar = SysUiServiceProvider.getComponent(mContext, StatusBar.class);
+        mStatusBar = SysUiServiceProvider.getComponent(context, StatusBar.class);
     }
 
     @Override
@@ -85,7 +79,10 @@ public class OpenthosStatusBarView extends PanelBar {
 
     @Override
     protected void onFinishInflate() {
+        super.onFinishInflate();
         initView();
+        initData();
+        initListener();
     }
 
     private void initView() {
@@ -97,15 +94,19 @@ public class OpenthosStatusBarView extends PanelBar {
         mNotificationView = (ImageView) findViewById(R.id.iv_notification_status_bar);
         mCalendarView = (CalendarDisplayView) findViewById(R.id.iv_date_status_bar);
         mHomeView = (ImageView) findViewById(R.id.iv_home_status_bar);
-        mScrollStatusBar = (HorizontalScrollView) findViewById(R.id.sroll_status_bar);
         mEmptyStatusBar = (View) findViewById(R.id.empty_statusbar);
-        mllScrollContents = (LinearLayout) findViewById(R.id.ll_scroll_icon_contents);
+        mLlScrollContents = (LinearLayout) findViewById(R.id.ll_scroll_icon_contents);
+    }
+
+    private void initData() {
+        mInputMethodManager =
+                (InputMethodManager) getContext().getSystemService(Context.INPUT_METHOD_SERVICE);
+        updateInputMethodIcon();
         initDialog();
-        mStartupMenuDialog = StartupMenuDialog.getInstance(getContext());
-        openthosStatusBarClickListener();
     }
 
     private void initDialog() {
+        mStartupMenuDialog = new StartupMenuDialog(getContext());
         mInputManagerDialog = new InputMethodDialog(getContext());
         mBatteryDialog = new BatteryDialog(getContext());
         mWifiDialog = new WifiDialog(getContext());
@@ -113,7 +114,11 @@ public class OpenthosStatusBarView extends PanelBar {
         mCalendarDialog = new CalendarDialog(getContext());
     }
 
-    private void openthosStatusBarClickListener() {
+    public StartupMenuDialog getStartupMenuDialog() {
+        return (StartupMenuDialog) mStartupMenuDialog;
+    }
+
+    private void initListener() {
         mStartupMenu.setOnClickListener(mOpenthosStatusbarListener);
         mInputView.setOnClickListener(mOpenthosStatusbarListener);
         mBatteryView.setOnClickListener(mOpenthosStatusbarListener);
@@ -123,8 +128,7 @@ public class OpenthosStatusBarView extends PanelBar {
         mCalendarView.setOnClickListener(mOpenthosStatusbarListener);
         mHomeView.setOnClickListener(mOpenthosStatusbarListener);
         mEmptyStatusBar.setOnClickListener(mOpenthosStatusbarListener);
-        mScrollStatusBar.setOnClickListener(mOpenthosStatusbarListener);
-        mllScrollContents.setOnClickListener(mOpenthosStatusbarListener);
+//        mLlScrollContents.setOnClickListener(mOpenthosStatusbarListener);
     }
 
     private View.OnClickListener mOpenthosStatusbarListener = new View.OnClickListener() {
@@ -158,10 +162,7 @@ public class OpenthosStatusBarView extends PanelBar {
                 case R.id.iv_home_status_bar:
                     Intent home = new Intent(Intent.ACTION_MAIN);
                     home.addCategory(Intent.CATEGORY_HOME);
-                    mContext.startActivity(home);
-                    break;
-                case R.id.sroll_status_bar:
-                    //Handle events
+                    getContext().startActivity(home);
                     break;
                 case R.id.ll_scroll_icon_contents:
                     //Handle events
@@ -180,16 +181,16 @@ public class OpenthosStatusBarView extends PanelBar {
 
     public void updateBattertIcon(int level, boolean pluggedIn, boolean charging) {
         if (charging || pluggedIn || level == 0) {
-            mBatteryView.setImageDrawable(mContext.getDrawable(
+            mBatteryView.setImageDrawable(getContext().getDrawable(
                     R.mipmap.statusbar_battery));
         } else if (level >= 75) {
-            mBatteryView.setImageDrawable(mContext.getDrawable(
+            mBatteryView.setImageDrawable(getContext().getDrawable(
                     R.mipmap.statusbar_battery_high));
         } else if (level >= 25 && level <= 75) {
-            mBatteryView.setImageDrawable(mContext.getDrawable(
+            mBatteryView.setImageDrawable(getContext().getDrawable(
                     R.mipmap.ic_notice_battery_half));
         } else {
-            mBatteryView.setImageDrawable(mContext.getDrawable(
+            mBatteryView.setImageDrawable(getContext().getDrawable(
                     R.mipmap.statusbar_battery_low));
         }
     }
@@ -209,7 +210,7 @@ public class OpenthosStatusBarView extends PanelBar {
         mEmptyStatusBar.setOnLongClickListener(new View.OnLongClickListener() {
             @Override
             public boolean onLongClick(View v) {
-                mStatusBar.mShowTaskbarDialog.show(DialogType.SHOW_TASKBAR, mDownX, mDownY);
+//                MenuDialog.getInstance(mContext).show(DialogType.SHOW_TASKBAR, mDownX, mDownY);
                 return false;
             }
         });
@@ -240,6 +241,21 @@ public class OpenthosStatusBarView extends PanelBar {
         }
     }
 
+    public void updateInputMethodIcon() {
+        List<InputMethodInfo> inputMethodList = mInputMethodManager.getInputMethodList();
+        String currentInputMethodId = Settings.Secure.getString(
+                getContext().getContentResolver(), Settings.Secure.DEFAULT_INPUT_METHOD);
+        for (InputMethodInfo im : inputMethodList) {
+            if (im.getId().equals(currentInputMethodId)) {
+                if (currentInputMethodId.equals(SYSTEM_INPUT_METHOD_ID)) {//os input
+                    mInputView.setImageResource(R.drawable.statusbar_switch_input_method);
+                    return;
+                } // other input methods;
+                mInputView.setImageDrawable(im.loadIcon(getContext().getPackageManager()));
+            }
+        }
+    }
+
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
@@ -267,17 +283,14 @@ public class OpenthosStatusBarView extends PanelBar {
 
     public void onDensityOrFontScaleChanged() {
         ViewGroup.LayoutParams layoutParams = getLayoutParams();
-        layoutParams.height = getResources().getDimensionPixelSize(
-                R.dimen.status_bar_height);
-        layoutParams.width = getResources().getDimensionPixelSize(
-                R.dimen.status_bar_height);
+        layoutParams.height = getResources().getDimensionPixelSize(R.dimen.status_bar_height);
+        layoutParams.width = getResources().getDimensionPixelSize(R.dimen.status_bar_height);
         setLayoutParams(layoutParams);
     }
 
     @Override
     protected void onConfigurationChanged(Configuration newConfig) {
         super.onConfigurationChanged(newConfig);
-        mStartupMenuDialog = StartupMenuDialog.reCreateStartupMenudialog(getContext());
-        initDialog();
+        onFinishInflate();
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index 95f259f..0301558 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -36,7 +36,6 @@ import android.animation.Animator;
 import android.animation.AnimatorListenerAdapter;
 import android.annotation.NonNull;
 import android.annotation.Nullable;
-import android.app.IActivityManager;
 import android.app.ActivityManager;
 import android.app.ActivityManager.StackId;
 import android.app.ActivityOptions;
@@ -69,8 +68,6 @@ import android.content.pm.UserInfo;
 import android.content.res.Configuration;
 import android.content.res.Resources;
 import android.database.ContentObserver;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
@@ -141,7 +138,6 @@ import android.widget.DateTimeView;
 import android.widget.ImageButton;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
-import android.widget.FrameLayout;
 import android.widget.RemoteViews;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -179,8 +175,7 @@ import com.android.systemui.UiOffloadThread;
 import com.android.systemui.assist.AssistManager;
 import com.android.systemui.classifier.FalsingLog;
 import com.android.systemui.classifier.FalsingManager;
-import com.android.systemui.dialog.MenuDialog;
-import com.android.systemui.dialog.TaskbarIcon;
+import com.android.systemui.dialog.StartupMenuDialog;
 import com.android.systemui.colorextraction.SysuiColorExtractor;
 import com.android.systemui.doze.DozeHost;
 import com.android.systemui.doze.DozeLog;
@@ -204,13 +199,10 @@ import com.android.systemui.recents.events.EventBus;
 import com.android.systemui.recents.events.activity.AppTransitionFinishedEvent;
 import com.android.systemui.recents.events.activity.UndockingTaskEvent;
 import com.android.systemui.recents.misc.SystemServicesProxy;
-import com.android.systemui.sql.SqliteOpenHelper;
-import com.android.systemui.sql.SqliteOperate;
-import com.android.systemui.sql.TaskbarIconField;
 import com.android.systemui.stackdivider.Divider;
 import com.android.systemui.stackdivider.WindowManagerProxy;
-import com.android.systemui.startupmenu.LaunchAppUtil;
-import com.android.systemui.startupmenu.DialogType;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.utils.AppOperateManager;
 import com.android.systemui.statusbar.ActivatableNotificationView;
 import com.android.systemui.statusbar.BackDropView;
 import com.android.systemui.statusbar.CommandQueue;
@@ -260,6 +252,7 @@ import com.android.systemui.statusbar.stack.NotificationStackScrollLayout;
 import com.android.systemui.statusbar.stack.NotificationStackScrollLayout
         .OnChildLocationsChangedListener;
 import com.android.systemui.statusbar.stack.StackStateAnimator;
+import com.android.systemui.statusbar.view.TaskBarIcon;
 import com.android.systemui.util.NotificationChannels;
 import com.android.systemui.util.leak.LeakDetector;
 import com.android.systemui.volume.VolumeComponent;
@@ -357,7 +350,9 @@ public class StatusBar extends SystemUI implements DemoMode,
             View.STATUS_BAR_TRANSIENT | View.NAVIGATION_BAR_TRANSIENT;
     private static final long AUTOHIDE_TIMEOUT_MS = 2250;
 
-    /** The minimum delay in ms between reports of notification visibility. */
+    /**
+     * The minimum delay in ms between reports of notification visibility.
+     */
     private static final int VISIBILITY_REPORT_MIN_DELAY_MS = 500;
 
     /**
@@ -448,7 +443,7 @@ public class StatusBar extends SystemUI implements DemoMode,
     Point mCurrentDisplaySize = new Point();
 
     protected LinearLayout mActivityLayout;
-    protected int mPrevTaskId;
+    protected int mPrevTaskId = -1;
     protected StatusBarWindowView mStatusBarWindow;
     protected OpenthosStatusBarView mOpenthosStatusBarView;
     protected PhoneStatusBarView mStatusBarView;
@@ -803,7 +798,7 @@ public class StatusBar extends SystemUI implements DemoMode,
     };
     private HashMap<ExpandableNotificationRow, List<ExpandableNotificationRow>> mTmpChildOrderMap
             = new HashMap<>();
-    private Map<ComponentName, TaskbarIcon> mShowIcons = new HashMap<>();
+    private Map<String, TaskBarIcon> mShowIcons = new HashMap<>();
     private RankingMap mLatestRankingMap;
     private boolean mNoAnimationOnNextBarModeChange;
     private FalsingManager mFalsingManager;
@@ -819,7 +814,6 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     private NavigationBarFragment mNavigationBar;
     private View mNavigationBarView;
-    public MenuDialog mShowTaskbarDialog;
     private RankingMap mRankingMap;
 
     @Override
@@ -891,6 +885,18 @@ public class StatusBar extends SystemUI implements DemoMode,
                 mLockscreenSettingsObserver,
                 UserHandle.USER_ALL);
 
+        mContext.getContentResolver().registerContentObserver(
+                Settings.Secure.getUriFor(Settings.Secure.DEFAULT_INPUT_METHOD),
+                false,
+                mInputMethodSettingsObserver,
+                UserHandle.USER_ALL);
+
+        mContext.getContentResolver().registerContentObserver(
+                Settings.Secure.getUriFor(Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE),
+                false,
+                mInputMethodSettingsObserver,
+                UserHandle.USER_ALL);
+
         mBarService = IStatusBarService.Stub.asInterface(
                 ServiceManager.getService(Context.STATUS_BAR_SERVICE));
 
@@ -933,7 +939,7 @@ public class StatusBar extends SystemUI implements DemoMode,
 
         // Set up the initial icon state
         int N = iconSlots.size();
-        for (int i=0; i < N; i++) {
+        for (int i = 0; i < N; i++) {
             mCommandQueue.setIcon(iconSlots.get(i), icons.get(i));
         }
 
@@ -1027,6 +1033,9 @@ public class StatusBar extends SystemUI implements DemoMode,
         Dependency.get(ActivityStarterDelegate.class).setActivityStarterImpl(this);
 
         Dependency.get(ConfigurationController.class).addCallback(this);
+
+        AppOperateManager.getInstance(mContext).reloadData();
+        initTaskbarIcons();
     }
 
     protected void createIconController() {
@@ -1100,16 +1109,16 @@ public class StatusBar extends SystemUI implements DemoMode,
             mNotificationPanelDebugText.setVisibility(View.VISIBLE);
         }
 
-        try {
-            boolean showNav = mWindowManagerService.hasNavigationBar();
-            if (DEBUG) Log.v(TAG, "hasNavigationBar=" + showNav);
-            if (showNav) {
-                //createNavigationBar();
-                addOpenthosStatusBarLayout();
-            }
-        } catch (RemoteException ex) {
-            // no window manager? good luck with that
-        }
+        // try {
+        //     boolean showNav = mWindowManagerService.hasNavigationBar();
+        //     if (DEBUG) Log.v(TAG, "hasNavigationBar=" + showNav);
+        //     if (showNav) {
+        //         createNavigationBar();
+        //     }
+        // } catch (RemoteException ex) {
+        //     // no window manager? good luck with that
+        // }
+        addOpenthosStatusBarLayout();
 
         // figure out which pixel-format to use for the status bar.
         mPixelFormat = PixelFormat.OPAQUE;
@@ -1302,9 +1311,6 @@ public class StatusBar extends SystemUI implements DemoMode,
         mButtonNotificationClearAll = (Button) mNotificationPanel.findViewById(R.id.notification_clear_all);
         mButtonNotificationManager.setOnClickListener(mNotificationClickListener);
         mButtonNotificationClearAll.setOnClickListener(mNotificationClickListener);
-
-        mShowTaskbarDialog = new MenuDialog(mContext);
-        initTaskbarIcons();
     }
 
     //add openthos status bar view.
@@ -1543,6 +1549,10 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     }
 
+    public StartupMenuDialog getStartupMenuDialog() {
+        return mOpenthosStatusBarView.getStartupMenuDialog();
+    }
+
     public void clearAllNotifications() {
 
         // animate-swipe all dismissable notifications, then animate the shade closed
@@ -3365,170 +3375,103 @@ public class StatusBar extends SystemUI implements DemoMode,
         return mFingerprintUnlockController;
     }
 
-    public void iconClose(int taskId) {
-        for (ComponentName cmp : mShowIcons.keySet()) {
-            TaskbarIcon taskbarIcon = mShowIcons.get(cmp);
-            if (taskbarIcon.getTaskId() == taskId) {
-                if (!taskbarIcon.isLocked()) {
-                    mActivityLayout.removeView(taskbarIcon.getIconLayout());
-                    mShowIcons.remove(cmp);
-                }
-                taskbarIcon.setRun(false);
-                break;
-            }
-        }
+    private void initTaskbarIcons() {
+//        SqliteOpenHelper.getInstance(mContext).queryLockedApp(new DataCallback() {
+//            @Override
+//            public void callback(Map<String, AppInfo> appInfoMaps) {
+//                for (String packageName : appInfoMaps.keySet()) {
+//                    TaskBarButtonView buttonView =
+//                            new TaskBarButtonView(mContext, appInfoMaps.get(packageName));
+//                    mActivityLayout.addView(buttonView);
+//                    mShowIcons.put(packageName, buttonView);
+//                }
+//            }
+//        });
     }
 
-    public boolean isLocked(ComponentName componentName) {
-        if (mShowIcons.get(componentName) != null) {
-            return mShowIcons.get(componentName).isLocked();
+    @Override
+    public void changeStatusBarIcon(int taskId, ComponentName componentName, boolean keep) {
+        Log.i("StatusBar", "taskId " + taskId + " keep " + keep + " cmp" + componentName);
+        if (!keep || componentName == null) {
+            iconClose(taskId);
+            return;
         }
-        return false;
+        bindIconToTaskId(taskId, componentName);
     }
 
-    public void locked(ComponentName componentName) {
-        TaskbarIcon taskbarIcon = mShowIcons.get(componentName);
-        if (taskbarIcon == null) {
-            taskbarIcon = new TaskbarIcon(componentName, createIconLayout(componentName));
-            mShowIcons.put(componentName, taskbarIcon);
-            SqliteOperate.saveTaskbarIcon(mContext, taskbarIcon);
+    public void bindIconToTaskId(int taskId, ComponentName componentName) {
+        if (!canAdd(componentName.getPackageName())) {
+            return;
         }
-        taskbarIcon.setLocked(true);
-    }
-
-    public void unlocked(ComponentName componentName) {
-        TaskbarIcon taskbarIcon = mShowIcons.get(componentName);
-        SqliteOperate.deleteTaskbarIcon(mContext, componentName.flattenToString());
-        if (taskbarIcon != null) {
-            if (!taskbarIcon.isRun()) {
-                mActivityLayout.removeView(taskbarIcon.getIconLayout());
-                mShowIcons.remove(componentName);
-            } else {
-                taskbarIcon.setLocked(false);
+        if (mPrevTaskId != -1) {
+            for (TaskBarIcon buttonView : mShowIcons.values()) {
+                if (mPrevTaskId == buttonView.getTaskId()) {
+                    buttonView.setFocusInApplications(false);
+                }
             }
         }
-    }
 
-    public void closeApp(ComponentName componentName) {
-        try {
-            ActivityManager.getService().removeTask(mShowIcons.get(componentName).getTaskId());
-        } catch (Exception e) {
+        String packageName = componentName.getPackageName();
+        TaskBarIcon buttonView = mShowIcons.get(packageName);
+        if (buttonView == null) {
+            buttonView = new TaskBarIcon(mContext, packageName);
+            mActivityLayout.addView(buttonView);
+            mShowIcons.put(packageName, buttonView);
         }
-    }
 
-    public Drawable getPackageIcon(String pkg) {
-        Drawable icon = null;
-        PackageManager pm = mContext.getPackageManager();
-        try {
-            ApplicationInfo ai = pm.getApplicationInfo(pkg, 0);
-            if (ai != null) {
-                icon = pm.getApplicationIcon(ai);
-            } else {
-                icon = pm.getDefaultActivityIcon();
-            }
-        } catch (Exception e) {
-            Log.e(TAG, "Error during changeStatusBarIcon, set icon as default", e);
-            icon = pm.getDefaultActivityIcon();
-        }
-        return icon;
+        buttonView.setTaskId(taskId);
+        buttonView.setFocusInApplications(true);
+        mPrevTaskId = taskId;
     }
 
-    private FrameLayout createIconLayout(final ComponentName cmp) {
-        final FrameLayout iconLayout = (FrameLayout) View.inflate(mContext,
-                R.layout.statusbar_activity_button, null);
-        ImageView iconView = (ImageView) iconLayout.findViewById(R.id.icon_view);
-        iconView.setImageDrawable(getPackageIcon(cmp.getPackageName()));
-        iconView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                try {
-                    IActivityManager am = ActivityManager.getService();
-                    if (mShowIcons.get(cmp).isRun()) {
-                        am.setFocusedTask(mShowIcons.get(cmp).getTaskId());
-                    } else {
-                        LaunchAppUtil.launchApp(mContext, cmp);
-                    }
-                } catch (Exception e) {
-                    Log.e(TAG, "Error during setFocuesTask", e);
-                }
-            }
-        });
-        iconView.setOnLongClickListener(new View.OnLongClickListener() {
-            @Override
-            public boolean onLongClick(View v) {
-                TaskbarIcon taskbarIcon = mShowIcons.get(cmp);
-                if (taskbarIcon != null) {
-                    if (taskbarIcon.isRun() && taskbarIcon.isLocked()) {
-                        mShowTaskbarDialog.show(DialogType.BAR_LOCK_OPEN, cmp, iconLayout);
-                    } else if (taskbarIcon.isLocked()) {
-                        mShowTaskbarDialog.show(DialogType.BAR_LOCK_CLOSE, cmp, iconLayout);
-                    } else {
-                        mShowTaskbarDialog.show(DialogType.BAR_NORMAL, cmp, iconLayout);
-                    }
-                }
-                return true;
-            }
-        });
-        iconView.setOnTouchListener(new View.OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                return false;
-            }
-        });
-        mActivityLayout.addView(iconLayout);
-        return iconLayout;
+    private boolean canAdd(String packageName) {
+        AppInfo appInfo = AppOperateManager.getInstance(mContext).getAppInfo(packageName);
+        return appInfo != null && appInfo.getIcon() != null;
     }
 
-    public void bindIconToTaskId(int taskId, ComponentName cmp) {
-        if (mPrevTaskId != 0) {
-            for (ComponentName componentName : mShowIcons.keySet()) {
-                if (mPrevTaskId == mShowIcons.get(componentName).getTaskId()) {
-                    mShowIcons.get(componentName).setFocus(false);
-		    break;
+    public void iconClose(int taskId) {
+        for (TaskBarIcon buttonView : mShowIcons.values()) {
+            if (taskId == buttonView.getTaskId()) {
+                if (!buttonView.isLocked()) {
+                    mActivityLayout.removeView(buttonView);
+                    mShowIcons.remove(buttonView.getPackageName());
+                } else {
+                    buttonView.close();
                 }
+                break;
             }
         }
-        TaskbarIcon taskbarIcon = mShowIcons.get(cmp);
-        if (taskbarIcon == null) {
-            for (ComponentName componentName : mShowIcons.keySet()) {
-                if (mShowIcons.get(componentName).getTaskId() == taskId) {
-                    taskbarIcon = mShowIcons.get(componentName);
-                    break;
-                }
-            }
-            if (taskbarIcon == null) {
-                taskbarIcon = new TaskbarIcon(cmp, createIconLayout(cmp));
-                mShowIcons.put(cmp, taskbarIcon);
+    }
+
+    public void closeApp(String packageName) {
+        try {
+            TaskBarIcon buttonView = mShowIcons.get(packageName);
+            if (buttonView != null) {
+                ActivityManager.getService().removeTask(buttonView.getTaskId());
             }
+        } catch (Exception e) {
         }
-        taskbarIcon.setFocus(true);
-        taskbarIcon.setRun(true);
-        taskbarIcon.setTaskId(taskId);
-        mPrevTaskId = taskId;
     }
 
-    private void initTaskbarIcons() {
-        SqliteOpenHelper instance = SqliteOpenHelper.getInstance(mContext);
-        SQLiteDatabase db = instance.getReadableDatabase();
-        Cursor cursor = db.rawQuery("select * from " + TaskbarIconField.TABLE_NAME, null);
-        while (cursor.moveToNext()) {
-            ComponentName cmp = ComponentName.unflattenFromString(
-                    cursor.getString(cursor.getColumnIndex(TaskbarIconField.COMPONENT_NAME)));
-            locked(cmp);
+    public void addToTaskbar(String packageName) {
+        TaskBarIcon buttonView = mShowIcons.get(packageName);
+        if (buttonView == null) {
+            buttonView = new TaskBarIcon(mContext, packageName);
+            mActivityLayout.addView(buttonView);
+            mShowIcons.put(packageName, buttonView);
         }
-        cursor.close();
-        db.close();
+        buttonView.locked();
     }
 
-    @Override
-    public void changeStatusBarIcon(int taskId, ComponentName cmp, boolean keep) {
-        android.util.Log.i("ljh", "taskId " + taskId + " keep " + keep + " cmp" + cmp);
-        if (!keep || cmp == null) {
-            iconClose(taskId);
-            return;
+    public void removeFromTaskbar(String packageName) {
+        TaskBarIcon buttonView = mShowIcons.get(packageName);
+        if (buttonView != null) {
+            if (!buttonView.isRun()) {
+                mActivityLayout.removeView(buttonView);
+                mShowIcons.remove(packageName);
+            }
+            buttonView.unlocked();
         }
-
-        bindIconToTaskId(taskId, cmp);
     }
 
     @Override
@@ -3864,12 +3807,12 @@ public class StatusBar extends SystemUI implements DemoMode,
         if (mNotificationPanel != null) {
             pw.println("    mNotificationPanel=" +
                 mNotificationPanel + " params=" + mNotificationPanel.getLayoutParams().debug(""));
-            pw.print  ("      ");
+            pw.print("      ");
             mNotificationPanel.dump(fd, pw, args);
         }
         pw.println("  mStackScroller: ");
         if (mStackScroller != null) {
-            pw.print  ("      ");
+            pw.print("      ");
             mStackScroller.dump(fd, pw, args);
         }
         pw.println("  Theme:");
@@ -4098,12 +4041,10 @@ public class StatusBar extends SystemUI implements DemoMode,
                     }
                     animateCollapsePanels(flags);
                 }
-            }
-            else if (Intent.ACTION_SCREEN_OFF.equals(action)) {
+            } else if (Intent.ACTION_SCREEN_OFF.equals(action)) {
                 finishBarAnimations();
                 resetUserExpandedStates();
-            }
-            else if (DevicePolicyManager.ACTION_SHOW_DEVICE_MONITORING_DIALOG.equals(action)) {
+            } else if (DevicePolicyManager.ACTION_SHOW_DEVICE_MONITORING_DIALOG.equals(action)) {
                 mQSPanel.showDeviceMonitoringDialog();
             }
         }
@@ -5125,7 +5066,7 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     @Override
     public void onActivated(ActivatableNotificationView view) {
-        onActivated((View)view);
+        onActivated((View) view);
         mStackScroller.setActivatedChild(view);
     }
 
@@ -5173,7 +5114,7 @@ public class StatusBar extends SystemUI implements DemoMode,
     public void onActivationReset(ActivatableNotificationView view) {
         if (view == mStackScroller.getActivatedChild()) {
             mStackScroller.setActivatedChild(null);
-            onActivationReset((View)view);
+            onActivationReset((View) view);
         }
     }
 
@@ -5252,6 +5193,7 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     /**
      * TODO: Remove this method. Views should not be passed forward. Will cause theme issues.
+     *
      * @return bottom area view
      */
     public KeyguardBottomAreaView getKeyguardBottomAreaView() {
@@ -5637,7 +5579,7 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     /**
      * @return true if the screen is currently fully off, i.e. has finished turning off and has
-     *         since not started turning on.
+     * since not started turning on.
      */
     public boolean isScreenFullyOff() {
         return mScreenLifecycle.getScreenState() == ScreenLifecycle.SCREEN_OFF;
@@ -5941,7 +5883,7 @@ public class StatusBar extends SystemUI implements DemoMode,
 
         @Override
         public void onDoubleTap(float screenX, float screenY) {
-            if (screenX > 0 && screenY > 0 && mAmbientIndicationContainer != null 
+            if (screenX > 0 && screenY > 0 && mAmbientIndicationContainer != null
                 && mAmbientIndicationContainer.getVisibility() == View.VISIBLE) {
                 mAmbientIndicationContainer.getLocationOnScreen(mTmpInt2);
                 float viewX = screenX - mTmpInt2[0];
@@ -6136,6 +6078,15 @@ public class StatusBar extends SystemUI implements DemoMode,
         }
     };
 
+    private final ContentObserver mInputMethodSettingsObserver = new ContentObserver(mHandler) {
+        @Override
+        public void onChange(boolean selfChange) {
+            if (mOpenthosStatusBarView != null) {
+                mOpenthosStatusBarView.updateInputMethodIcon();
+            }
+        }
+    };
+
     private RemoteViews.OnClickHandler mOnClickHandler = new RemoteViews.OnClickHandler() {
 
         @Override
@@ -6438,97 +6389,97 @@ public class StatusBar extends SystemUI implements DemoMode,
 
     private final NotificationListenerWithPlugins mNotificationListener =
             new NotificationListenerWithPlugins() {
-        @Override
-        public void onListenerConnected() {
-            if (DEBUG) Log.d(TAG, "onListenerConnected");
-            onPluginConnected();
-            final StatusBarNotification[] notifications = getActiveNotifications();
-            if (notifications == null) {
-                Log.w(TAG, "onListenerConnected unable to get active notifications.");
-                return;
-            }
-            final RankingMap currentRanking = getCurrentRanking();
-            mHandler.post(new Runnable() {
                 @Override
-                public void run() {
-                    for (StatusBarNotification sbn : notifications) {
-                        try {
-                            addNotification(sbn, currentRanking);
-                        } catch (InflationException e) {
-                            handleInflationException(sbn, e);
-                        }
+                public void onListenerConnected() {
+                    if (DEBUG) Log.d(TAG, "onListenerConnected");
+                    onPluginConnected();
+                    final StatusBarNotification[] notifications = getActiveNotifications();
+                    if (notifications == null) {
+                        Log.w(TAG, "onListenerConnected unable to get active notifications.");
+                        return;
                     }
+                    final RankingMap currentRanking = getCurrentRanking();
+                    mHandler.post(new Runnable() {
+                        @Override
+                        public void run() {
+                            for (StatusBarNotification sbn : notifications) {
+                                try {
+                                    addNotification(sbn, currentRanking);
+                                } catch (InflationException e) {
+                                    handleInflationException(sbn, e);
+                                }
+                            }
+                        }
+                    });
                 }
-            });
-        }
 
-        @Override
-        public void onNotificationPosted(final StatusBarNotification sbn,
-                final RankingMap rankingMap) {
-            if (DEBUG) Log.d(TAG, "onNotificationPosted: " + sbn);
-            if (sbn != null && !onPluginNotificationPosted(sbn, rankingMap)) {
-                mHandler.post(new Runnable() {
-                    @Override
-                    public void run() {
-                        if (sbn.getNotification().contentView != null) {
-                            mRankingMap = rankingMap;
-                        }
-                        processForRemoteInput(sbn.getNotification());
-                        String key = sbn.getKey();
-                        mKeysKeptForRemoteInput.remove(key);
-                        boolean isUpdate = mNotificationData.get(key) != null;
-                        // In case we don't allow child notifications, we ignore children of
-                        // notifications that have a summary, since we're not going to show them
-                        // anyway. This is true also when the summary is canceled,
-                        // because children are automatically canceled by NoMan in that case.
-                        if (!ENABLE_CHILD_NOTIFICATIONS
-                            && mGroupManager.isChildInGroupWithSummary(sbn)) {
-                            if (DEBUG) {
-                                Log.d(TAG, "Ignoring group child due to existing summary: " + sbn);
-                            }
+                @Override
+                public void onNotificationPosted(final StatusBarNotification sbn,
+                                                 final RankingMap rankingMap) {
+                    if (DEBUG) Log.d(TAG, "onNotificationPosted: " + sbn);
+                    if (sbn != null && !onPluginNotificationPosted(sbn, rankingMap)) {
+                        mHandler.post(new Runnable() {
+                            @Override
+                            public void run() {
+                                if (sbn.getNotification().contentView != null) {
+                                    mRankingMap = rankingMap;
+                                }
+                                processForRemoteInput(sbn.getNotification());
+                                String key = sbn.getKey();
+                                mKeysKeptForRemoteInput.remove(key);
+                                boolean isUpdate = mNotificationData.get(key) != null;
+                                // In case we don't allow child notifications, we ignore children of
+                                // notifications that have a summary, since we're not going to show them
+                                // anyway. This is true also when the summary is canceled,
+                                // because children are automatically canceled by NoMan in that case.
+                                if (!ENABLE_CHILD_NOTIFICATIONS
+                                        && mGroupManager.isChildInGroupWithSummary(sbn)) {
+                                    if (DEBUG) {
+                                        Log.d(TAG, "Ignoring group child due to existing summary: " + sbn);
+                                    }
 
-                            // Remove existing notification to avoid stale data.
-                            if (isUpdate) {
-                                removeNotification(key, rankingMap);
-                            } else {
-                                mNotificationData.updateRanking(rankingMap);
-                            }
-                            return;
-                        }
-                        try {
-                            if (isUpdate) {
-                                updateNotification(sbn, rankingMap);
-                            } else {
-                                addNotification(sbn, rankingMap);
+                                    // Remove existing notification to avoid stale data.
+                                    if (isUpdate) {
+                                        removeNotification(key, rankingMap);
+                                    } else {
+                                        mNotificationData.updateRanking(rankingMap);
+                                    }
+                                    return;
+                                }
+                                try {
+                                    if (isUpdate) {
+                                        updateNotification(sbn, rankingMap);
+                                    } else {
+                                        addNotification(sbn, rankingMap);
+                                    }
+                                } catch (InflationException e) {
+                                    handleInflationException(sbn, e);
+                                }
                             }
-                        } catch (InflationException e) {
-                            handleInflationException(sbn, e);
-                        }
+                        });
                     }
-                });
-            }
-        }
+                }
 
-        @Override
-        public void onNotificationRemoved(StatusBarNotification sbn,
-                final RankingMap rankingMap) {
-            if (DEBUG) Log.d(TAG, "onNotificationRemoved: " + sbn);
-            if (sbn != null && !onPluginNotificationRemoved(sbn, rankingMap)) {
-                final String key = sbn.getKey();
-                mHandler.post(() -> removeNotification(key, rankingMap));
-            }
-        }
+                @Override
+                public void onNotificationRemoved(StatusBarNotification sbn,
+                                                  final RankingMap rankingMap) {
+                    if (DEBUG) Log.d(TAG, "onNotificationRemoved: " + sbn);
+                    if (sbn != null && !onPluginNotificationRemoved(sbn, rankingMap)) {
+                        final String key = sbn.getKey();
+                        mHandler.post(() -> removeNotification(key, rankingMap));
+                    }
+                }
 
-        @Override
-        public void onNotificationRankingUpdate(final RankingMap rankingMap) {
-            if (DEBUG) Log.d(TAG, "onRankingUpdate");
-            if (rankingMap != null) {
-                RankingMap r = onPluginRankingUpdate(rankingMap);
-                mHandler.post(() -> updateNotificationRanking(r));
-            }
-        }
+                @Override
+                public void onNotificationRankingUpdate(final RankingMap rankingMap) {
+                    if (DEBUG) Log.d(TAG, "onRankingUpdate");
+                    if (rankingMap != null) {
+                        RankingMap r = onPluginRankingUpdate(rankingMap);
+                        mHandler.post(() -> updateNotificationRanking(r));
+                    }
+                }
 
-    };
+            };
 
     private void updateCurrentProfilesCache() {
         synchronized (mCurrentProfiles) {
@@ -7568,7 +7519,7 @@ public class StatusBar extends SystemUI implements DemoMode,
             }
             stack.push((ExpandableNotificationRow) child);
         }
-        while(!stack.isEmpty()) {
+        while (!stack.isEmpty()) {
             ExpandableNotificationRow row = stack.pop();
             NotificationData.Entry entry = row.getEntry();
             boolean isChildNotification =
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/view/ScapeImageView.java b/packages/SystemUI/src/com/android/systemui/statusbar/view/ScapeImageView.java
new file mode 100644
index 0000000..a9009ec
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/view/ScapeImageView.java
@@ -0,0 +1,38 @@
+package com.android.systemui.statusbar.view;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.util.AttributeSet;
+import android.widget.ImageView;
+
+import com.android.systemui.R;
+
+public class ScapeImageView extends ImageView {
+    private final float SCAPE_WIDTH_HEIGHT_SIZE;
+
+    public ScapeImageView(Context context) {
+        this(context, null);
+    }
+
+    public ScapeImageView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public ScapeImageView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        TypedArray a = context.obtainStyledAttributes(attrs, R.styleable.ScapeImageView);
+        SCAPE_WIDTH_HEIGHT_SIZE = a.getFloat(R.styleable.ScapeImageView_scapeSize, 1);
+        a.recycle();
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        if (SCAPE_WIDTH_HEIGHT_SIZE == 1) {
+            super.onMeasure(heightMeasureSpec, heightMeasureSpec);
+        } else {
+            int widthSize = (int) (MeasureSpec.getSize(heightMeasureSpec) * SCAPE_WIDTH_HEIGHT_SIZE);
+            widthMeasureSpec = MeasureSpec.makeMeasureSpec(widthSize, MeasureSpec.EXACTLY);
+            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        }
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/view/SquareFrameLayout.java b/packages/SystemUI/src/com/android/systemui/statusbar/view/SquareFrameLayout.java
new file mode 100644
index 0000000..519cd03
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/view/SquareFrameLayout.java
@@ -0,0 +1,24 @@
+package com.android.systemui.statusbar.view;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.widget.FrameLayout;
+
+public class SquareFrameLayout extends FrameLayout {
+    public SquareFrameLayout(Context context) {
+        super(context);
+    }
+
+    public SquareFrameLayout(Context context, AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    public SquareFrameLayout(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(heightMeasureSpec, heightMeasureSpec);
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/view/TaskBarIcon.java b/packages/SystemUI/src/com/android/systemui/statusbar/view/TaskBarIcon.java
new file mode 100644
index 0000000..35864ab
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/view/TaskBarIcon.java
@@ -0,0 +1,231 @@
+package com.android.systemui.statusbar.view;
+
+import android.app.ActivityManager;
+import android.app.Dialog;
+import android.app.IActivityManager;
+import android.content.Context;
+import android.content.res.Configuration;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+
+import com.android.systemui.R;
+import com.android.systemui.dialog.DialogType;
+import com.android.systemui.dialog.MenuDialog;
+import com.android.systemui.startupmenu.SqliteOpenHelper;
+import com.android.systemui.startupmenu.bean.AppInfo;
+import com.android.systemui.startupmenu.listener.OnMenuClick;
+import com.android.systemui.startupmenu.utils.AppOperateManager;
+
+public class TaskBarIcon extends FrameLayout
+        implements View.OnClickListener, View.OnTouchListener,
+        View.OnLongClickListener, OnMenuClick, View.OnHoverListener {
+
+    private static MenuDialog mMenuDialog;
+    private MenuDialog mHoverDialog;
+    private AppOperateManager mOperateManager;
+    private SqliteOpenHelper mOpenHelper;
+    private ImageView mIconView;
+    private View mFocuseView;
+    private View mRunView;
+
+    private String mPackageName;
+    private boolean mIsFocusInApplications;
+    private boolean mIsRun;
+    private int mTaskId;
+
+    public TaskBarIcon(Context context, String packageName) {
+        super(context);
+        LayoutInflater.from(context).inflate(R.layout.taskbar_button_layout, this);
+        mPackageName = packageName;
+        initView();
+        initData();
+        initListener();
+    }
+
+    private void initView() {
+        mIconView = (ImageView) findViewById(R.id.icon_view);
+        mFocuseView = findViewById(R.id.focuse_view);
+        mRunView = findViewById(R.id.run_view);
+    }
+
+    private void initData() {
+        mOperateManager = AppOperateManager.getInstance(getContext());
+        mOpenHelper = SqliteOpenHelper.getInstance(getContext());
+        mIconView.setImageDrawable(getAppInfo().getIcon());
+        initDialog();
+    }
+
+    private void initListener() {
+        setOnClickListener(this);
+        setOnLongClickListener(this);
+        setOnTouchListener(this);
+        setOnHoverListener(this);
+    }
+
+    private void initDialog() {
+        if (mMenuDialog == null) {
+            mMenuDialog = new MenuDialog(getContext());
+            mMenuDialog.setOnMenuClick(this);
+        }
+        mHoverDialog = new MenuDialog(getContext());
+    }
+
+    @Override
+    public void onClick(View v) {
+        startRun();
+    }
+
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        return false;
+    }
+
+    @Override
+    public boolean onLongClick(View v) {
+        showDialog();
+        return true;
+    }
+
+    @Override
+    public boolean onHover(View v, MotionEvent event) {
+        switch (event.getAction()) {
+            case MotionEvent.ACTION_HOVER_ENTER:
+                if (!mMenuDialog.isShowing()) {
+                    mHoverDialog.show(DialogType.NOTIFY_NAME, getAppInfo(), this);
+                }
+                break;
+            case MotionEvent.ACTION_HOVER_EXIT:
+                mHoverDialog.dismiss();
+                break;
+        }
+        return false;
+    }
+
+    @Override
+    public void menuClick(View view, Dialog dialog, AppInfo appInfo, String menu) {
+        if (menu.equals(getContext().getString(R.string.open))) {
+            mOperateManager.openApplication(appInfo.getComponentName());
+        } else if (menu.equals(getContext().getString(R.string.phone_mode))) {
+            mOperateManager.runPhoneMode(appInfo.getComponentName());
+        } else if (menu.equals(getContext().getString(R.string.desktop_mode))) {
+            mOperateManager.runDesktopMode(appInfo.getComponentName());
+        } else if (menu.equals(getContext().getString(R.string.lock_to_task_bar))) {
+            mOperateManager.addToTaskbar(appInfo.getPackageName());
+        } else if (menu.equals(getContext().getString(R.string.unlock_from_task_bar))) {
+            mOperateManager.removeFromTaskbar(appInfo.getPackageName());
+        } else if (menu.equals(getContext().getString(R.string.close))) {
+            mOperateManager.closeApp(appInfo.getPackageName());
+        }
+        dialog.dismiss();
+    }
+
+    @Override
+    public void sortShow(View view, Dialog dialog, String menu) {
+        dialog.dismiss();
+    }
+
+    private void showDialog() {
+        if (!isRun()) {
+            mMenuDialog.show(DialogType.BAR_LOCK_CLOSE, getAppInfo(), this);
+        } else if (isLocked()) {
+            mMenuDialog.show(DialogType.BAR_LOCK_OPEN, getAppInfo(), this);
+        } else {
+            mMenuDialog.show(DialogType.BAR_UNLOCK_OPEN, getAppInfo(), this);
+        }
+    }
+
+    public void locked() {
+        setLocked(true);
+        mOpenHelper.updateDataLocked(getAppInfo());
+    }
+
+    public void unlocked() {
+        setLocked(false);
+        mOpenHelper.updateDataLocked(getAppInfo());
+    }
+
+    private void startRun() {
+        try {
+            IActivityManager am = ActivityManager.getService();
+            if (isRun()) {
+                am.setFocusedTask(mTaskId);
+            } else {
+                mOperateManager.openApplication(getAppInfo().getComponentName());
+            }
+            setFocusInApplications(true);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public void close() {
+        setRun(false);
+    }
+
+    public AppInfo getAppInfo() {
+        return mOperateManager.getAppInfo(mPackageName);
+    }
+
+    public String getPackageName() {
+        return mPackageName;
+    }
+
+    public boolean isLocked() {
+        return getAppInfo().isLocked();
+    }
+
+    public void setLocked(boolean isLocked) {
+        getAppInfo().setLocked(isLocked);
+    }
+
+    public boolean isFocusInApplications() {
+        return mIsFocusInApplications;
+    }
+
+    public void setFocusInApplications(boolean isFocusInApplications) {
+        mIsFocusInApplications = isFocusInApplications;
+        mIsRun = true;
+        if (mIsFocusInApplications) {
+            mFocuseView.setVisibility(VISIBLE);
+            mRunView.setVisibility(GONE);
+        } else {
+            mFocuseView.setVisibility(GONE);
+            mRunView.setVisibility(VISIBLE);
+        }
+    }
+
+    public boolean isRun() {
+        return mIsRun;
+    }
+
+    public void setRun(boolean isRun) {
+        mIsRun = isRun;
+        if (mIsRun) {
+            mFocuseView.setVisibility(GONE);
+            mRunView.setVisibility(VISIBLE);
+        } else {
+            mTaskId = -1;
+            mFocuseView.setVisibility(GONE);
+            mRunView.setVisibility(GONE);
+        }
+    }
+
+    public int getTaskId() {
+        return mTaskId;
+    }
+
+    public void setTaskId(int taskId) {
+        mTaskId = taskId;
+    }
+
+    @Override
+    protected void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        initView();
+        initData();
+        initListener();
+    }
+}
-- 
2.7.4

