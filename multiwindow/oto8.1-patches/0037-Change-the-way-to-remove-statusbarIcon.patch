From 45bf965fed707b22de2ed3575a015199420e8365 Mon Sep 17 00:00:00 2001
From: ladehunter <ladehunter@gmail.com>
Date: Tue, 24 Oct 2017 06:14:08 +0000
Subject: [PATCH 037/110] Change the way to remove statusbarIcon.

Signed-off-by: ladehunter <ladehunter@gmail.com>
---
 core/java/android/app/Application.java               |  2 +-
 .../android/server/am/ActivityManagerService.java    | 20 ++++++++------------
 .../java/com/android/server/am/ActivityStack.java    |  1 +
 3 files changed, 10 insertions(+), 13 deletions(-)

diff --git a/core/java/android/app/Application.java b/core/java/android/app/Application.java
index 156df36..d7027ac 100644
--- a/core/java/android/app/Application.java
+++ b/core/java/android/app/Application.java
@@ -289,4 +289,4 @@ public class Application extends ContextWrapper implements ComponentCallbacks2 {
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 4c2cd2d..9503930 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -4978,6 +4978,14 @@ public class ActivityManagerService extends IActivityManager.Stub
         return ret;
     }
 
+    public void removeTaskIcon(int taskId) {
+        StatusBarManagerInternal statusBarManager =
+                           LocalServices.getService(StatusBarManagerInternal.class);
+        if (statusBarManager != null) {
+            statusBarManager.changeStatusBarIcon(taskId, null, false);
+        }
+    }
+
     @Override
     public void reportActivityFullyDrawn(IBinder token, boolean restoredFromBundle) {
         synchronized (this) {
@@ -5060,13 +5068,6 @@ public class ActivityManagerService extends IActivityManager.Stub
             // Keep track of the root activity of the task before we finish it
             TaskRecord tr = r.getTask();
             ActivityRecord rootR = tr.getRootActivity();
-            if (rootR == r && tr.mActivities.size() <= 1) {
-                StatusBarManagerInternal statusBarManager =
-                                   LocalServices.getService(StatusBarManagerInternal.class);
-                if (statusBarManager != null) {
-                    statusBarManager.changeStatusBarIcon(tr.taskId, null, false);
-                }
-            }
             if (rootR == null) {
                 Slog.w(TAG, "Finishing task with all activities already finished");
             }
@@ -10463,11 +10464,6 @@ public class ActivityManagerService extends IActivityManager.Stub
         synchronized (this) {
             final long ident = Binder.clearCallingIdentity();
             try {
-                StatusBarManagerInternal statusBarManager =
-                                   LocalServices.getService(StatusBarManagerInternal.class);
-                if (statusBarManager != null) {
-                    statusBarManager.changeStatusBarIcon(taskId, null, false);
-                }
                 return mStackSupervisor.removeTaskByIdLocked(taskId, true, REMOVE_FROM_RECENTS);
             } finally {
                 Binder.restoreCallingIdentity(ident);
diff --git a/services/core/java/com/android/server/am/ActivityStack.java b/services/core/java/com/android/server/am/ActivityStack.java
index 1387a1d..aae3bd5 100644
--- a/services/core/java/com/android/server/am/ActivityStack.java
+++ b/services/core/java/com/android/server/am/ActivityStack.java
@@ -4169,6 +4169,7 @@ class ActivityStack<T extends StackWindowController> extends ConfigurationContai
             // statement will only execute once since overlays are also considered activities.
             if (lastActivity) {
                 removeTask(task, reason, REMOVE_TASK_MODE_DESTROYING);
+                mService.removeTaskIcon(task.taskId);
             }
         }
         cleanUpActivityServicesLocked(r);
-- 
2.7.4

