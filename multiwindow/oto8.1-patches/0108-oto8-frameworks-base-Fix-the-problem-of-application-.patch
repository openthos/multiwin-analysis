From a845fcf2eb8665c2346234cdec8530e5ebdacaaf Mon Sep 17 00:00:00 2001
From: Midysen <miaodexing@openthos.org>
Date: Thu, 19 Sep 2019 05:44:33 +0000
Subject: [PATCH 108/110] oto8:frameworks: base: Fix the problem of application
 jump not being able to check permissions

Signed-off-by: Miao Dexing <miaodexing@openthos.org>
Reviewed-by: Wang Zhixu <wangzhixu@openthos.org>
---
 core/java/android/app/ActivityThread.java                         | 8 ++++++++
 core/java/android/app/IActivityManager.aidl                       | 1 +
 core/java/android/hardware/Camera.java                            | 2 +-
 core/java/android/hardware/camera2/CameraManager.java             | 2 +-
 media/java/android/media/AudioRecord.java                         | 2 +-
 media/java/android/media/MediaRecorder.java                       | 2 +-
 .../core/java/com/android/server/am/ActivityManagerService.java   | 8 ++++++++
 7 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/core/java/android/app/ActivityThread.java b/core/java/android/app/ActivityThread.java
index 63bc01b..808c822 100644
--- a/core/java/android/app/ActivityThread.java
+++ b/core/java/android/app/ActivityThread.java
@@ -1915,6 +1915,14 @@ public final class ActivityThread {
                 ? am.getApplication().getOpPackageName() : null;
     }
 
+    public static String getRealPackageName(){
+        try {
+            return ActivityManager.getService().getRealPackageName();
+        } catch (RemoteException e){
+            throw e.rethrowFromSystemServer();
+        }
+    }
+
     public static String currentPackageName() {
         ActivityThread am = currentActivityThread();
         return (am != null && am.mBoundApplication != null)
diff --git a/core/java/android/app/IActivityManager.aidl b/core/java/android/app/IActivityManager.aidl
index de10237..467741a 100644
--- a/core/java/android/app/IActivityManager.aidl
+++ b/core/java/android/app/IActivityManager.aidl
@@ -114,6 +114,7 @@ interface IActivityManager {
     oneway void activityStopped(in IBinder token, in Bundle state,
             in PersistableBundle persistentState, in CharSequence description);
     String getCallingPackage(in IBinder token);
+    String getRealPackageName();
     ComponentName getCallingActivity(in IBinder token);
     List<ActivityManager.RunningTaskInfo> getTasks(int maxNum, int flags);
     void moveTaskToFront(int task, int flags, in Bundle options);
diff --git a/core/java/android/hardware/Camera.java b/core/java/android/hardware/Camera.java
index 0eae484..34d6edc 100644
--- a/core/java/android/hardware/Camera.java
+++ b/core/java/android/hardware/Camera.java
@@ -529,7 +529,7 @@ public class Camera {
         int err = cameraInitNormal(cameraId);
 
         mPackageManager = (PackageManager) ActivityThread.currentContext().getPackageManager();
-        if (mPackageManager.hasVirtualPermission(ActivityThread.currentPackageName()
+        if (mPackageManager.hasVirtualPermission(ActivityThread.getRealPackageName()
                     + ".permission.camera", Manifest.permission.CAMERA)) {
             SystemProperties.set(CAMERA_USE_FAKE, VIR_CAMERA);
         } else {
diff --git a/core/java/android/hardware/camera2/CameraManager.java b/core/java/android/hardware/camera2/CameraManager.java
index 56071e9..eadaaca 100644
--- a/core/java/android/hardware/camera2/CameraManager.java
+++ b/core/java/android/hardware/camera2/CameraManager.java
@@ -308,7 +308,7 @@ public final class CameraManager {
             ICameraDeviceCallbacks callbacks = deviceImpl.getCallbacks();
 
             mPackageManager = (PackageManager) ActivityThread.currentContext().getPackageManager();
-            if (mPackageManager.hasVirtualPermission(ActivityThread.currentPackageName()
+            if (mPackageManager.hasVirtualPermission(ActivityThread.getRealPackageName()
                         + ".permission.camera", Manifest.permission.CAMERA)) {
                 SystemProperties.set(CAMERA_USE_FAKE, VIR_CAMERA);
             } else {
diff --git a/media/java/android/media/AudioRecord.java b/media/java/android/media/AudioRecord.java
index 07c5a52..3d3a8d7 100644
--- a/media/java/android/media/AudioRecord.java
+++ b/media/java/android/media/AudioRecord.java
@@ -992,7 +992,7 @@ public class AudioRecord implements AudioRouting
         }
 
         mPackageManager = (PackageManager) ActivityThread.currentContext().getPackageManager();
-        if (mPackageManager.hasVirtualPermission(ActivityThread.currentPackageName()
+        if (mPackageManager.hasVirtualPermission(ActivityThread.getRealPackageName()
                     + ".permission.audio", Manifest.permission.RECORD_AUDIO)) {
             SystemProperties.set(AUDIO_USE_FAKE, VIR_AUDIO);
         } else {
diff --git a/media/java/android/media/MediaRecorder.java b/media/java/android/media/MediaRecorder.java
index 7d72818..5f02361 100644
--- a/media/java/android/media/MediaRecorder.java
+++ b/media/java/android/media/MediaRecorder.java
@@ -973,7 +973,7 @@ public class MediaRecorder
         }
 
         mPackageManager = (PackageManager) ActivityThread.currentContext().getPackageManager();
-        if (mPackageManager.hasVirtualPermission(ActivityThread.currentPackageName()
+        if (mPackageManager.hasVirtualPermission(ActivityThread.getRealPackageName()
                     + ".permission.audio", Manifest.permission.RECORD_AUDIO)) {
             SystemProperties.set(AUDIO_USE_FAKE, VIR_AUDIO);
         } else {
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index a2dd00e..5d463af 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -4570,6 +4570,14 @@ public class ActivityManagerService extends IActivityManager.Stub
     }
 
     @Override
+    public final String getRealPackageName() {
+        if (!mRecentTasks.isEmpty()){
+            return mRecentTasks.get(0).mActivities.get(0).packageName;
+        }
+        return ActivityThread.currentPackageName();
+    }
+
+    @Override
     public final int startActivityAsUser(IApplicationThread caller, String callingPackage,
             Intent intent, String resolvedType, IBinder resultTo, String resultWho, int requestCode,
             int startFlags, ProfilerInfo profilerInfo, Bundle bOptions, int userId) {
-- 
2.7.4

