From 912eb71cd16fb76dd0fc62e1d97eece886c02e0d Mon Sep 17 00:00:00 2001
From: ladehunter <ladehunter@gmail.com>
Date: Fri, 13 Oct 2017 04:53:23 +0000
Subject: [PATCH 020/110] setStatusbarVisibility and unpausing activity in
 freeform.

Signed-off-by: ladehunter <ladehunter@gmail.com>
---
 core/java/com/android/internal/statusbar/IStatusBar.aidl   |  1 +
 .../src/com/android/systemui/statusbar/CommandQueue.java   | 14 ++++++++++++++
 .../com/android/systemui/statusbar/phone/StatusBar.java    |  5 +++++
 .../java/com/android/server/am/ActivityManagerService.java |  5 +++++
 .../core/java/com/android/server/am/ActivityStack.java     |  6 ++++++
 .../android/server/statusbar/StatusBarManagerInternal.java |  2 ++
 .../android/server/statusbar/StatusBarManagerService.java  |  9 +++++++++
 7 files changed, 42 insertions(+)

diff --git a/core/java/com/android/internal/statusbar/IStatusBar.aidl b/core/java/com/android/internal/statusbar/IStatusBar.aidl
index bab0306aa..1e79bfb 100644
--- a/core/java/com/android/internal/statusbar/IStatusBar.aidl
+++ b/core/java/com/android/internal/statusbar/IStatusBar.aidl
@@ -65,6 +65,7 @@ oneway interface IStatusBar
 
     void dismissKeyboardShortcutsMenu();
     void toggleKeyboardShortcutsMenu(int deviceId);
+    void setStatusBarVisibility(int visibility);
 
     /**
      * Notifies the status bar that an app transition is pending to delay applying some flags with
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
index 6349275..caa8cb8 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
@@ -82,6 +82,7 @@ public class CommandQueue extends IStatusBar.Stub {
     private static final int MSG_TOGGLE_PANEL                  = 35 << MSG_SHIFT;
     private static final int MSG_SHOW_SHUTDOWN_UI              = 36 << MSG_SHIFT;
     private static final int MSG_SET_TOP_APP_HIDES_STATUS_BAR  = 37 << MSG_SHIFT;
+    private static final int MSG_SET_STATUS_BAR_VISIBILITY     = 38 << MSG_SHIFT;
 
     public static final int FLAG_EXCLUDE_NONE = 0;
     public static final int FLAG_EXCLUDE_SEARCH_PANEL = 1 << 0;
@@ -124,6 +125,7 @@ public class CommandQueue extends IStatusBar.Stub {
         default void toggleKeyboardShortcutsMenu(int deviceId) { }
         default void cancelPreloadRecentApps() { }
         default void setWindowState(int window, int state) { }
+        default void setStatusBarVisibility(int visibility) { };
         default void showScreenPinningRequest(int taskId) { }
         default void appTransitionPending(boolean forced) { }
         default void appTransitionCancelled() { }
@@ -336,6 +338,13 @@ public class CommandQueue extends IStatusBar.Stub {
         }
     }
 
+    public void setStatusBarVisibility(int visibility) {
+        synchronized (mLock) {
+            mHandler.removeMessages(MSG_SET_STATUS_BAR_VISIBILITY);
+            mHandler.obtainMessage(MSG_SET_STATUS_BAR_VISIBILITY, visibility, 0).sendToTarget();
+        }
+    }
+
     public void setWindowState(int window, int state) {
         synchronized (mLock) {
             // don't coalesce these
@@ -562,6 +571,11 @@ public class CommandQueue extends IStatusBar.Stub {
                         mCallbacks.get(i).toggleKeyboardShortcutsMenu(msg.arg1);
                     }
                     break;
+                case MSG_SET_STATUS_BAR_VISIBILITY:
+                    for (int i = 0; i < mCallbacks.size(); i++) {
+                        mCallbacks.get(i).setStatusBarVisibility(msg.arg1);
+                    }
+                    break;
                 case MSG_SET_WINDOW_STATE:
                     for (int i = 0; i < mCallbacks.size(); i++) {
                         mCallbacks.get(i).setWindowState(msg.arg1, msg.arg2);
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index 7dcff20..18d0d55 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -3259,6 +3259,11 @@ public class StatusBar extends SystemUI implements DemoMode,
         return mFingerprintUnlockController;
     }
 
+    @Override
+    public void setStatusBarVisibility(int visibility) {
+        mStatusBarWindow.setVisibility(visibility);
+    }
+
     @Override // CommandQueue
     public void setWindowState(int window, int state) {
         boolean showing = state == WINDOW_STATE_SHOWING;
diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java
index 2241266..335e5cd 100644
--- a/services/core/java/com/android/server/am/ActivityManagerService.java
+++ b/services/core/java/com/android/server/am/ActivityManagerService.java
@@ -10606,6 +10606,11 @@ public class ActivityManagerService extends IActivityManager.Stub
                             "exitFreeformMode: You can only go fullscreen from freeform.");
                 }
                 r.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+                StatusBarManagerInternal statusBarManager =
+                        LocalServices.getService(StatusBarManagerInternal.class);
+                if (statusBarManager != null) {
+                    statusBarManager.setStatusBarVisibility(View.GONE);
+                }
 
                 if (DEBUG_STACK) Slog.d(TAG_STACK, "exitFreeformMode: " + r);
                 r.getTask().reparent(FULLSCREEN_WORKSPACE_STACK_ID, ON_TOP,
diff --git a/services/core/java/com/android/server/am/ActivityStack.java b/services/core/java/com/android/server/am/ActivityStack.java
index 1998605..2749f04 100644
--- a/services/core/java/com/android/server/am/ActivityStack.java
+++ b/services/core/java/com/android/server/am/ActivityStack.java
@@ -2412,6 +2412,9 @@ class ActivityStack<T extends StackWindowController> extends ConfigurationContai
         if (mResumedActivity != null) {
             if (DEBUG_STATES) Slog.d(TAG_STATES,
                     "resumeTopActivityLocked: Pausing " + mResumedActivity);
+            if (mStackSupervisor.getFocusedStack().mStackId == FREEFORM_WORKSPACE_STACK_ID) {
+                pausing = false;
+            }
             pausing |= startPausingLocked(userLeaving, false, next, false);
         }
         if (pausing && !resumeWhilePausing) {
@@ -4609,6 +4612,9 @@ class ActivityStack<T extends StackWindowController> extends ConfigurationContai
         }
 
         mStackSupervisor.resumeFocusedStackTopActivityLocked();
+        if (mStackSupervisor.getFocusedStack().mStackId == FREEFORM_WORKSPACE_STACK_ID) {
+            mWindowManager.executeAppTransition();
+        }
         EventLog.writeEvent(EventLogTags.AM_TASK_TO_FRONT, tr.userId, tr.taskId);
 
         mService.mTaskChangeNotificationController.notifyTaskMovedToFront(tr.taskId);
diff --git a/services/core/java/com/android/server/statusbar/StatusBarManagerInternal.java b/services/core/java/com/android/server/statusbar/StatusBarManagerInternal.java
index 0884678..ba44e26 100644
--- a/services/core/java/com/android/server/statusbar/StatusBarManagerInternal.java
+++ b/services/core/java/com/android/server/statusbar/StatusBarManagerInternal.java
@@ -44,6 +44,8 @@ public interface StatusBarManagerInternal {
 
     void setWindowState(int window, int state);
 
+    void setStatusBarVisibility(int visibility);
+
     /**
      * Notifies the status bar that an app transition is pending to delay applying some flags with
      * visual impact until {@link #appTransitionReady} is called.
diff --git a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
index 38dc33f..9f8dd6e 100644
--- a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
+++ b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
@@ -278,6 +278,15 @@ public class StatusBarManagerService extends IStatusBarService.Stub {
         }
 
         @Override
+        public void setStatusBarVisibility(int visibility) {
+            if (mBar != null) {
+                try {
+                    mBar.setStatusBarVisibility(visibility);
+                } catch (RemoteException ex) {}
+            }
+        }
+
+        @Override
         public void setWindowState(int window, int state) {
             if (mBar != null) {
                 try {
-- 
2.7.4

